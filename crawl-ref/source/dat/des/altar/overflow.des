###############################################################################
# overflow.des: This is the place where vaults containing overflow altars go.
#
# Altar vaults do not just provide flavour. They are crucial for ensuring
# that granted gods without altars in the Temple will be present in the
# early part of the dungeon. Such altars are called "overflow temples".
# Sometimes, ordinary altar maps featuring a single C glyph (random altar)
# are used. However, there are also vaults dedicated to a special god.
# These look much more interesting, of course.
#
# There are two TAGs to be used for single-altar maps with a specified god:
#
# TAG: temple_overflow_1 temple_overflow_FOO
#      Says the map will only ever be used for overflow temples to god FOO.
#      (The 1 indicates there's only one god placed by this vault.)
# TAG: uniq_altar_FOO
#      If you also add this, then the map can be placed randomly. Random
#      placement will only occur after the deepest possible overflow depth.
#
# And there is a TAG if you want a single-altar map to a random god:
#
# TAG: temple_overflow_generic_1
#      Allows any of the overflow temple altars to be used.
#      For this, use one B glyph in your map.
#
# The level builder treats these tags specially, and vaults with
# a temple_overflow_FOO tag but without uniq_altar_FOO will not place as mini
# vaults. Generic overflow temples should not receive uniq_altar_ tags.
#
# Technical requirements for tags and depth directives for uniq_altar_*
# mini vaults
# - Add an interest_check(_G) if the vault is purely decorative to
#   automatically apply an extra tag as needed.
#
# If you want to check overflow temple placement in wizard mode, use the &:
# command. The levels overflow temples are placed on, and which gods are
# in them, are chosen at new-game time.
#
###############################################################################

: crawl_require('dlua/vault.lua')

{{
function interest_check(e)
  if not you.in_branch("D") or you.depth() > 10 then
    e.tags('extra')
  end
end

function get_overflow_altar_count(e)
  local params = dgn.map_parameters()
  if params ~= nil then
    local tag = unpack(params)
    if tag ~= nil then
      -- temple_overflow_generic_ is 24 characters
      local result = string.sub(tag, 25)
      if result ~= "" then return result end
    end
  end

  return nil
end

function callback.vampire_church_blood(data, triggerable, triggerer, marker, ev)
  local replicas = dgn.find_marker_positions_by_prop("replica_name", "vampire_church_blood")
  crawl.god_speaks("Kikubaaqudgha", "As you approach the altar, the fountains"
                                 .. " begin to flow with blood!")
  for i, replica in ipairs(replicas) do
    dgn.terrain_changed(replica.x, replica.y, "fountain_blood", false)
  end
end

function callback.hep_ancestral_shrine_los(data, triggerable, triggerer, marker, ev)
  if not dgn.persist.hep_ancestral_shrine_reborn and you.god() == "Hepliaklqana" then
    local trees = dgn.find_marker_positions_by_prop("dead_tree", 1)
    for i, replica in ipairs(trees) do
      dgn.tile_feat_changed(replica.x, replica.y, "DNGN_TREE")
    end
    dgn.reset_feature_name_for(trees[1].x, trees[1].y, "tree")
    local slime = dgn.find_marker_positions_by_prop("green_water", 1)
    for i, replica in ipairs(slime) do
      dgn.colour_at(replica.x, replica.y, "blue")
    end
    crawl.god_speaks("Hepliaklqana", "Let the past return from memory!")
    dgn.persist.hep_ancestral_shrine_reborn = true
  end
end

function callback.xom_greatest_gift(data, triggerable, triggerer, marker, ev)
  if not dgn.persist.xom_gg_heard and you.god() == "Xom" then
    dgn.persist.xom_gg_heard = true
    dgn.persist.xom_gg_granted = true
  elseif not dgn.persist.xom_gg_heard and you.god() ~= "Xom" then
    crawl.god_speaks("Xom", '"WORSHIP ME, MORTAL," Xom booms, "AND I SHALL'
                            .. ' GRANT YOU THE GREATEST GIFT OF ALL."')
    dgn.persist.xom_gg_heard = true
  elseif not dgn.persist.xom_gg_granted and you.god() == "Xom" then
    local pos = dgn.find_marker_positions_by_prop("gift", "altar")
    local gob = "generate_awake att:good_neutral goblin perm_ench:might " ..
                "perm_ench:haste perm_ench:invis perm_ench:repel_missiles " ..
                "perm_ench:resistant perm_ench:regen perm_ench:magic_res " ..
                "perm_ench:doubled_health perm_ench:mirror_dam perm_ench:swift"
    dgn.create_monster(pos[1].x, pos[1].y, gob)
    crawl.god_speaks("Xom", 'A goblin pops into existence! It looks at you'
                     .. ' with admiration.')
    crawl.god_speaks("Xom", '"Friendship. The greatest gift is friendship!"')

    dgn.persist.xom_gg_granted = true
  end
end

function callback.five_deadly_venoms(data, triggerable, triggerer, marker, ev)
  crawl.god_speaks("Wu Jian", "For a moment, you catch a glimpse of warriors who walked this path long ago.")
  local positions = dgn.find_marker_positions_by_prop(
    "positions", "five_deadly_venoms")
  for i, pos in ipairs(positions) do
    local x, y = pos:xy()
    dgn.create_monster(x, y, "generate_awake dur:1 " .. data.venoms[i])
  end
end

function species_mock(e)
  if you.race() == "Armataur" then
    return "rat"
  elseif you.race() == "Barachi" then
    return "cane toad"
  elseif you.race() == "Coglin" then
    return "hobgoblin skeleton"
  elseif you.race() == "Demigod" then
    return "titan simulacrum"
  elseif you.race() == "Demonspawn" then
    return "sin beast"
  elseif you.race() == "Djinni" then
    return "crimson imp"
  elseif you.race():find("Draconian") then
    return "wyvern"
  elseif you.race() == "Deep Elf" then
    return "will-o-the-wisp"
  elseif you.race() == "Gnoll" then
    return "jackal"
  elseif you.race() == "Mountain Dwarf" then
    return "goblin ; mundane hand axe . mundane ring mail"
  elseif you.race() == "Human" then
    return "killer klown"
  elseif you.race() == "Felid" then
    return "sphinx marauder zombie"
  elseif you.race() == "Formicid" then
    return "giant cockroach"
  elseif you.race() == "Gargoyle" then
    return "earth elemental"
  elseif you.race() == "Kobold" then
    return "boggart"
  elseif you.race() == "Merfolk" then
    return "bullfrog"
  elseif you.race() == "Minotaur" then
    return "yak"
  elseif you.race() == "Mummy" then
    return "human zombie"
  elseif you.race() == "Naga" then
    return "torpor snail"
  elseif you.race() == "Octopode" then
    return "tentacled monstrosity"
  elseif you.race() == "Oni" then
    return "ogre"
  elseif you.race() == "Poltergeist" then
    return "dancing weapon ; mundane dagger plus:-9"
  elseif you.race() == "Revenant" then
    return "ugly thing skeleton"
  elseif you.race() == "Spriggan" then
    return "unseen horror"
  elseif you.race() == "Tengu" then
    return "caustic shrike"
  elseif you.race() == "Troll" then
    return "ugly thing"
  elseif you.race() == "Vine Stalker" then
    return "thorn hunter"
  else
    return "spectral ugly thing"
  end
end

function callback.do_species_mock(data, triggerable, triggerer, marker, ev)
  if data.seen then return else data.seen = true end
  local positions = dgn.find_marker_positions_by_prop("mock_location", 1)
  local sp = species_mock()
  if you.race() == "Poltergeist" then
    sp = "dancing weapon"
  elseif you.race() == "Mountain Dwarf" then
    sp = "goblin"
  end
  crawl.god_speaks("Xom", '"I found one of your ancestors!"')
  for i, pos in ipairs(positions) do
    local x, y = pos:xy()
    dgn.create_monster(x, y, "generate_awake " .. species_mock())
  end
  crawl.mpr("A " .. sp .. " emerges from the mists of... memory?....")
end
}}

default-depth: D:3-, Depths

# These must feature one of the temple_overflow_* TAGs (see header).
# Altars are sorted alphabetically by god, with the Shining One coming
# after Zin. At the end, there are altar vaults which can be used for
# more than just one god.

### Ashenzari overflow altars #################################################

NAME:   ashenzari_altar_1
TAGS:   uniq_altar_ashenzari temple_overflow_1 temple_overflow_ashenzari
TAGS:   transparent decor
KFEAT:  _ = altar_ashenzari
: interest_check(_G)
MAP
b@b
@_@
b@b
ENDMAP

# A ruined temple
NAME:   evilmike_ruin_ashenzari
TAGS:   uniq_altar_ashenzari temple_overflow_1 temple_overflow_ashenzari
TAGS:   transparent decor
SUBST:  x = xxxxx-, - = ----.
TILE:   x = WALL_BRICK_VINES
FTILE:  -V_ = FLOOR_SANDSTONE
KFEAT:  _ = altar_ashenzari
SUBST:  - = .
: interest_check(_G)
MAP
      .......
      .xx+xx.
     ..x---x..
   ....x---x....
   .xxxx---xxxx.
  ..xV-xx+xx-Vx..
....x---------x....
.xxxxx-------xxxxx.
.x---x-------x---x.
.x---+---_---+---x.
.x---x-------x---x.
.xxxxx-------xxxxx.
....x---------x....
  ..xV-xx+xx-Vx..
   .xxxx---xxxx.
   ....x---x....
     ..x---x..
      .xxxxx.
      .......
ENDMAP

NAME:   ashenzari_conservatory_becter
TAGS:   temple_overflow_1 temple_overflow_ashenzari transparent decor
TAGS:   uniq_altar_ashenzari no_descent
KFEAT:  _ = altar_ashenzari
: interest_check(_G)
MAP
   .....
 .........
 .........
....mmm....
....m_m....
....c+c....
xxxxx.xxxxx
     @
ENDMAP

NAME:  cheibrodos_ashenzari_chains
TAGS:  temple_overflow_1
TAGS:  temple_overflow_ashenzari uniq_altar_ashenzari transparent decor
TAGS:  uniq_altar_ashenzari
KFEAT: _ = altar_ashenzari
KFEAT: m = iron_grate
: interest_check(_G)
MAP
.............
.mmm.....mmm.
.mcmmc_cmmcm.
.mmm.....mmm.
.............
ENDMAP

NAME:   nicolae_ashenzari_panopticon
TAGS:   uniq_altar_ashenzari temple_overflow_1 temple_overflow_ashenzari
TAGS:   transparent decor vaults_empty
DEPTH:  D:3-, Vaults, !Vaults:$, Depths
WEIGHT: 3 (Vaults), 10
KFEAT: _ = altar_ashenzari
SHUFFLE: ABCDEF/abcdef
SUBST: ACEbdf = x, Ba = m, Dc = ., Fe = @
NSUBST: m = + / m
: interest_check(_G)
MAP
E....F..E..F...CE
CC...D..C..D..CC.
.CC..DD.C.DD.CC..
..CC..D.C.D.CC...
...CC.DDCDDCC....
FDD.CC.DCDCC..DDF
..DDDCABABA.DDD..
....DDB...BDD....
ECCCCCA._.ACCCCCE
....DDB...BDD....
..DDD.ABABACDDD..
FDD..CCDCD.CC.DDF
....CCDDCDD.CC...
...CC.D.C.D..CC..
..CC.DD.C.DD..CC.
.CC..D..C..D...CC
EC...F..E..F....E
ENDMAP

NAME:   nicolae_ashenzari_skybound
TAGS:   temple_overflow_ashenzari temple_overflow_1 decor
TAGS:   transparent uniq_altar_ashenzari
KFEAT:  _ = altar_ashenzari
COLOUR: m = blue
: interest_check(_G)
MAP
    ..@..
   .......
 ...mmmmm...
..mmm...mmm..
.mm.v._.v.mm.
.m..v...v..m.
mm..vv+vv..mm
m...........m
m    .@.    m
ENDMAP

### Cheibriados overflow altars ###############################################

NAME:   cheibriados_altar_2
TAGS:   uniq_altar_cheibriados temple_overflow_1 temple_overflow_cheibriados
TAGS:   transparent decor
WEIGHT: 1
KPROP:  1 = no_tele_into
KFEAT:  _ = altar_cheibriados
MONS:   torpor snail
SUBST:  1 : 1:50 2:30 3:10 4:10
NSUBST: 4 = 1:1 / 1:2 / 1:3
KMASK: 1234 = opaque
: interest_check(_G)
MAP
.......
.mmm...
.m1m...
.mmmmm.
.._m1m.
.mmmmm.
.m1m...
.mmm...
.......
ENDMAP

NAME:  slow_altar_1
TAGS:  patrolling no_monster_gen no_item_gen transparent
TAGS:  uniq_altar_cheibriados temple_overflow_1 temple_overflow_cheibriados
DEPTH: D:3-, Snake, Depths
: if you.in_branch("Depths") then
KMONS: _ = iron dragon
: elseif you.in_branch("Snake") then
KMONS: _ = naga sharpshooter
: else
KMONS: _ = ribbon worm / bombardier beetle
SUBST: v : vx
: end
KFEAT: _ = altar_cheibriados
SUBST: x : xxxcccmnvb
: interest_check(_G)
MAP
xxx..@..xxx
xxx.....xxx
xxv.....vxx
...........
...........
@...._....@
...........
...........
xxv.....vxx
xxx.....xxx
xxx..@..xxx
ENDMAP

NAME:    slow_altar_2
TAGS:    patrolling no_monster_gen no_item_gen transparent
TAGS:    uniq_altar_cheibriados temple_overflow_1 temple_overflow_cheibriados
DEPTH: D:3-, Snake, Depths
: if you.in_branch("Depths") then
KMONS: _ = iron dragon
: elseif you.in_branch("Snake") then
KMONS: _ = naga sharpshooter
: else
KMONS: _ = ribbon worm / bombardier beetle
SUBST: v : vx
: end
KFEAT:   _ = altar_cheibriados
SUBST:   x : xxxcccvb
: interest_check(_G)
MAP
x@@G@@x
x.....x
x.....x
xx+++xx
x.....x
x.....x
x.....x
x.....x
x.._..x
xxxxxxx
ENDMAP

NAME:   chei_slow_surprise
TAGS:   uniq_altar_cheibriados temple_overflow_1
TAGS:   temple_overflow_cheibriados transparent no_monster_gen
TAGS:   transparent
WEIGHT: 5
: if you.in_branch("Depths") then
KMONS: _ = iron dragon
:else
KMONS: _ = ribbon worm / bombardier beetle
:end
NSUBST: ' = 1:a / *:.
KFEAT:  _ = altar_cheibriados
: interest_check(_G)
MAP
 ........
..xxxxxx..
.xx''''xx.
.x'xxxx'x.
.x'm.<x'x.
.xx+._x'x.
..xxxxx'x.
.x.....xx.
.xxxxxxx..
.........
ENDMAP

NAME:   cheibrodos_worm_habitat
TAGS:   no_item_gen no_monster_gen temple_overflow_1 transparent
TAGS:   temple_overflow_cheibriados uniq_altar_cheibriados
DEPTH:  D:3-
WEIGHT: 5
KFEAT:  _ = altar_cheibriados
MONS:   ribbon worm
: interest_check(_G)
MAP
.............
.xxxxx.xxxxx.
.xTWWxxxWWTx.
.xWWWWWWWWWx.
.xWWWxWxWWWx.
.xxWxx.xxWxx.
..xWm._.mWx..
.xxWxx1xxWxx.
.xWWWxmxWWWx.
.xWWWWWWWWWx.
.xTWWx+xWWTx.
.xxxxx.xxxxx.
......@......
ENDMAP

NAME:   kennysheep_slug_shrine
TAGS:   temple_overflow_1 temple_overflow_cheibriados
TAGS:   no_pool_fixup no_monster_gen transparent uniq_altar_cheibriados
DEPTH:  D:3-
MONS:   patrolling dart slug
KMASK:  1 = opaque
KFEAT:  _ = altar_cheibriados
: interest_check(_G)
MAP
  .WWW
 .WwwwWbb
@.Ww1WW_b
 .WwwwWbb
  .WWW
ENDMAP

### Dithmenos overflow altars ################################################

NAME:   grunt_dithmenos_smoke
TAGS:   uniq_altar_dithmenos temple_overflow_1 temple_overflow_dithmenos
TAGS:   transparent decor
KFEAT:  C = altar_dithmenos
MARKER: C = lua:fog_machine { cloud_type = "black smoke", \
                              pow_min = 10, pow_max = 20, \
                              delay = 100, size = 1, walk_dist = 1 }
: interest_check(_G)
MAP
...
.C.
...
ENDMAP

# Reflect upon the darkness, mortal.
NAME:   grunt_dithmenos_smoke_and_mirrors
TAGS:   uniq_altar_dithmenos temple_overflow_1 temple_overflow_dithmenos
TAGS:   transparent decor
KFEAT:  C = altar_dithmenos
KFEAT:  O = .
MARKER: O = lua:fog_machine { cloud_type = "black smoke", \
                              pow_min = 25, pow_max = 25, \
                              delay = 30, size = 1, walk_dist = 0 }
: interest_check(_G)
MAP
  b@b
 b.O.b
b.b.b.b
@O.C.O@
b.b.b.b
 b.O.b
  b@b
ENDMAP

NAME:  grunt_dithmenos_shadows
TAGS:  uniq_altar_dithmenos temple_overflow_1 temple_overflow_dithmenos decor
TAGS:  transparent
DEPTH: D:5-
KFEAT: C = altar_dithmenos
{{
  if you.absdepth() >= 9 then
     mons("shadowghast")
  else
     local imp_weight = 9 - you.depth()
     if imp_weight > 0 then
         local phantom_weight = 9 - imp_weight
         mons("phantom w:" .. phantom_weight ..
              " / shadow imp w:" .. imp_weight)
     else
         mons("shadow imp")
     end
  end
}}
: interest_check(_G)
MAP
ccccc
c.C.c
c.1.c
c...c
cc+cc
ENDMAP

NAME: nicolae_dithmenos_the_darkroom
TAGS: temple_overflow_dithmenos temple_overflow_1 uniq_altar_dithmenos
TAGS: decor transparent
KFEAT: _ = altar_dithmenos
MARKER: ' = lua:fog_machine { cloud_type = "black smoke", pow_min = 30, \
   pow_max = 50, delay_min = 50, delay_max = 90, size = 1, walk_dist = 1, \
   spread_rate = 10 }
: interest_check(_G)
MAP
xxxx@@@xxxx
xxx.....xxx
xx'.....'xx
x.........x
@.........@
@...._....@
@.........@
x.........x
xx'.....'xx
xxx.....xxx
xxxx@@@xxxx
ENDMAP

NAME: nicolae_dithmenos_shadow_blocks
TAGS: temple_overflow_dithmenos temple_overflow_1 uniq_altar_dithmenos
TAGS: decor transparent
COLOUR: s' = magenta, c = white
TILE: c = dngn_stone_wall_white
TILE: s = dngn_stone_dark
FTILE: 's_ = floor_pebble_darkgray
KFEAT: cs = stone_wall
KFEAT: _ = altar_dithmenos
: interest_check(_G)
MAP
      .....
      ..c..
  .....ccc.....
  .cc..scs..cc.
  .ccs''s''scc.
  ..ss'''''ss..
....'''''''''....
..cs'''''''''sc..
.cccs'''_'''sccc.
..cs'''''''''sc..
....'''''''''....
  ..ss'''''ss..
  .ccs''s''scc.
  .cc..scs..cc.
  .....ccc.....
      ..c..
      .....
ENDMAP

NAME: nicolae_dithmenos_through_a_glass_darkly
TAGS: temple_overflow_dithmenos uniq_altar_dithmenos temple_overflow_1
TAGS: decor transparent
COLOUR: x = magenta, m = lightmagenta
TILE: m = dngn_transparent_wall_darkgray
TILE: x = wall_brick_darkgray
KFEAT: _ = altar_dithmenos
: interest_check(_G)
MAP
  ..xxx
 .....xx
...mm..xx
..mm....x
@.m._...x
..mm....x
...mm..xx
 .....xx
  ..xxx
ENDMAP

### Elyvilon overflow altars ##################################################

NAME:   elyvilon_altar_1
TAGS:   uniq_altar_elyvilon temple_overflow_1 temple_overflow_elyvilon
TAGS:   transparent decor vaults_empty
DEPTH:  D:3-, Vaults, !Vaults:$, Depths
WEIGHT: 1 (Vaults), 10
MONS:   plant, bush, fungus
KMONS:  4 = sacred lotus
KFEAT:  C = altar_elyvilon
KFEAT:  4 = W
SUBST:  X : T G t 1 2 3 4:30
: interest_check(_G)
: if you.in_branch("Vaults") then
CLEAR:  @x
: end
MAP
      xx@xx
      x...x
      x.X.x
      x...x
      xx.xx
       x.x
xxxxx xx.xx xxxxx
x...xxx...xxx...x
@.X.....C.....X.@
x...xxx...xxx...x
xxxxx xx.xx xxxxx
       x.x
      xx.xx
      x...x
      x.X.x
      x...x
      xx@xx
ENDMAP

NAME:   elyvilon_altar_3
TAGS:   uniq_altar_elyvilon temple_overflow_1 temple_overflow_elyvilon
TAGS:   no_pool_fixup decor transparent
KFEAT:  C = altar_elyvilon
KMASK:  wW = no_monster_gen
: interest_check(_G)
: decorative_floor(_G, '13', "flower patch")
MAP
       xxxxxxxxxxxxxxx
      xxtttttttttttttxx
      xtttttttttttttttx
      ttttttttptttttttt
  .....ttttt.....ttttt.....
 .......ttt.......ttt.......
...wWw...t...wWw...t...wWw...
..wwWww.....wwWww.....wwWww..
@.WWtWW.....WWCWW.....WWtWW.@
..wwWww.....wwWww.....wwWww..
...wWw...t...wWw...t...wWw...
 .......ttt.......ttt.......
  .....ttttt.....ttttt.....
      ttttttttptttttttt
      xtttttttttttttttx
      xxtttttttttttttxx
       xxxxxxxxxxxxxxx
ENDMAP

NAME:   elyvilon_altar_4
TAGS:   uniq_altar_elyvilon temple_overflow_1 temple_overflow_elyvilon
TAGS:   no_monster_gen transparent patrolling decor vaults_empty
DEPTH:  D:3-, Vaults, !Vaults:$
WEIGHT: 1 (Vaults), 5
KFEAT:  C = altar_elyvilon
: local g = "att:good_neutral"
: kmons("1 = quokka " .. g .. " w:30 / bombardier beetle " .. g)
: kmons("2 = bat " .. g .. " / rat " .. g .. " / butterfly " .. g)
: kmons("3 = yak tile:mons_yak_bow " .. g)
: if you.absdepth() > 10 then
SUBST:  2 = 3
FTILE:  'CFJt = floor_grass
:   decorative_floor(_G, '13', "garden patch")
: else
FTILE:  '12CFJt = floor_grass
: end
COLOUR: '123 = green
KMASK:  '123CFJ = opaque
MARKER: E = lua:transp_loc("ely_altar_entry")
MARKER: F = lua:transp_dest_loc("ely_altar_entry")
MARKER: J = lua:transp_loc("ely_altar_exit")
MARKER: K = lua:transp_dest_loc("ely_altar_exit")
: interest_check(_G)
MAP
xxx..@..xxx
xWW.....WWx
xWccctcccWx
..c1''''c..
@EnF'C'JnK@
..c''''2c..
xWccctcccWx
xWW.....WWx
xxx..@..xxx
ENDMAP

NAME:   elyvilon_altar_5
TAGS:   uniq_altar_elyvilon temple_overflow_1 temple_overflow_elyvilon decor transparent
KFEAT:  C = altar_elyvilon
KMASK:  T = no_monster_gen
: interest_check(_G)
MAP
.............
.c.c.c.c.c.c.
.............
...T.....T...
@.....C.....@
...T.....T...
.............
.c.c.c.c.c.c.
.............
ENDMAP

NAME:  nicolae_elyvilon_peaceful_grove
TAGS:  temple_overflow_elyvilon temple_overflow_1 transparent decor
TAGS:  uniq_altar_elyvilon
KFEAT: _ = altar_elyvilon
KMONS: P = bush w:20 / nothing
KMONS: _ = patrolling butterfly att:good_neutral
: interest_check(_G)
MAP
ww.PtttP.ww
wwP..P..Pww
.PPtt.ttPP.
P.ttP.Ptt.P
t.tP...Pt.t
tP..._...Pt
t.tP...Pt.t
P.ttP.Ptt.P
.PPtt.ttPP.
wwP..P..Pww
ww.PtttP.ww
ENDMAP

NAME:  nicolae_elyvilon_temple_path
TAGS:  temple_overflow_elyvilon temple_overflow_1 decor no_pool_fixup
TAGS:  transparent no_trap_gen uniq_altar_elyvilon
KMONS: p = plant
KMONS: s = sacred lotus
KFEAT: s = w
KFEAT: _ = altar_elyvilon
SUBST: s : sswww, p = ppp....
: interest_check(_G)
MAP
  ccccc
 ccwwwcc @ppppppppp
ccswUwwccppcppcppcp
cww...wwwwwwwwwwwww
cwU._..............@
cww...wwwwwwwwwwwww
ccswUwwccppcppcppcp
 ccwwwcc @ppppppppp
  ccccc
ENDMAP

### Fedhas overflow altars ####################################################

NAME:   fedhas_altar_1
TAGS:   uniq_altar_fedhas temple_overflow_1 temple_overflow_fedhas
TAGS:   transparent decor
KFEAT:  C = altar_fedhas
MONS:   plant
: interest_check(_G)
MAP
.....
.1.1.
..C..
.1.1.
.....
ENDMAP

NAME:    fedhas_altar_2
TAGS:    uniq_altar_fedhas temple_overflow_1 temple_overflow_fedhas
TAGS:    transparent no_pool_fixup decor
KMONS:   1 = sacred lotus
KMONS:   2 = plant
KFEAT:   1 = w
KFEAT:   2 = W
KFEAT:   C = altar_fedhas
SHUFFLE: abcd, efghij
SUBST:   a = W, b : 112ww, c : Ww, d = w, e : Ww., f : W2.., g : W.., hij = .
: interest_check(_G)
MAP
.efg.
jabch
idCdi
hcbaj
.gfe.
ENDMAP

NAME:   fedhas_altar_3
TAGS:   uniq_altar_fedhas temple_overflow_1 temple_overflow_fedhas
TAGS:   transparent decor
KFEAT:  C = altar_fedhas
NSUBST: b = 1:. / *:1
MONS:   plant w:5 / fungus / nothing w:3
: interest_check(_G)
MAP
@111@
1b1b1
11C11
1b1b1
@111@
ENDMAP

NAME:   fedhas_altar_4
TAGS:   uniq_altar_fedhas temple_overflow_1 temple_overflow_fedhas transparent
TAGS:   decor
KFEAT:  C = altar_fedhas
FTILE:  .pt = floor_moss
: decorative_floor(_G, 'p', "flower patch")
: interest_check(_G)
MAP
xxxxxxxxxxxxxxx
xxxtttttttxxxxx
xxtttttttttxxxx
xttttp.tttttxxx
xtttt.C.ttttttt
xxtttt.p.tttt..
xxttttt.......@
xxxxttttttttt..
xxxxxxttttttttx
xxxxxxxtttttttx
xxxxxxxxxxxxxxx
ENDMAP

# The oklob plant may be abusable (if so, remove it).
NAME:    tgw_fedhas
TAGS:    no_item_gen no_monster_gen
TAGS:    temple_overflow_1 temple_overflow_fedhas uniq_altar_fedhas
DEPTH:   D:3-, Lair
KFEAT:   _ = altar_fedhas
KPROP:   xzd3P = no_tele_into
MONS:    plant, fungus, oklob plant, bush, toadstool
KMONS:   S = sacred lotus
KFEAT:   d = floor
KFEAT:   S = w
KFEAT:   C = c
SUBST:   x = TTPPPPP.
# Only make "oklob behind bushes" situation possible a bit deeper.
: if you.absdepth() > 5 then
SHUFFLE: PQR
SUBST:   Q = 114, R = 11124
: end
SUBST:   P = 112, z = ., S : Sww
SHUFFLE: ...", TU
SUBST:   T = xt, U = xx
SUBST:   " = .....5
COLOUR:  . = green / none
COLOUR:  ' = green
TILE:    c = dngn_stone_wall_green
TILE:    C = wall_stone_puffball
: interest_check(_G)
MAP
cccccccccCcCcCccccccccc
cxxxxxxxxxxxxxxxxxxxxxc
cxxxxxxxxxxxxxxPxxd3xxc
cxxxxxxxxxxxxxxPddddxxc
cxxxxxxxxxxxxxxPPPxzdxc
cxxxxxxx.......xxPPxxxc
cxxxxxx..ww.ww..xxPPxxc
cxxxxx..www.www..xxxPxc
cxxxx..wwww.wwww..xxxxc
Cxxxx.wwwww.wwwww.xxxxC
cxxxx.wwww'''wwww.xxxxc
Cxxxx.wSww'_'wwSw.xxxxC
cxxxx.wwww'''wwww.xxxxc
Cxxxx.wwwwwwwwwww.xxxxC
cxxxx..wwwwwwwww..xxxxc
cxxxxx..wwwwwww..xxxxxc
cxxxxxx..wwwww..xxxxxxc
cxxxxxxx.......xxxxxxxc
cxxxxxxxxxC.Cxxxxxxxxxc
cxxxxxxxxxc.cxxxxxxxxxc
ccccccccCcC@CcCcccccccc
ENDMAP

NAME:   fedhas_ov_isle_minmay
TAGS:   temple_overflow_1 temple_overflow_fedhas uniq_altar_fedhas
TAGS:   no_monster_gen transparent no_descent
DEPTH:  D:3-, !D:$
MONS:   plant / bush w:5
KMONS:  S = sacred lotus
KFEAT:  S = w
KFEAT:  % = cache of fruit
SUBST:  S : Sww
NSUBST: 1 = 1:' / * = 111t''', 2 = 1:%'' / * = 111t'''
KFEAT:  _ = altar_fedhas
KMASK:  _1%'<> = opaque
: interest_check(_G)
MAP
     .....
   ...www...
  ..wwwwwww..
 ..wwwwwwwww..
 .wwwwwwwwwww.
..wwww1<1wwww..
.wwww12221wwww.
.wwSw12_21wSww.
.wwww12221wwww.
..wwww1>1wwww..
 .wwwwwwwwwww.
 ..wwwwwwwww..
  ..wwwwwww..
   ...www...
     .....
ENDMAP

NAME:    fedhas_altar_fruit_tree
TAGS:    uniq_altar_fedhas temple_overflow_1 temple_overflow_fedhas transparent
TAGS:    no_item_gen no_rotate no_vmirror decor
KFEAT:   de = cache of fruit
KFEAT:   C = altar_fedhas
SHUFFLE: defghijk
SUBST:   fghijk = .
COLOUR:  . = green
COLOUR:  '@ = brown
FTILE:   .det = floor_moss
FTILE:   '@ = floor_hall
: interest_check(_G)
MAP
xxxxxxxxxxxxxxxxx
xtttttttttttttttx
xtttttttttttttttx
xtttttt...ttttttx
xtttttg...gtttttx
xtttt.......ttttx
xtttf...C...ftttx
xttt.........tttx
xtt...e...e...ttx
xttdt.......tdttx
xtttttt'''ttttttx
xtttttt'''ttttttx
xttttt''@''tttttx
ENDMAP

NAME:  fedhas_bush_and_centaur_altar
TAGS:  temple_overflow_1 temple_overflow_fedhas uniq_altar_fedhas transparent
# Centaur depth
DEPTH: D:5-13
KFEAT: _ = altar_fedhas
MONS:  centaur, bush
MAP
    x
 .......
 .2222..
 .21222.
x.22_22.x
 ...22..
 .222...
    x
ENDMAP

NAME:   fedhas_altar_decomposition
TAGS:   uniq_altar_fedhas temple_overflow_1 temple_overflow_fedhas transparent
TAGS:   no_item_gen no_monster_gen no_trap_gen
DEPTH:  D:4-8
MONS:   bush, plant
ITEM:   random skeleton
KFEAT:  _ = altar_fedhas
FTILE:  '!12@ = floor_moss
COLOUR: '!@ = green
NSUBST:  d = 3:d / 3:e / 3 = e. / *:.
KPROP:  .3 = no_tele_into
: dgn.delayed_decay(_G, "e", "random corpse")
MAP
 xxxxxxxxx
xx.ddddd.xx
x.dd222dd.x
x.d21112d.x
x.d21_12d.x
x.d21'12d.x
x.d2x'x2d.x
x..dx'xd..x
xxxxx'xxxxx
   xx'xx
   x2@2x
ENDMAP

### Gozag overflow altars #####################################################

NAME:   grunt_gozag_statues
TAGS:   transparent no_item_gen no_monster_gen no_trap_gen temple_overflow_1
TAGS:   temple_overflow_gozag uniq_altar_gozag vaults_empty no_wall_fixup decor
DEPTH:  D:3-, Vaults, !Vaults:$, Depths
WEIGHT: 3 (Vaults), 10
KFEAT:  _ = altar_gozag
COLOUR: x = yellow
FTILE:  _-G = floor_limestone
TILE:   x = wall_sandstone
: vault_metal_statue_setup(_G, "G", "golden statue")
: if you.in_branch("Vaults") then
CLEAR:  @
: end
: interest_check(_G)
MAP
     @
  xxx-xxx
 xx-----xx
 x-G---G-x
 x-------x
@----_----@
 x-------x
 x-G---G-x
 xx-----xx
  xxx-xxx
     @
ENDMAP

NAME:   grunt_gozag_breadcrumbs
TAGS:   transparent no_item_gen no_monster_gen no_trap_gen temple_overflow_1
TAGS:   temple_overflow_gozag uniq_altar_gozag decor
TAGS:   no_wall_fixup vaults_empty vaults_orient_w
DEPTH:  D:3-, Vaults, !Vaults:$, Depths
WEIGHT: 3 (Vaults), 10
KFEAT:  _ = altar_gozag
ITEM:   gold q:1 no_pickup
KITEM:  e = gold q:1
FTILE:  _-Ge = floor_limestone
RTILE:  x = wall_sandstone
COLOUR: x = yellow
: vault_metal_statue_setup(_G, "G", "golden statue")
: interest_check(_G)
MAP
        xxxxx
.@......x-eGx
@d.d.d.d-e-_x
.@......x-eGx
        xxxxx
ENDMAP

NAME:  nicolae_gozag_cash_rules_everything_around_me
TAGS:  temple_overflow_gozag temple_overflow_1 uniq_altar_gozag \
       no_hmirror no_vmirror no_rotate no_item_gen transparent decor
KFEAT: _ = altar_gozag
: interest_check(_G)
MAP
bbb@bbb
b....$b
b.b.bbb
b.._..b
bbb.b.b
b$....b
bbb@bbb
ENDMAP

# No, you probably can't afford any of it.
# You should have thought of that before being poor.
NAME:   nicolae_gozag_zags_fifth_avenue
TAGS:   temple_overflow_gozag temple_overflow_1 uniq_altar_gozag
TAGS:   no_pool_fixup no_item_gen no_monster_gen decor transparent
TAGS:   vaults_empty vaults_orient_e
DEPTH:  D:3-, Vaults, !Vaults:$, Depths
WEIGHT: 1 (Vaults), 5
FTILE:  '_TS = floor_limestone
KFEAT:  _ = altar_gozag
KFEAT:  S = general shop name:Gozag type:Platinum suffix:Reserve count:4 \
        greed:100 ; any weapon randart | any armour randart | any jewellery randart
: interest_check(_G)
MAP
wwwwwww....
w'''''wwww.
w'T'T''''w.
w''S'''_''@
w'T'T''''w.
w'''''wwww.
wwwwwww....
ENDMAP

NAME:  nicolae_gozag_seed_capital
TAGS:  temple_overflow_gozag temple_overflow_1 uniq_altar_gozag decor
TAGS:  transparent no_item_gen
DEPTH: D:3-, Vaults, !Vaults:$, Depths
ITEM:  gold q:1 no_pickup / gold q:2 no_pickup
KFEAT: _ = altar_gozag
: interest_check(_G)
MAP
ddd
d_d
ddd
ENDMAP

NAME:   nicolae_gozag_conspicuous_consumption
TAGS:   temple_overflow_gozag temple_overflow_1 no_pool_fixup decor
TAGS:   transparent no_trap_gen uniq_altar_gozag vaults_empty
DEPTH:  D:3-, Vaults, !Vaults:$, Depths
WEIGHT: 1
KITEM:  $ = gold
KFEAT:  _ = altar_gozag
KPROP:  $ = no_tele_into
KMASK:  $ = opaque
KMASK:  $ = no_monster_gen
TILE:   G = dngn_golden_statue
TILE:   n = dngn_transparent_stone_yellow
TILE:   m = dngn_transparent_wall_yellow
FTILE:  ._Gmn$U = floor_limestone
COLOUR: .mn$U = yellow
: vault_metal_statue_setup(_G, "G", "golden statue")
MAP
    .....
 G...._....G
 ...G...G...
 ..UwwwwwU..
..GwnmmmnwG..
...wm$$$mw...
._.wm$$$mw._.
...wm$$$mw...
..GwnmmmnwG..
 ..UwwwwwU..
 ...G...G...
 G...._....G
    .....
ENDMAP

### Hepliaklqana overflow altars #############################################

NAME:   worldfamousw_hep_ancestral_shrine
TAGS:   uniq_altar_hepliaklqana temple_overflow_hepliaklqana temple_overflow_1
TAGS:   no_monster_gen no_item_gen no_pool_fixup transparent
KFEAT:  _ = altar_hepliaklqana
COLOUR: w = green
TILE:   G = dngn_gravestone
COLOUR: t = brown
TILE:   t = DNGN_TREE_DEAD
{{
set_feature_name("granite_statue", "a gravestone")
set_feature_name("tree", "dead tree")
dgn.persist.hep_ancestral_shrine_reborn = false

local los_marker = TriggerableFunction:new {
  func="callback.hep_ancestral_shrine_los",
  repeated=true
}
los_marker:add_triggerer(DgnTriggerer:new {
  type="player_los"})

lua_marker('_', los_marker)
lua_marker("t", portal_desc { dead_tree=1 })
lua_marker("w", portal_desc { green_water=1 })
}}
MAP
 xxxxx
xxwwwxx
xwwwwwx
xwwwwwx
xwtGtwx
xt...tx
x.._..x
xt...tx
xxt.txx
 xx+xx
   @
ENDMAP

NAME:   nzn_hepliaklqana_mist_gate
TAGS:   temple_overflow_1 temple_overflow_hepliaklqana no_monster_gen
TAGS:   transparent decor uniq_altar_hepliaklqana
KFEAT:  _ = altar_hepliaklqana
MARKER: A = lua:fog_machine { cloud_type = "grey smoke", pow_min = 20, \
                              pow_max = 40, delay = 10, size = 1, \
                              spread_rate = -1 }
: interest_check(_G)
MAP
xxxxx
x...x
x._.x
x...x
xx.xx
 xAx
 x.x
  @
ENDMAP

# A long-forgotten ecumenical temple. Only Hepliaklqana clearly remains,
# although a few forgotten altars are still around.
NAME:   nicolae_hepliaklqana_ecumenical_no_more
TAGS:   temple_overflow_hepliaklqana temple_overflow_1 transparent decor
TAGS:   uniq_altar_hepliaklqana
WEIGHT: 3
KMONS:  WD = plant / nothing
NSUBST: E = - / E, H = _ / - / E, E = E / . / E., P = 4=W / WDD / D
SUBST:  ' = '''., c = ccx
KFEAT:  WS = W
KFEAT:  _ = altar_hepliaklqana
KFEAT:  - = altar_ecumenical
FTILE:  WVD = floor_mud
COLOUR: D = darkgrey
FTILE:  ' = floor_w_marble
COLOUR: ' = white
FTILE:  _-E = floor_limestone
COLOUR: E = yellow
: interest_check(_G)
MAP
xxxxx.@.xxxxx
xxccxx+xxccxx
xccc''.''cccx
xcc''E'E''ccx
xc'''''''''cx
xc'E'PPP'E'cx
xc'''PVP'''cx
xc'H'PPP'H'cx
xc'''''''''cx
xcc''H'H''ccx
xccc'''''cccx
xxcccccccccxx
xxxxxxxxxxxxx
ENDMAP

NAME:   nicolae_hepliaklqana_hazy_memory
TAGS:   temple_overflow_hepliaklqana temple_overflow_1 transparent decor
TAGS:   uniq_altar_hepliaklqana
MONS:   plant
SUBST:  ' = ..', . = ...1
CLEAR:  '
KFEAT:  _ = altar_hepliaklqana
MARKER: _ = lua:fog_machine { cloud_type = "thin mist", size = 1, pow_min = 5, \
  pow_max = 7, delay = 10, start_clouds = 1, walk_dist = 5, spread_rate = 10 }
: interest_check(_G)
MAP
    '''
 ''''.''''
 '.'.'.'.'
 ''.'''.''
''.'...'.''
'.''._.''.'
''.'...'.''
 ''.'''.''
 '.'.'.'.'
 ''''.''''
    '''
ENDMAP

# Or should that be "heppocampus"...?
NAME:  nicolae_hepliaklqana_hippocampus
TAGS:  temple_overflow_hepliaklqana temple_overflow_1 transparent decor
TAGS:  uniq_altar_hepliaklqana
KFEAT: _ = altar_hepliaklqana
SUBST: D = cxx, E = cx
: interest_check(_G)
MAP
    xxxxxxxx
   @....xxxx
    xxx..xxx
xxxxxxxx.xxx
xcccccxx..xx
xc...cxx..xx
xc._.cxD..xx
xc...cxD..Dx
xc..ccxD..Dx
xc...EE...Dx
xc........Dx
xcE......DDx
xxEEEEEDDDxx
xxxxxxxxxxxx
ENDMAP

NAME:    nicolae_hepliaklqana_monster_ancestors
TAGS:    temple_overflow_hepliaklqana temple_overflow_1 transparent
TAGS:    uniq_altar_hepliaklqana
TAGS:    patrolling no_monster_gen no_trap_gen
: if you.in_branch("Depths") then
MONS:   deep troll earth mage, spectral deep troll earth mage, tengu reaver
MONS:   spectral tengu reaver, spriggan defender, spectral spriggan defender
MONS:   hell knight
KMONS:  D = spectral hell knight
:else
MONS:    goblin, spectral goblin, kobold, spectral kobold, hobgoblin
MONS:    spectral hobgoblin, orc
KMONS:   D = spectral orc
:end
SHUFFLE: 12 / 34 / 56 / 7D
KFEAT:   _ = altar_hepliaklqana
: interest_check(_G)
MAP
xxxxxxxxx
xxwwwwwxx
x..1....x
+....._.x
x..2....x
xxwwwwwxx
xxxxxxxxx
ENDMAP

NAME:    beargit_hepliaklqana_dungeon_heroes
TAGS:    temple_overflow_hepliaklqana temple_overflow_1 transparent
TAGS:    no_monster_gen patrolling no_trap_gen uniq_altar_hepliaklqana
SHUFFLE: 123, _-G
: if you.in_branch("D") then
:     if you.depth() < 5 then
KMONS:   1 = orc wizard; quarterstaff . robe
# Extremely early for kobold brigands, but they get a wand of polymorph
# instead of darts, so less threatening.
KMONS:   2 = jessica; dagger . robe . wand of polymorph / \
             kobold brigand ; dagger . wand of polymorph, \
             kobold brigand ; dagger . wand of polymorph
KMONS:   3 = orc ; flail . kite shield . chain mail
# Only generate one ancestor monster for D:3-9
NSUBST:  123 = 2:.
:     elseif you.depth() < 7 then
KMONS:   1 = blorkula the orcula ; quarterstaff good_item . robe / \
             orc wizard ; quarterstaff good_item . robe, \
             orc wizard ; quarterstaff good_item . robe
KMONS:   2 = sigmund; halberd itemname:scythe tile:wpn_scythe wtile:scythe ego:draining . robe / \
             kobold brigand ; dagger ego:draining . dart ego:atropa, \
             kobold brigand ; dagger ego:draining . dart ego:atropa
KMONS:   3 = edmund ; flail good_item . kite shield . chain mail / \
             orc warrior ; flail good_item . kite shield . chain mail / \
             gnoll sergeant ; flail good_item . kite shield . chain mail, \
             orc warrior ; flail good_item . kite shield . chain mail / \
             gnoll sergeant ; flail good_item . kite shield . chain mail
NSUBST:  123 = 2:.
:     elseif you.depth() < 10 then
MONS:    gargoyle ; quarterstaff good_item
MONS:    kobold brigand ; dagger ego:draining good_item . wand of paralysis . \
                          dart ego:atropa / \
         spriggan ; dagger ego:draining good_item . robe good_item . \
                    buckler . wand of paralysis / \
         vampire ; dagger ego:draining good_item . robe good_item
MONS:    orc warrior ; flail good_item . kite shield . chain mail good_item / \
         gnoll sergeant ; flail good_item . kite shield . chain mail good_item
NSUBST:  123 = 2:.
:     elseif you.depth() < 13 then
MONS:    gargoyle ; quarterstaff good_item / \
         molten gargoyle w:5 ; quarterstaff good_item
MONS:    kobold brigand ; dagger ego:draining good_item . wand of paralysis . \
                          dart ego:atropa / \
         spriggan ; dagger ego:draining good_item . robe good_item . \
                    buckler . wand of paralysis / \
         vampire ; dagger ego:draining good_item . robe good_item
MONS:    orc warrior ; flail good_item . kite shield . chain mail good_item / \
         gnoll sergeant ; flail good_item . kite shield . \
                          chain mail good_item / \
         skeletal warrior ; flail good_item . kite shield . \
                            chain mail good_item
# Generate two ancestor monsters for D:10-D:12.
NSUBST:  123 = 1=.
# For D:13- and Depths, generate all three ancestor monsters.
:     else
MONS:    ogre mage; lajatang ego:freezing / \
         molten gargoyle ; lajatang ego:flaming
MONS:    spriggan ; dagger ego:draining good_item . robe good_item . \
                    buckler . wand of paralysis / \
         vampire ; dagger ego:draining good_item . robe good_item . \
                   buckler . wand of paralysis
MONS:    orc knight; broad axe ego:flaming . chain mail good_item . \
                     tower shield ego:reflection / \
         tengu warrior ; broad axe ego:flaming . chain mail good_item . \
                         tower shield ego:reflection / \
         naga warrior ; broad axe ego:flaming . chain mail good_item  . \
                        tower shield ego:reflection / \
         skeletal warrior ; broad axe ego:flaming . chain mail good_item . \
                            tower shield ego:reflection
:     end
: else -- Depths
MONS:    tengu reaver ; lajatang ego:freezing good_item | \
                        lajatang ego:freezing randart . scale mail / \
         ancient champion ; lajatang ego:freezing good_item | \
                            lajatang ego:freezing randart . scale mail
MONS:    vampire knight; quick blade ego:antimagic . buckler good_item . \
                         shadow dragon scales good_item / \
         spriggan defender; quick blade ego:antimagic w:20 . robe good_item . \
                            buckler good_item . wand of paralysis
MONS:    minotaur ; broad axe ego:speed good_item | \
                    broad axe ego:speed randart | arga w:1 . \
                    plate armour good_item . \
                    tower shield ego:reflection good_item / \
         orc warlord ; broad axe ego:speed good_item | \
                       broad axe ego:speed randart | arga w:1 . \
                      plate armour good_item . \
                      tower shield ego:reflection good_item
: end
KFEAT:   _ = altar_hepliaklqana
KFEAT:   - = altar_ecumenical
MARKER:  ` = lua:fog_machine { cloud_type = "thin mist", \
                               pow_min = 100, pow_max = 200, \
                               delay = 100, size = 2, walk_dist = 1 }
TILE:   G = dngn_gravestone
: interest_check(_G)
veto {{
  if you.depth() > 7 then
    return items.excluded_from_set("wand of paralysis")
  end
}}
: decorative_floor(_G, 'V', "mourning vase")
MAP
    ccccc
    c...c
    c.-.c
    c.2.c     cc
ccccc...ccccccc.
c.....V.`..`..`.
c._1.Vc.........
c.....V.`..`..`.
ccccc...ccccccc.
    c.3.c     cc
    c.G.c
    c...c
    ccccc
ENDMAP

### Kikubaaqudgha overflow altars #############################################

NAME:   lemuel_zombie_altar_kikubaaqudgha
TAGS:   no_pool_fixup no_monster_gen no_trap_gen transparent
TAGS:   temple_overflow_1 temple_overflow_kikubaaqudgha
TAGS:   uniq_altar_kikubaaqudgha uniq_zombie_altar
KFEAT:  _ = altar_kikubaaqudgha
: if you.in_branch("Depths") then
MONS:   zombie, patrolling vampire mage
: elseif you.depth() > 12 then
MONS:   scorpion zombie / hound zombie, patrolling necromancer
: elseif you.depth() > 4 then
MONS:   jackal zombie / adder zombie, patrolling burial acolyte
: else
MONS:   frilled lizard zombie / bat zombie
SUBST:  2 = .
: end
NSUBST: 1 = 2:1 / 3 = 11... / *:.
: interest_check(_G)
MAP
xxxxxxxxxxxxxxxx
xxxxwwwwwwwwxxxx
xxxx.1111111xxxx
@........2...._x
xxxx.1111111xxxx
xxxxwwwwwwwwxxxx
xxxxxxxxxxxxxxxx
ENDMAP

NAME:   lemuel_mausoleum_altar_kikubaaqudgha
TAGS:   uniq_altar_kikubaaqudgha temple_overflow_1 transparent
TAGS:   temple_overflow_kikubaaqudgha uniq_mausoleum_altar
# zombies scale with depth so we'll let it place in Crypt, too,
# but with an interest check
DEPTH:  D:4-10, Crypt
: if you.in_branch("Crypt") then
MONS:   zombie, guardian mummy, skeletal warrior, ghoul
NSUBST: ? = 1:* / *:?
: else
:   if you.depth() < 6 then
MONS:   zombie, skeleton, phantom, shadow imp
:   else
MONS:   zombie, skeleton, wight, burial acolyte
:   end
: end
NSUBST: ? = 1:_ / *:1
SUBST:  1 = 1:30 2 3 4:5
KFEAT:  _ = altar_kikubaaqudgha
KMONS:  _ = human zombie
: interest_check(_G)
MAP
ccccccccccccccc
c?c?c?c?c?c?ccG
c+c+c+c+c+c+ccc
c............+@
c+c+c+c+c+c+ccc
c?c?c?c?c?c?ccG
ccccccccccccccc
ENDMAP

NAME:   kiku_gazebo_garden_becter
TAGS:   temple_overflow_1 temple_overflow_kikubaaqudgha transparent decor
TAGS:   uniq_altar_kikubaaqudgha
KMONS:  f = withered plant
KFEAT:  _ = altar_kikubaaqudgha
SUBST:  ` = f....
COLOUR: c = magenta
COLOUR: i' = brown
COLOUR: " = yellow
TILE:   c = dngn_stone_wall_magenta
FTILE:  '"_ = floor_pebble_yellow
: interest_check(_G)
MAP
..````
.ccc`````
.c'c"`````
.c''""````
.c'''"c````
.c'_''cc```
.c'''"c````
.c''""````
.c'c"`````
.ccc`````
..````
ENDMAP

NAME:   kiku_gazebo_pond_becter
TAGS:   temple_overflow_1 temple_overflow_kikubaaqudgha transparent decor
TAGS:   uniq_altar_kikubaaqudgha
KFEAT:  _ = altar_kikubaaqudgha
KMASK:  Ww = no_monster_gen
SUBST:  M = W..
COLOUR: c = magenta
COLOUR: i' = brown
COLOUR: " = yellow
COLOUR: w = green
COLOUR: W = lightgreen
TILE:   c = dngn_stone_wall_magenta
FTILE:  '"_ = floor_pebble_yellow
: interest_check(_G)
MAP
..........
.cccccccc.
.c''''cc...
.c'_'""..V.
.c'W""MMM..
.c'"WWWwwM.
.cc".MWwwM.
.cc..MwwwM.
.c...MwwwM.
...V..MMM..
.........
ENDMAP

NAME:   kennysheep_vampire_church
TAGS:   no_monster_gen temple_overflow_1 temple_overflow_kikubaaqudgha
TAGS:   uniq_altar_kikubaaqudgha transparent
# This used to be a decorative vault, but nobody noticed the blood fountain
# lua by default on a relatively uncommon vault, so now it gets some actual
# depth-scaling monsters and a reward it in later on.
: if you.in_branch("Depths") then
MONS:   vampire knight / jiangshi, vampire mage
: elseif you.depth() > 11 then
MONS:   vampire, vampire bat
: else
MONS:   vampire bat / nothing w:7, bat skeleton / bat zombie
: end
: if you.in_branch("Depths")
:  or (you.absdepth() > 11 and crawl.x_chance_in_y(2, 3)) then
ITEM:   sanguine talisman
: end
KITEM:  A = gold q:1 no_pickup
KFEAT:  A = altar_kikubaaqudgha
KFEAT:  X = x
NSUBST: . = 4:2 / 3 = 2. / *:.
TILE:   X = wall_catacombs
{{
local trig_marker = TriggerableFunction:new {
  func="callback.vampire_church_blood",
  repeated = false
}
trig_marker:add_triggerer(DgnTriggerer:new { type = "player_move" })
lua_marker("A", trig_marker)
lua_marker("V", portal_desc { replica_name = "vampire_church_blood" })
}}
MAP
  xxxxxxxxx
  xx.VdV.xx
xxx..1A1..xxx
xx.X.V1V.X.xx
x.V.X...X.V.x
xx.X.X.X.X.xx
x.X.V.X.V.X.x
xx.X.X.X.X.xx
x.V.X.V.X.V.x
xx.X.X.X.X.xx
xxx.V.X.V.xxx
xx.X.X.X.X.xx
xx..X.V.X..xx
xx.X.X.X.X.xx
xxx.V.X.V.xxx
xxxx.....xxxx
xxxxx+++xxxxx
ENDMAP

NAME:   nicolae_kikubaaqudgha_miasma_corner
TAGS:   temple_overflow_kikubaaqudgha temple_overflow_1 transparent decor
TAGS:   uniq_altar_kikubaaqudgha
KFEAT:  _ = altar_kikubaaqudgha
MARKER: M = lua:fog_machine { cloud_type = "foul pestilence", pow_min = 10, \
    pow_max = 20, delay_min = 1, delay_max = 1, size = 1, walk_dist = 0, \
    spread_rate = 0 }
COLOUR: c = darkgrey
: interest_check(_G)
MAP
    .
 ccc.ccc
 cM...Mc
 c.....c
...._....
 c.....c
 cM...Mc
 ccc.ccc
    .
ENDMAP

NAME:    regret_index_kikubaaqudgha_part_by_part
TAGS:    temple_overflow_kikubaaqudgha temple_overflow_1
TAGS:    uniq_altar_kikubaaqudgha no_monster_gen transparent
DEPTH:   D:5-8
MONS:    patrolling burial acolyte, patrolling shadow imp
MONS:    kobold zombie / gnoll zombie, adder zombie / hound zombie
KFEAT:   _ = altar_kikubaaqudgha
SHUFFLE: ABCD
NSUBST:  A = 1:2 / *:3, B = 1:2 / *:4
SUBST:   C = $, D = .
SUBST:   X : x', Y : x', y : x., z : c.., G : Gxx
: vault_metal_statue_setup(_G, "G", "soul conduit")
CLEAR:   '
MAP
 Xxxxx.....xxxxY
XxxBBx.y.y.xCCxxY
xxxxB+.....+Cxxxx
xAxxxx.....xxxxxx
xAAxGc..z..cxxxxx
xx+xc.......xxxx
......cc+cc
.y....c4.3c
......+._.c
.y....c3.1c
......ccccc
xx+xc.
xDDxxx
xDxxxx
Yxxxxx
 Yxxx
ENDMAP

### Makhleb overflow altars ###################################################

NAME:    demons_altar
DEPTH:   D:4-, Orc, !Orc:$
TAGS:    no_monster_gen patrolling temple_overflow_1 temple_overflow_makhleb
TAGS:    transparent layout_rooms layout_city layout_open uniq_altar_makhleb
KFEAT:   _ = altar_makhleb
MONS:    rust devil, smoke demon, iron imp ; damaged sling
: if you.absdepth() > 9 then
SUBST:   3 = 12
: end
TILE:    G = dngn_statue_imp / dngn_statue_demonic_bust
MAP
xxxxxxxxxxxxxxx
x.............x
x.ll.......ll.x
x.ll..._...ll.x
x.ll...3...ll.x
x..ll.....ll..x
x...lll.lll...x
x....llGll....x
x......l......x
x.............x
x.............x
x.............x
x.............x
ENDMAP

NAME:  bloody_makhleb
TAGS:  uniq_altar_makhleb temple_overflow_1 temple_overflow_makhleb
TAGS:  transparent decor
DEPTH: D:3-, Orc
KPROP: . = bloody / nothing
KFEAT: _ = altar_makhleb
KITEM: _ = robe, whip
: interest_check(_G)
MAP
...
._.
...
ENDMAP

NAME:  makhleb_altar_promises_db
TAGS:  uniq_altar_makhleb temple_overflow_1 temple_overflow_makhleb
TAGS:  transparent
KFEAT: _ = altar_makhleb
KPROP: 12 = no_tele_into
KMASK: 12 = no_trap_gen
KMASK: 12 = opaque
MONS:  executioner / balrug / green death / cacodemon / blizzard demon
MONS:  orange demon / ynoxinul / neqoxec / hellwing / smoke demon
: interest_check(_G)
MAP
  ccc
  c1c
cccnccc
c2n_n2c
ccc.ccc
  c.c
  c@c
ENDMAP

NAME:   makhleb_blood_cavern_becter
TAGS:   uniq_altar_makhleb temple_overflow_1 temple_overflow_makhleb transparent
DEPTH:  D:4-8
: if crawl.coinflip() then
: dgn.delayed_decay(_G, '1', 'human corpse')
KMONS:  2 = hound
: else
KMONS:  1 = human skeleton
KMONS:  2 = hound skeleton
: end
KFEAT:  _ = altar_makhleb
KFEAT:  X = x
KPROP:  y' = bloody
TILE:   X = wall_hall
SUBST:  ' = ., y = x, G = GGx
: vault_metal_statue_setup(_G, "G", "mystic cage")
MAP
  @@@
 x..'.xxx
 xx...'yxx
 xxxx..'yxx
 xxxxxx.'yx
 xxxGxxy'.x
xxxx.'y'.xx
xXX.12'.xx
xXA_'.xxx
xXX..xxx
xxxxxx
ENDMAP

NAME:   makhleb_heckhound_becter
TAGS:   uniq_altar_makhleb temple_overflow_1 temple_overflow_makhleb
TAGS:   no_monster_gen transparent
# hound depth
DEPTH:  D:4-7
KMONS:  _ = patrolling hound
KFEAT:  _ = altar_makhleb
KFEAT:  X = x
SUBST:  y = xx., G = GXXX
TILE:   X = wall_hall
: vault_metal_statue_setup(_G, "G", "mystic cage")
MAP
 xxxxx
xxXGXxx
xyXAXyx
x.._..x
xy...yx
 y...y
  @@@
ENDMAP

NAME:   makhleb_grotto_becter
TAGS:   no_monster_gen temple_overflow_1 temple_overflow_makhleb
TAGS:   uniq_altar_makhleb transparent
# white imp depth
DEPTH:  D:5-8
MONS:   shadow imp w:2 / crimson imp
KFEAT:  _ = altar_makhleb
TILE:   c = wall_hall
FTILE:  A_'1 = floor_grey_dirt
SUBST:  ' = .
MAP
 xxxxx
xxcccxx
xwcAcwx
xww_wwx
xww1wwx
x.w'w.x
xx...xx
 xx+xx
   @
ENDMAP

NAME:   nzn_makhleb_speed_demon
TAGS:   no_monster_gen temple_overflow_1 temple_overflow_makhleb
TAGS:   uniq_altar_makhleb transparent
DEPTH:  D:7-11
WEIGHT: 2
KFEAT:  _ = altar_makhleb
KMONS:  _ = sixfirhy
MAP
.....
.ccc.
.c_c.
.c=c.
..@..
ENDMAP

# Ignis doesn't get normal overflow altars, so this just
# counts as a Makhleb overflow altar vault itself.
NAME:    dolorous_makhleb_big_flames_little_flames
TAGS:    no_monster_gen no_item_gen no_trap_gen transparent
TAGS:    temple_overflow_1 temple_overflow_makhleb
DEPTH:   D:4-
WEIGHT:  1
KPROP:   . = bloody w:5 / nothing w:25
KFEAT:   D = altar_ignis
KFEAT:   E = altar_makhleb
KFEAT:   ' = floor
MARKER:  P = lua:fog_machine { cloud_type = "flame", \
             pow_min = 1000, pow_max = 1000, delay = 1, \
             size = 1, walk_dist = 0, start_clouds = 1, excl_rad = 0 }
MARKER:  P = lua:fog_machine { cloud_type = "grey smoke", \
             pow_min = 3, pow_max = 3, delay = 100, \
             size = 1, walk_dist = 1, start_clouds = 1 }
FTILE:   ' = floor_rough_brown
COLOUR:  c = lightred
COLOUR:  ' = brown
: vault_metal_statue_setup(_G, "G", "fiery conduit")
MAP
   cccccccc+cccccccc
 ccc....ccc'ccc....ccc
cc...V...c'''c...E...cc
cG.......''P''.......Gc
cc...D...c'''c...Y...cc
 ccc....ccc'ccc....ccc
   ccccccccccccccccc
ENDMAP

NAME:    regret_index_makhleb_overflow_haemoclasm
TAGS:    uniq_altar_makhleb temple_overflow_1 no_vmirror no_rotate
TAGS:    transparent decor
DEPTH:   D:3-, Depths, Geh, !Geh:$, Coc, !Coc:$, Dis, !Dis:$, Tar, !Tar:$
WEIGHT:  5 (D:3-, Depths), 1
KITEM:   de = human skeleton
KFEAT:   CD = altar_makhleb
SHUFFLE: '? / '? / "! / "! / "!, xy
NSUBST:  ? = 1:C / *:d, ! = 1:D / *:e
KPROP:   'd = bloody
FTILE:   eD" = floor_pebble_red
CLEAR:   y
: interest_check(_G)
MAP
 yyyy  yyyy  yyyy
x'..'  '..'  .''.x
x''.'  '..'  '..'x
x..?.  .'?.  .?.'x
x''.'  '..'  '.'.x
x'..'  '''.  '..'x
x'..'  '..'  .''.x
 yyyy  yyyy  yyyy
ENDMAP

### Nemelex overflow altars ###################################################

NAME:  nemelex_xobeh_ov_fountains_minmay
TAGS:  temple_overflow_1 temple_overflow_nemelex_xobeh uniq_altar_nemelex_xobeh
TAGS:  transparent decor
KFEAT: _ = altar_nemelex_xobeh
: interest_check(_G)
MAP
U@U
@_@
U@U
ENDMAP

###################################################################
# Nemelex altar (Shiori)
# Perhaps could have different parameters for the two types of clouds,
# and different patterns.
NAME:   nemelex_altar_shiori
TAGS:   temple_overflow_1 temple_overflow_nemelex_xobeh uniq_altar_nemelex_xobeh
TAGS:   no_pool_fixup no_monster_gen no_item_gen decor no_rotate
TAGS:   layout_rooms layout_city layout_open
KFEAT:  _ = altar_nemelex_xobeh
SUBST:  e : dd', d : n', g : f', f : nn', i : hh', h : nn', k : j' , j : n'
SUBST:  G : GGTTUUbl
KPROP:  'RS = no_tele_into
MARKER: R = lua:fog_machine { cloud_type="calcifying dust", walk_dist=1, \
            size=9, pow_max=20, delay=10, buildup_amnt=14, buildup_time=7, \
            spread_rate=3, start_clouds=1 }
MARKER: S = lua:fog_machine { cloud_type="foul pestilence", walk_dist=1, \
            size=9,  pow_max=20, delay=10, buildup_amnt=14, buildup_time=7, \
            spread_rate=3, start_clouds=1 }
: vault_granite_statue_setup(_G, "G", "scintillating statue")
: interest_check(_G)
MAP
cccccccc+++cccccccc
cnnnnnnn...nnnnnnnc
cnde'edn...nfg'gfnc
cne'''en.G.ng'''gnc
cn''S''n...n''R''nc
cne'''en...ng'''gnc
cnde'edn...nfg'gfnc
cnnnnnnn...nnnnnnnc
cG......._.......Gc
cnnnnnnn...nnnnnnnc
cnhi'ihn...njk'kjnc
cni'''in...nk'''knc
cn''R''n...n''S''nc
cni'''in.G.nk'''knc
cnhi'ihn...njk'kjnc
cnnnnnnn...nnnnnnnc
cccccccc+++cccccccc
ENDMAP

NAME:    nemelex_dance_club_becter
TAGS:    temple_overflow_1 temple_overflow_nemelex_xobeh transparent
TAGS:    no_rotate no_vmirror no_monster_gen no_item_gen
TAGS:    uniq_altar_nemelex_xobeh
# orc and ogre depth
DEPTH:   D:3-7
: if you.depth() <= 4 then
MONS:    orc ; club
: else
MONS:    ogre ; giant club
: end
MONS:    endoplasm
KFEAT:   _ = altar_nemelex_xobeh
SHUFFLE:  12_
COLOUR:  x = darkgray
COLOUR:  12' = random
TILE:    x = wall_pebble_darkgray
MAP
    .....
   ..xxx..
   .xx'xx.
 ...x'1'x...
..xxxx'xxxx..
.xx''x+x''xx.
.x'2'+.+'_'x.
.xx'xx.xx'xx.
..xxx.x.xxx..
 .....x.....
    .xxx.
    .....
ENDMAP

NAME:   nemelex_diamond_rough_becter
TAGS:   temple_overflow_1 temple_overflow_nemelex_xobeh transparent decor
TAGS:   uniq_altar_nemelex_xobeh
KFEAT:  _ = altar_nemelex_xobeh
COLOUR: x = lightred
COLOUR: 'b = silver
TILE:   x = wall_pebble_red
TILE:   b = dngn_crystal_white
: interest_check(_G)
: set_feature_name("crystal_wall", "wall of white crystal")
MAP
    ...
   ..x..
  ..xxx..
 ..xxbxx..
..xxb'bxx..
.xxb'_'bxx.
..xxb'bxx..
 ..x+b+x..
  ..xxx..
   ..x..
    ...
ENDMAP

NAME:   nemelex_lonely_heart_becter
TAGS:   uniq_altar_nemelex_xobeh transparent decor
TAGS:   temple_overflow_1 temple_overflow_nemelex no_wall_fixup
TAGS:   no_rotate no_vmirror no_monster_gen no_item_gen vaults_room_empty
DEPTH:  D:3-, Vaults, Depths
# Boris misses Natasha, Bai Suzhen misses Xu Xian,
# Maggie fled her order, and Jessica wants to study alone.
: if you.in_branch("Depths") then
MONS:   boris
: elseif you.in_branch("Vaults") then
MONS:   bai suzhen
: elseif you.depth() > 7 then
MONS:   maggie
: else
MONS:   jessica
: end
KFEAT:  _ = altar_nemelex_xobeh
SUBST:  1 = 1....
TILE:   x = wall_pebble_red
: interest_check(_G)
MAP
  .... ....
 ..xx...xx..
..xxxx.xxxx..
.xx..x+x..xx.
.xx.......xx.
..xx.._..xx..
 ..xx.1.xx..
  ..xx.xx..
   ..xxx..
    .....
ENDMAP

NAME:   nemelex_spade_bored_becter
TAGS:   temple_overflow_1 temple_overflow_nemelex_xobeh transparent decor
TAGS:   no_rotate no_vmirror no_monster_gen no_item_gen
TAGS:   uniq_altar_nemelex_xobeh
KFEAT:  _ = altar_nemelex_xobeh
:  if you.depth() ~= dgn.br_depth(you.branch()) then
KFEAT:  a = shaft trap
:  end
NSUBST: ' = 6:a / *:.
COLOUR: x = darkgray
TILE:   x = wall_pebble_darkgray
: interest_check(_G)
MAP
     .....
    ..xxx..
   ..xx'xx..
  ..xx'''xx..
 ..xx''_''xx..
..xx'''''''xx..
.xx'''''''''xx.
.x'''xxxxx'''x.
.xx'+x.x.x+'xx.
..xxx..x..xxx..
 .....xxx.....
     .....
ENDMAP

### Okawaru overflow altars ###################################################

NAME:    okawaru_metal_pillars_1_2
TAGS:    temple_overflow_1 temple_overflow_okawaru uniq_altar_okawaru
TAGS:    transparent decor
DEPTH:   D:3-, Orc
WEIGHT:  7
KFEAT:   _ = altar_okawaru
SHUFFLE: v'
SUBST:   ' = .
: interest_check(_G)
MAP
.....
.v'v.
.'_'.
.v'v.
.....
ENDMAP

NAME:   okawaru_metal_pillars_3
TAGS:   temple_overflow_1 temple_overflow_okawaru uniq_altar_okawaru
TAGS:   transparent decor vaults_empty
DEPTH:  D:3-, Vaults, Orc
WEIGHT: 3
KFEAT:  _ = altar_okawaru
KFEAT:  ^ = tyrant's trap
: if not you.in_branch("Vaults") then
SUBST:  ^ = .
: end
: interest_check(_G)
MAP
.......
.^.v...
..v.v..
.v._.v.
..v.v..
...v.^.
.......
ENDMAP

NAME:   okawaru_trees_1
TAGS:   temple_overflow_1 temple_overflow_okawaru uniq_altar_okawaru
TAGS:   transparent decor vaults_empty
DEPTH:  D:3-, Vaults, !Vaults:$, Depths
WEIGHT: 1 (Vaults), 5
KFEAT:  _ = altar_okawaru
: interest_check(_G)
MAP
.........
.v.t.t.v.
.........
.t.t.t.t.
...._....
.t.t.t.t.
.........
.v.t.t.v.
.........
ENDMAP

NAME:   okawaru_trees_2
TAGS:   temple_overflow_1 temple_overflow_okawaru uniq_altar_okawaru
TAGS:   transparent decor
WEIGHT: 5
KFEAT:  _ = altar_okawaru
: interest_check(_G)
MAP
...........
.v...t...v.
....t.t....
...t.t.t...
..t.t.t.t..
.t.t._.t.t.
..t.t.t.t..
...t.t.t...
....t.t....
.v...t...v.
...........
ENDMAP

NAME:   okawaru_ov_weapons_minmay
TAGS:   temple_overflow_1 temple_overflow_okawaru uniq_altar_okawaru
TAGS:   transparent decor vaults_empty
DEPTH:  D:3-, Snake, Vaults, !Vaults:$
WEIGHT: 3 (Vaults), 10
ITEM:   hand axe, falchion, mace, spear
KFEAT: _ = altar_okawaru
: interest_check(_G)
MAP
   .....
  ...v...
 ...vvv...
...........
..v.e.f.v..
.vv.._..vv.
..v.d.g.v..
...........
 ...vvv...
  ...v...
   .....
ENDMAP

NAME:  okawaru_altar_gauntlet_db
TAGS:  uniq_altar_okawaru temple_overflow_1 temple_overflow_okawaru
TAGS:  no_pool_fixup
KFEAT: _ = altar_okawaru
KPROP: 1 = no_tele_into
: if you.in_branch("Depths") then
MONS:  spriggan defender ; flail . robe . buckler . boomerang w:3 /\
       tengu warrior ; long sword . leather armour . buckler . boomerang
: else
MONS:  goblin; stone q:5 / hobgoblin; stone q:5 / gnoll; stone q:5 /\
       orc; stone q:5 / kobold; stone q:5
: end
: interest_check(_G)
MAP
  xxx
xxx_xxx
x1w.wxx
xxw.w1x
x1w.wxx
xxw.w1x
x1w.wxx
xxw.w1x
xxx+xxx
ENDMAP

NAME:   okawaru_gym_becter
TAGS:   uniq_altar_okawaru temple_overflow_1 temple_overflow_okawaru
TAGS:   transparent decor vaults_empty
DEPTH:  D:3-, Snake, Vaults, !Vaults:$
WEIGHT: 3 (Snake, Vaults), 10
KFEAT:  _ = altar_okawaru
: interest_check(_G)
MAP
   .....
 .........
 .vv...vv.
..v.....v..
....._.....
..v.....v..
 .vv...vv.
 .........
   .....
ENDMAP

NAME:    okawaru_humans
TAGS:    uniq_altar_okawaru temple_overflow_1 temple_overflow_okawaru
TAGS:    no_monster_gen no_wall_fixup transparent
DEPTH:   D:7-12
COLOUR:  1 = yellow, ' = yellow, x = white
MONS:    human ; long sword . ring mail
FTILE:   1'xO = floor_sandstone
RTILE:   x = wall_tomb
KFEAT:   _ = altar_okawaru
MAP
.........
.xxxxxxx.
.x1'_'1x.
.x'''''x.
.x'x'x'x.
.xGx'xGx.
.xxx'xxx.
....'....
ENDMAP

NAME:   kennysheep_okawaru_gauntlet
TAGS:   temple_overflow_1 temple_overflow_okawaru uniq_altar_okawaru
TAGS:   no_pool_fixup transparent
KFEAT:  _ = altar_okawaru
: if you.in_branch("Depths") then
KMONS:  1 = spriggan defender ; demon trident . robe . boomerang
KFEAT:  1 = cache of baked goods
:else
KMONS:  1 = goblin ; spear
:end
KPROP:  1 = no_tele_into
KMASK:  1 = opaque
TILE:   G = dngn_statue_polearm / dngn_statue_axe
: interest_check(_G)
MAP
      vvvvvvv
 .....w1w...v
......www.G.v
@........G_Gv
......www.G.v
 .....w1w...v
      vvvvvvv
ENDMAP

NAME:   hellmonk_okawaru_the_only_friend_you_need
TAGS:   temple_overflow_1 temple_overflow_okawaru uniq_altar_okawaru
TAGS:   transparent decor vaults_empty vaults_orient_s
DEPTH:  D:3-, Vaults
WEIGHT: 1 (Vaults), 5
KFEAT:  _ = altar_okawaru
KITEM:  ' = any weapon plus:0 ego:spectral pre_id no_pickup
: if you.in_branch("Vaults") then
SUBST:  @ = .
: end
: interest_check(_G)
MAP
vvvv vvvv
v..vvv..v
v.......v
vvv...vvv
  v._.v
vvv.'.vvv
v.......v
v..v+v..v
vvvv@vvvv
ENDMAP

# After much consideration, I decided this should go with the other overflow
# altars, rather than with the other guarded unrand vaults, since the majority
# of the tags are for its role as an overflow.
NAME:   nicolae_overflow_guarded_unrand_okawaru_victory
TAGS:   temple_overflow_1 temple_overflow_okawaru uniq_altar_okawaru transparent
DEPTH:  D:3-9
WEIGHT: 3
KPROP:  `SLps = no_tele_into
KFEAT:  _ = altar_okawaru
: if you.depth() < 6 then
KMONS:  S = gnoll bouda band / gnoll sergeant band
KMONS:  ps = gnoll / orc / ogre w:5 / centaur w:5 / nothing
: elseif you.depth() < 8 then
KMONS:  S = wight band / kobold brigand band / orc warrior band
KMONS:  ps = ogre / centaur / wight / nothing
: else
KMONS:  S = two-headed ogre / troll / gargoyle
KMONS:  ps = orc warrior / kobold brigand / wight / troll w:5 / gargoyle w:5 / \
             two-headed ogre w:5
: end
KITEM:  S = victory no_pickup
KITEM:  p = any potion no_pickup
KITEM:  s = any scroll no_pickup
SUBST:  c : ccccv
NSUBST: L = 2=p / 2=s
MAP
xxc@@@cxxxxxxxx
xxc...cxxxxxxxx
xcc...ccccccccx
xcG...GcG`L`Gcx
xc.....c````Lcx
xc.._..=``S``cx
xc.....c````Lcx
xcG...GcG`L`Gcx
xcc...ccccccccx
xxc...cxxxxxxxx
xxc@@@cxxxxxxxx
ENDMAP

### Qazlal overflow altars ####################################################

# There's always a safe path to the altar.
NAME:   grunt_qazlal_clouds
TAGS:   transparent no_monster_gen no_item_gen no_trap_gen temple_overflow_1
TAGS:   temple_overflow_qazlal uniq_altar_qazlal decor
KFEAT:  _ = altar_qazlal
MARKER:  L = lua:fog_machine { cloud_type = "flame", \
                               pow_min = 5, pow_max = 7, delay_min = 55, \
                               delay_max = 75, size = 1, walk_dist = 0, \
                               spread_rate = 0, excl_rad = 0 }
MARKER:  M = lua:fog_machine { cloud_type = "freezing vapour", \
                               pow_min = 5, pow_max = 7, delay_min = 55, \
                               delay_max = 75, size = 1, walk_dist = 0, \
                               spread_rate = 0, excl_rad = 0 }
MARKER:  N = lua:fog_machine { cloud_type = "sparse dust", \
                               pow_min = 5, pow_max = 7, delay_min = 55, \
                               delay_max = 75, size = 1, walk_dist = 0, \
                               spread_rate = 0 }
MARKER:  O = lua:fog_machine { cloud_type = "rain", \
                               pow_min = 5, pow_max = 7, delay_min = 55, \
                               delay_max = 75, size = 1, walk_dist = 0, \
                               spread_rate = 0 }
SHUFFLE: LMNO
KPROP:   LMNO- = no_tele_into
KFEAT:   - = .
: interest_check(_G)
MAP
ccc@ccc
cL-.-Mc
c-...-c
@.._..@
c-...-c
cN-.-Oc
ccc@ccc
ENDMAP

NAME:   grunt_qazlal_sundering
TAGS:   no_monster_gen no_item_gen no_trap_gen temple_overflow_1
TAGS:   temple_overflow_qazlal uniq_altar_qazlal
KFEAT:  _ = altar_qazlal
KPROP:  -c = no_tele_into
SUBST:  c = cccl^.
SUBST:  - = ..l^
:  if you.depth() ~= dgn.br_depth(you.branch()) then
KFEAT:  ^ = shaft trap
:  end
KITEM:  . = nothing w:189 / stone / large rock q:1 w:1
: interest_check(_G)
MAP
 ----@----
-ccc-.-ccc-
-ccc-.-ccc-
-ccc-.-ccc-
-----.-----
@...._....@
-----.-----
-ccc-.-ccc-
-ccc-.-ccc-
-ccc-.-ccc-
 ----@----
ENDMAP

NAME:  nicolae_qazlal_eye_of_the_storm
TAGS:  temple_overflow_qazlal temple_overflow_1 uniq_altar_qazlal
TAGS:  no_trap_gen no_item_gen no_monster_gen decor
KPROP: 'd = no_tele_into
KMONS: d = diamond obelisk
KFEAT: _ = altar_qazlal
: interest_check(_G)
MAP
 ccccccccccccc
 c'''''''''''c
 c'''''''''''c
 c'''''''''''c
 c'''''''''''c
@nnnnnn''''''c
@...._nd'''''c
@nnnnnn''''''c
 c'''''''''''c
 c'''''''''''c
 c'''''''''''c
 c'''''''''''c
 ccccccccccccc
ENDMAP

NAME:    nicolae_qazlal_style_of_elements
TAGS:    temple_overflow_qazlal temple_overflow_1 uniq_altar_qazlal
TAGS:    no_trap_gen no_item_gen no_monster_gen transparent decor
SHUFFLE: Cf / Da / Ee / Fw
KPROP:   faew = no_tele_into
KMASK:   faew = opaque
KMONS:   f = fire elemental
KMONS:   a = air elemental
KMONS:   e = earth elemental
KMONS:   w = water elemental
KFEAT:   _ = altar_qazlal
KFEAT:   f = lava
KFEAT:   w = deep_water
KFEAT:   CDEF = c
MARKER:  a = lua:fog_machine { cloud_type = "thin mist", \
                               pow_min = 100, pow_max = 100, delay = 1, \
                               size = 1, walk_dist = 0, start_clouds = 1 }
MARKER:  e = lua:fog_machine { cloud_type = "sparse dust", \
                               pow_min = 100, pow_max = 100, delay = 1, \
                               size = 1, walk_dist = 0, start_clouds = 1 }
: interest_check(_G)
TILE:   C = wall_stone_scorched
TILE:   DEF = wall_stone_gray
MAP
CCC.@.DDD
Cfn...naD
Cnn...nnD
.........
...._....
.........
Fnn...nnE
Fwn...neE
FFF...EEE
ENDMAP

# general_overflow_altar cannot contain the power of Qazlal
NAME:    nicolae_qazlal_general_emergency
TAGS:    temple_overflow_qazlal temple_overflow_1 uniq_altar_qazlal
TAGS:    no_monster_gen no_pool_fixup transparent decor no_descent
KMONS:   1 = pile of debris
KFEAT:   B = altar_qazlal
KFEAT:   1 = w
SHUFFLE: xXY / xXY / xXY / abc
SHUFFLE: XY
SUBST:   z = w.., X = +++w., Y = 11xxw., x = wxxx, a = w, b = w, c = w
SHUFFLE: ABCD
SUBST:   A = >, C = 'GTU, D = '
SHUFFLE: 1w / ll / ll
KMASK:   B>'GTU = opaque
: interest_check(_G)
MAP
...........z.
.z...z.zzz...
..zz.z.wwwz..
..wxXYYxwwz..
.zwwwwwwxwz..
zwwxwABwxz...
zwwxwCDwx..z.
.zzxwwwwx.z..
...xxxwxxwz..
.z...zwwwz...
...z..zzz....
...........z.
ENDMAP

NAME: nicolae_qazlal_scattered_showers
# The rain is localized to a 5x5 square centered on the altar.
# There's some rain water that occasionally gets deep but it's passable.
TAGS:   temple_overflow_qazlal temple_overflow_1 transparent decor
TAGS:   no_trap_gen uniq_altar_qazlal
KFEAT:  _ = altar_qazlal
MARKER: _ = lua:fog_machine { cloud_type = "rain", pow_min = 10, \
    pow_max = 15, delay_min = 5, delay_max = 15, size = 1, walk_dist = 2, \
    spread_rate = 0 }
: interest_check(_G)
MAP
.......
.......
.......
..._...
.......
.......
.......
ENDMAP

# Sky beasts normally generate on D:6-8, so they're within the D:3 out-of-depth
# range (which goes down to D:6). You'll be fine. Maybe.
NAME:    nicolae_qazlal_beasts_of_the_sky
TAGS:    temple_overflow_qazlal temple_overflow_1 transparent
DEPTH:   D:3-8
KMONS:   _ = sky beast
KFEAT:   _ = altar_qazlal
SHUFFLE: Pp, Qq
SUBST:   PQ = x, pq = m
MAP
.........
...Q.q...
..P...p..
.Q.....q.
...._....
.q.....Q.
..p...P..
...q.Q...
.........
ENDMAP

# Ru overflow altar vaults ####################################################

# A few unlucky monsters permanently afflicted with Ru's various status effects.
# the monsters in group B should all be non-intelligent, so that TSO won't get upset
# about attacking them while blind. it's a pain for a monster you're not allowed
# to attack to chase you throughout the level
NAME: nicolae_ru_great_annihilating_truth
TAGS: temple_overflow_ru temple_overflow_1 uniq_altar_ru transparent
TAGS: no_monster_gen no_item_gen
SHUFFLE: MCSBP
KFEAT: _ = altar_ru
KMONS: P = ball python perm_ench:paralysis / rat perm_ench:paralysis / \
  frilled lizard perm_ench:paralysis / giant cockroach perm_ench:paralysis / \
  quokka perm_ench:paralysis / kobold w:5 perm_ench:paralysis / \
  goblin w:5 perm_ench:paralysis / hobgoblin w:5 perm_ench:paralysis
KMONS: C = bat perm_ench:corona / adder perm_ench:corona / \
  kobold perm_ench:corona / goblin perm_ench:corona / hobgoblin perm_ench:corona
KMONS: S = jackal perm_ench:slow / bat perm_ench:slow / adder perm_ench:slow / \
  kobold perm_ench:slow / goblin perm_ench:slow / hobgoblin perm_ench:slow
KMONS: B = ball python perm_ench:blind / frilled lizard perm_ench:blind / \
  giant cockroach perm_ench:blind / bat perm_ench:blind
KMONS: M = orc wizard perm_ench:mute
MAP
@...   ...@
.+xxxxxxx+.
.x...x...x.
.x.P.x.C.x.
 x.......x
 xxx._.xxx
 x.......x
.x.S.x.B.x.
.x...x...x.
.+xxxxxxx+.
@...   ...@
ENDMAP

NAME: nicolae_ru_awakened_eye
TAGS: temple_overflow_ru temple_overflow_1 uniq_altar_ru transparent decor
TAGS: no_pool_fixup
KFEAT: _ = altar_ru
: interest_check(_G)
MAP
    .......
   .ccccccc.
  .c..WWW..c.
 .c..W...W..c.
.c...W._.W...c.
 .c..W...W..c.
  .c..WWW..c.
   .ccccccc.
    .......
ENDMAP

# Overgrown and disused, since many pilgrims find Ru's sacrifices too onerous.
NAME:   nicolae_ru_the_path_less_chosen
TAGS:   temple_overflow_ru temple_overflow_1 uniq_altar_ru transparent decor
TAGS:   no_item_gen no_monster_gen
: interest_check(_G)
KMONS:  p = plant / fungus w:3
NSUBST: r = 3=^ / ^p / 7=p / 2:p. / ., i = ^^p. / 2=p / .
NSUBST: D = . / xxp / x, E = . / xxp / x, F = xxp / .
KFEAT:  _ = altar_ru
KFEAT:  ^ = web trap
MAP
xxxxxxx
xrrrrrxxxxx
xriiirxDFEx
xri_ir.D.E.@
xriiirxDFEx
xrrrrrxxxxx
xxxxxxx
ENDMAP

NAME: nicolae_ru_sacrificial_ziggurat
TAGS: temple_overflow_ru temple_overflow_1 uniq_altar_ru transparent decor
KFEAT: _ = altar_ru
SUBST: b = B.., @ = %@@
KPROP: B% = bloody
SUBST: B = ., % = @
TILE:  x = wall_sandstone
FTILE: ' = floor_sandstone
FTILE: .@_ = floor_limestone
: interest_check(_G)
MAP
xxxxxx@xxxxxx
x'''''b'''''x
x'xxxxbxxxx'x
x'x'''b'''x'x
x'x'xxbxx'x'x
x'x'xBBBx'x'x
@bbbbB_Bbbbb@
x'x'xBBBx'x'x
x'x'xxbxx'x'x
x'x'''b'''x'x
x'xxxxbxxxx'x
x'''''b'''''x
xxxxxx@xxxxxx
ENDMAP

NAME: nicolae_ru_path_of_blood
TAGS: temple_overflow_ru temple_overflow_1 uniq_altar_ru transparent decor
TAGS: no_monster_gen
: interest_check(_G)
KPROP: , = bloody
KPROP: l = no_cloud_gen
KFEAT: _ = altar_ru
MAP
@lcccccccccc
l,......,llc
@l,l,l,l,_lc
l,......,llc
@lcccccccccc
ENDMAP

NAME:   hangedman_ru_absence
TAGS:   temple_overflow_ru temple_overflow_1 uniq_altar_ru transparent decor
TAGS:   no_pool_fixup
WEIGHT: 5
KFEAT:  _ = altar_ru
SUBST:  X : x., x : cxx, b: cbxx, + : W+++, m : mmw
KMASK:  wW = no_monster_gen
: interest_check(_G)
MAP
......xxxxx......
..x...........x..
xxxxxx.....xxxxxx
..x..x.....x..x..
..x..x.XxX.x..x..
.....+..b..+.....
....xxbbbbbxx....
.....+..b_.+.....
..x..x.XxX.m..m..
..x..x.....m..m..
xxxxxx.....mmmmmm
..x...........m..
......xxxxx......
ENDMAP

### Sif Muna overflow altars ##################################################

NAME:   lemuel_blue_sif_altar
TAGS:   no_monster_gen temple_overflow_1 temple_overflow_sif_muna
TAGS:   uniq_altar_sif_muna decor transparent
DEPTH:  D:3-, Vaults
WEIGHT: 3 (Vaults), 10
COLOUR: . = blue
FTILE:  .*+_ = floor_hall
KFEAT:  _ = altar_sif_muna
: if you.in_branch("Vaults") then
CLEAR:  x
: end
: interest_check(_G)
MAP
xxxxxxxxxxxxxx
...........xxx
@..........+_x
...........xxx
xxxxxxxxxxxxxx
ENDMAP

NAME:   tgw_sif
TAGS:   no_item_gen no_monster_gen no_pool_fixup
TAGS:   temple_overflow_1 temple_overflow_sif_muna uniq_altar_sif_muna
KFEAT:  _ = altar_sif_muna
: if you.absdepth() <= 4 then
MONS:   Jessica
: elseif you.absdepth() <= 6 then
MONS:   orc wizard w:15 / Blorkula the orcula
: elseif you.in_branch("Depths") then
MONS:   lich
: else
MONS:   orc wizard
: end
: interest_check(_G)
NSUBST: M = 1:1 / *:"
SUBST:  ' : "'., ' = ''.
COLOUR: . = blue
MAP
        xx@xx
        x...x
        x...x
      xxx...xxx
     xx'''''''xx
    xx'''...'''xx
    x'''.www.'''x
   xx''.wwwww.''xx
   x''.wwM"Mww.''x
   x''.wwM>Mww.''x
   x''.wwMMMww.''x
   xx''.wwwww.''xx
    x'''.www.'''x
    xx'''...'''xx
     xx'''''''xx
      xxx...xxx
        x._.x
        x...x
        xxxxx
ENDMAP

NAME:   led_sif_book
DEPTH:  D:3-, Orc
TAGS:   no_item_gen no_pool_fixup no_monster_gen
TAGS:   temple_overflow_1 temple_overflow_sif_muna uniq_altar_sif_muna
KPROP:  1d = no_tele_into
KFEAT:  _ = altar_sif_muna
KFEAT:  d = escape_hatch_down
KITEM:  d = randbook owner:Sif_Muna numspells:1 slevels:1
MONS:   orc wizard
COLOUR: .@+1 = blue
FTILE:  .@+1G_ = floor_marble
: interest_check(_G)
MAP
xxxxxxxxx
xbbbbx..xx
x1w..xG..x
xdw..+._.@
x1w..xG..x
xbbbbx..xx
xxxxxxxxx
ENDMAP

NAME:   led_sif_pool
TAGS:   no_item_gen no_monster_gen no_pool_fixup transparent
TAGS:   temple_overflow_1 temple_overflow_sif_muna uniq_altar_sif_muna decor
KFEAT:  _ = altar_sif_muna
COLOUR: . = blue
FTILE:  ._ = floor_marble
: interest_check(_G)
MAP
 xxx@xxx
 xxx+xxx
xxWW.WWxx
xWWW.WWWx
xWW...WWx
xWW._.WWx
xWW...WWx
xWWWWWWWx
xxWWWWWxx
 xxxxxxx
ENDMAP

NAME:   nicolae_sif_muna_condensation
TAGS:   temple_overflow_sif_muna temple_overflow_1 transparent decor
TAGS:   no_trap_gen no_pool_fixup uniq_altar_sif_muna
KFEAT:  _ = altar_sif_muna
MARKER: _ = lua:fog_machine { cloud_type = "magical condensation", \
    pow_min = 5, pow_max = 15, delay_min = 5, delay_max = 20, size = 1, \
    walk_dist = 3, spread_rate = 1 }
FTILE:  ._w = floor_marble
COLOUR: . = blue
: interest_check(_G)
MAP
.......
.wwwww.
.wwwww.
..._ww.
.wwwww.
.wwwww.
.......
ENDMAP

NAME:   nicolae_sif_muna_little_library
TAGS:   temple_overflow_sif_muna temple_overflow_1 no_trap_gen
TAGS:   uniq_altar_sif_muna vaults_orient_n vaults_orient_e vaults_orient_s
DEPTH:  D:3-, Vaults, Depths
WEIGHT: 3 (Vaults), 10
KITEM:  a = any randbook pre_id owner:Sif_Muna slevels:1
KFEAT:  _ = altar_sif_muna
COLOUR: a.mc+ = blue
FTILE:  a._mc+ = floor_marble
TILE:   c = wall_studio
KPROP:  a = no_tele_into
KMASK:  a = no_item_gen
KMASK:  a = no_monster_gen
: if you.in_branch("Vaults") then
SUBST:  D = .
CLEAR:  x
: else
NSUBST: D = 1:+ / *:x
: end
: interest_check(_G)
MAP
xxxxDDDx
xccc...D
xcam...D
xcam._.D
xcam...D
xccc...D
xxxxDDDx
ENDMAP

NAME:   kennysheep_orc_sif_temple
TAGS:   no_item_gen no_monster_gen no_trap_gen no_pool_fixup transparent
TAGS:   temple_overflow_1 temple_overflow_sif_muna uniq_altar_sif_muna
DEPTH:  D:4-, Orc
KFEAT:  _ = altar_sif_muna
: if you.absdepth() < 7 then
MONS:   orc wizard, orc
NSUBST: 1 = 1:1 / 1:1. / 1:$ / *:.
: elseif you.absdepth() < 12 then
MONS:   orc wizard, orc warrior
NSUBST: 1 = 3:1 / 1:1. / 1:% / 1:$ / *:.
: else
MONS:   orc sorcerer, orc knight, orc wizard
NSUBST: 1 = 1:1 / 1:1. / 2:3 / 2 = %%* / *:.
: end
TILE:   G = dngn_statue_princess / dngn_statue_cat / dngn_statue_mermaid / \
            dngn_statue_tengu / dngn_statue_twins / dngn_statue_maw
MAP
     xxxxx
   xxxwwwxxx
  xxwwwwwwwxx
 xxww.vvv.wwxx
 xww.nv_vn.wwx
xxww.v111v.wwxx
xwww.v1d1v.wwwx
xxww.nv1vn.wwxx
 xwwwWv+vWwwwx
 xxwwWG.GWwwxx
  xxww.2.wwxx
   xxxv.vxxx
     x...x
     xG.Gx
       @
ENDMAP

NAME:   hellmonk_sif_muna_bookshelves
TAGS:   temple_overflow_sif_muna temple_overflow_1 uniq_altar_sif_muna
TAGS:   transparent decor vaults_empty vaults_orient_s
DEPTH:  D:3-, Elf, Vaults, Depths
WEIGHT: 3 (Vaults), 10
KFEAT:  _ = altar_sif_muna
TILE:   c = wall_studio
FTILE:  ._c = floor_studio
: if you.in_branch("Vaults") then
SUBST:  @ = .
CLEAR:  x
: end
MAP
   xxxxx
  xxcccxx
 xxc...cxx
xxc.....cxx
xc.......cx
xc..c.c..cx
xc.......cx
xc..._...cx
xc.......cx
xc..c.c..cx
xc.......cx
xxc.....cxx
 xxc...cxx
  xx@@@xx
ENDMAP

### Trog overflow altars ######################################################

NAME:  bloody_trog
TAGS:  uniq_altar_trog temple_overflow_1 temple_overflow_trog
TAGS:  transparent decor
KPROP: . = bloody / nothing
KFEAT: _ = altar_trog
KITEM: _ = animal skin, dagger
: interest_check(_G)
MAP
...
._.
...
ENDMAP

NAME:   trog_ov_bears_minmay
TAGS:   temple_overflow_1 temple_overflow_trog uniq_altar_trog transparent
# begin at bear range
DEPTH:  D:4-
: if you.absdepth() < 10 then
MONS:   black bear
: else
MONS:   polar bear
FTILE:  '_12 = floor_frozen
: end
MONS:   bush
KFEAT:  _ = altar_trog
NSUBST: ' = 2:2 / 2 = 2' / *:'
MAP
.....
.'''.
.1_1.
.'''.
.....
ENDMAP

NAME:   tgw_trog
TAGS:   no_item_gen no_monster_gen patrolling
TAGS:   temple_overflow_1 temple_overflow_trog uniq_altar_trog
KFEAT:  _ = altar_trog
KPROP:  1 = no_tele_into
: if you.absdepth() < 16 then
MONS:   moth of wrath, rat / ribbon worm w:5
: else
MONS:   moth of wrath, dire elephant / boulder beetle w:5
: end
ITEM:   any weapon
NSUBST: M = 4:d / *:.
SUBST:  + = +....
KFEAT:  o = iron_grate
: interest_check(_G)
MAP
      xxxxxxx
     xxxMMMxxx
    xxMMM2MMMxx
   xxMM22_22MMxx
   xx.........xx
   x....ooo....x
   x...oo1oo...x
   x....ooo....x
   x...........x
   xx.........xx
    xx.......xx
     xxxx+xxxx
       xx@xx
ENDMAP

NAME:   trog_antimagical
TAGS:   uniq_altar_trog temple_overflow_1 temple_overflow_trog patrolling
TAGS:   transparent
# range of orc + orc warrior
DEPTH:  D:3-12
WEIGHT: 4
: if you.absdepth() > 5 then
KMONS:  1 = ogre god:trog ; giant club ego:antimagic pre_id | w:3 giant club / \
        ogre god:trog ; giant spiked club ego:antimagic pre_id | w:5 giant spiked club / \
        orc warrior god:trog ; halberd ego:antimagic pre_id | war axe ego:antimagic pre_id | \
        flail ego:antimagic pre_id | great mace ego:antimagic pre_id | any weapon / \
        kobold brigand god:trog ; short sword ego:antimagic pre_id | dagger ego:antimagic pre_id | \
        rapier ego:antimagic pre_id | rapier
SUBST:  2 = 1
: else
KMONS:  1 = orc god:trog ; spear ego:antimagic pre_id | hand axe ego:antimagic pre_id | \
        war axe ego:antimagic pre_id | any weapon / \
        kobold god:trog ; short sword ego:antimagic pre_id | hand axe ego:antimagic pre_id | \
        club ego:antimagic pre_id | whip ego:antimagic pre_id | any weapon / \
        goblin god:trog ; dagger ego:antimagic pre_id | short sword ego:antimagic pre_id / \
        gnoll god:trog ; spear ego:antimagic pre_id | trident ego:antimagic pre_id | \
        halberd ego:antimagic pre_id | whip ego:antimagic pre_id | halberd | any weapon
KMONS:  2 = brain worm
SUBST:  2 = 112
: end
KFEAT:  _ = altar_trog
MAP
  xxxxx
 xx.2.xx
xx.._..xx
x..1.1..x
x.......x
x.G...G.x
xx.....xx
 xx@@@xx
ENDMAP

NAME:   trog_butcher_becter
TAGS:   temple_overflow_1 temple_overflow_trog uniq_altar_trog
TAGS:   no_monster_gen no_item_gen transparent
DEPTH:  D:3-, Orc, !Orc:$
: if you.absdepth() < 6 then
MONS:   orc ; hand axe . animal skin
MONS:   rat / frilled lizard / quokka w:20
: else
MONS:   orc warrior ; war axe . animal skin
MONS:   iguana / scorpion
: end
KFEAT:  d = cache of meat
NSUBST: ' = 3:2 / *:.
SUBST:  y = x, " = .
KPROP:  1y" = bloody
KFEAT:  _ = altar_trog
: if you.depth() ~= dgn.br_depth(you.branch()) then
KFEAT:  ^ = shaft trap
: end
KFEAT:  m = iron_grate
MAP
  xxxxxxx
 xx''''dxx
xx'xxxxxxxx
xx+xmmmx^yx
xx.."1"""yx
xx..._"..xx
 xx.....xx
  xx...xx
     @
ENDMAP

NAME:   trog_hazing_becter
TAGS:   temple_overflow_1 temple_overflow_trog uniq_altar_trog
TAGS:   no_monster_gen no_item_gen no_pool_fixup transparent
DEPTH:  D:3-
MONS:   goblin ; stone q:5 . animal skin / \
        hobgoblin ; stone q:5 . animal skin / \
        kobold ; stone q:5 | throwing net q:1 . animal skin
ITEM:   stone
NSUBST: D = 6=1 / .
SUBST:  . = d....
KFEAT:  _ = altar_trog
KFEAT:  m = iron_grate
: interest_check(_G)
MAP
  xxxxx
 xxmmmxx
xx.._..xx
xDw...wDx
xDWw.wWDx
xDDw.wDDx
xxDw.wDxx
 xxx.xxx
  xx@xx
ENDMAP

NAME:   trog_three_pillars_becter
TAGS:   temple_overflow_1 temple_overflow_trog transparent decor
TAGS:   uniq_altar_trog
KFEAT:  _ = altar_trog
SUBST:  y = x..
SUBST:  z = xx.
: interest_check(_G)
MAP
 ..........
.......yy..
..yy..zxxy.
.yxxz.xbxy.
.yxb...xxy.
.yxx._.....
.......xy..
.....zbxy..
   ..yxxy..
   ...yy...
    ......
ENDMAP

### Uskayaw overflow altars ###################################################

NAME:   dancing_weapons_uskayaw
TAGS:   temple_overflow_1 temple_overflow_uskayaw transparent
TAGS:   uniq_altar_uskayaw
MONS:   generate_awake dancing weapon ; dagger | hand axe
KFEAT:  _ = altar_uskayaw
NSUBST: ' = 2:1 / *:'
KMASK:  1' = no_monster_gen
KMASK:  1' = no_item_gen
KMASK:  1' = no_trap_gen
KMASK:  1' = opaque
KPROP:  1' = no_tele_into
: interest_check(_G)
MAP
.......
.mmmmm.
.m'''m.
.m'''m.
.mmmmm.
.......
..._...
 .....
ENDMAP

NAME:    eat_drink_and_be_merry_uskayaw
TAGS:    temple_overflow_1 temple_overflow_uskayaw transparent
TAGS:    uniq_altar_uskayaw
KFEAT:   _ = altar_uskayaw
SHUFFLE: def
ITEM:    any potion q:1, any weapon
KFEAT:   f = cache of fruit / cache of meat
: interest_check(_G)
MAP
...........
.G.......G.
...........
.c.......c.
....def....
.G..._...G.
....ccc....
  .......
ENDMAP

NAME:    nicolae_uskayaw_dance_hall
# Either a square dance or a round dance depending on how the shuffle goes.
TAGS:    temple_overflow_uskayaw temple_overflow_1 transparent decor
TAGS:    uniq_altar_uskayaw
SHUFFLE: Gg
SUBST:   g : ., b : bvcmn
KFEAT: _ = altar_uskayaw
: interest_check(_G)
MAP
xxxx.........
x......GgG...
x.b...g...g..
x....G.....G.
 ._..g.....g.
x....G.....G.
x.b...g...g..
x......GgG...
xxxx.........
ENDMAP

NAME:   nicolae_uskayaw_dance_studio
TAGS:   temple_overflow_uskayaw temple_overflow_1 no_monster_gen transparent
TAGS:   patrolling uniq_altar_uskayaw
# kobold brigand depth
DEPTH:  D:6-11
KMONS:  _ = kobold brigand band
KFEAT:  _ = altar_uskayaw
MAP
xxxx+xxxx
xmmm.mmmx
xm.....mx
xm.....mx
xm.._..mx
xm.....mx
xm.....mx
xmmmmmmmx
xxxxxxxxx
ENDMAP

NAME:   nicolae_uskayaw_en_pointe
TAGS:   temple_overflow_uskayaw temple_overflow_1
TAGS:   no_trap_gen generate_awake transparent decor uniq_altar_uskayaw
KPROP:  'D = no_tele_into
MONS:   dancing weapon ; mundane short sword
MONS:   dancing weapon ; mundane falchion, dancing weapon ; mundane spear
MONS:   dancing weapon ; mundane dagger
NSUBST: D = 2=1 / 2=2 / 2=3 / 2=4
KFEAT:  _ = altar_uskayaw
KMASK:  '1234n = opaque
KMASK:  '1234 = no_item_gen
KMASK:  '1234 = no_monster_gen
TILE:   n = dngn_transparent_stone_red
TILE:   c = dngn_stone_wall_lightred
COLOUR: n = red
COLOUR: c = lightred
: interest_check(_G)
MAP
 .............
...nnnnncccc...
..nnD'Dnn..ccc.
..nDn'nDnn...c.
@.n''n'''n._.+.
..nDn'nDnn...c.
..nnD'Dnn..ccc.
...nnnnncccc...
 .............
ENDMAP

NAME:   nicolae_uskayaw_murder_on_the_dancefloor
# But you'd better not kill the groove.
TAGS:   temple_overflow_uskayaw temple_overflow_1 transparent decor
TAGS:   uniq_altar_uskayaw
KFEAT:  _ = altar_uskayaw
NSUBST: . = 4=D / 3=D.
SUBST:  . = ..a, D = DDE
: dgn.delayed_decay(_G, "DE","random corpse")
KPROP:  aE = bloody
KFEAT:  b = .
COLOUR: ._aDE = disco
FTILE:  ._aDE = floor_pebble
: interest_check(_G)
MAP
xxxx@xxxx
x.......x
x.......x
x.......x
@..._...@
x.......x
x.......x
x.......x
xxxx@xxxx
ENDMAP

# https://www.youtube.com/watch?v=vpULWBT1WEg
NAME:    nicolae_uskayaw_suspiria
TAGS:    temple_overflow_uskayaw temple_overflow_1 transparent decor
TAGS:    uniq_altar_uskayaw
SHUFFLE: Aa, Bb
SUBST:   D : l, E : ...l, F : l, H : .l, J : ...l, K : ...l, L : ...l
SUBST:   M : ...l, N : .lll, O : ...l, P : ...l, Q : ...l
KPROP:   l = no_cloud_gen
KFEAT: _ = altar_uskayaw
: interest_check(_G)
MAP
xxxxxxlll..O..ll
x.FllH.L..ll.JNl
x.....M.ll..P.K.
x_.lll.Q...E.D.@
x.....M.ll..P.K.
x.FllH.L..ll.JNl
xxxxxxlll..O..ll
ENDMAP


### Vehumet overflow altars ###################################################

# Rather than put the flame cloud on the altar, flames now surround the
# altar, and the maximum delay between flames has gone away. Thus, standing
# on the altar properly is safe, and a cautious player can time their entrance
# to take no damage.
NAME:   fiery_altar_vehumet
WEIGHT: 8
TAGS:   temple_overflow_1 temple_overflow_vehumet transparent decor
TAGS:   uniq_altar_vehumet
MARKER: : = lua:fog_machine { cloud_type = "flame", \
               pow_min = 6, pow_max = 8, delay_min = 55, delay_max = 75, \
               size = 2, walk_dist = 0, spread_rate= 0 }
KFEAT:  _ = altar_vehumet
: interest_check(_G)
MAP
.....
.:.:.
.._..
.:.:.
.....
ENDMAP

NAME:    vehumet_statue
TAGS:    temple_overflow_1 temple_overflow_vehumet transparent
TAGS:    uniq_altar_vehumet
DEPTH:   D:3-
SHUFFLE: 12
MONS:    statue name:charred name_adjective tile:mons_statue_mage \
             hp:12 hd:3 spells:throw_flame.53.magical
MONS:    statue name:frost-covered name_adjective tile:mons_statue_mage \
             hp:12 hd:3 spells:throw_frost.53.magical
KFEAT:   _ = altar_vehumet
: interest_check(_G)
MAP
...........
.bbbbbbbbb.
.b.......b.
.b.1._.....
.b.......b.
.bbbbbbbbb.
...........
ENDMAP

NAME:    vehumet_crystals
TAGS:    temple_overflow_1 temple_overflow_vehumet transparent decor
TAGS:    uniq_altar_vehumet
KFEAT:   _ = altar_vehumet
SUBST:   G : Gbb
: interest_check(_G)
: if crawl.coinflip() then
:   vault_metal_statue_setup(_G, "G", "arcane conduit")
: else
:   vault_metal_statue_setup(_G, "G", "fiery conduit")
: end
MAP
.........
..b...b..
.bbb.bbb.
..b...G..
...._....
..G...b..
.bbb.bbb.
..b...b..
.........
ENDMAP

NAME:  vehumet_altar_wand_db
TAGS:  uniq_altar_vehumet temple_overflow_1 temple_overflow_vehumet
TAGS:  transparent patrolling
DEPTH: D:3-
KFEAT: _ = altar_vehumet
MONS:  goblin; wand of flame /\
       hobgoblin; wand of flame /\
       kobold; wand of flame
: interest_check(_G)
MAP
.......
...x...
...1...
.x._.x.
.......
...x...
.......
ENDMAP

# It's part of the design from the Vehumet altar tile.
NAME:   nicolae_vehumet_altar_sigil
TAGS:   temple_overflow_vehumet temple_overflow_1 transparent decor
TAGS:   uniq_altar_vehumet
KFEAT:  _ = altar_vehumet
COLOUR: . = white
COLOUR: + = green
COLOUR: D = lightblue
COLOUR: E = lightgreen
FTILE:  .DE+ = floor_pebble
FTILE:  _ = floor_pebble_lightgreen
: interest_check(_G)
MAP
 bbb+bbb
bb..E..bb
b..DDD..b
b.D.E.D.b
+EDE_EDE+
b.D.E.D.b
b..DDD..b
bb..E..bb
 bbb+bbb
ENDMAP

NAME:    nicolae_vehumet_radiance
TAGS:    temple_overflow_vehumet temple_overflow_1 no_trap_gen transparent
TAGS:    decor uniq_altar_vehumet
SHUFFLE: DEFHJKLM / FHDELMJK, DE, JK
SUBST:   DJ = N, EKFHLM = ., N : cb
KFEAT:   _ = altar_vehumet
TILE:    c = wall_stone_scorched
: interest_check(_G)
MAP
     xxxxx
    .......
   ..MLMLM..
  ..LJKJKJL..
 ..MK.HFH.KM..
x.LJ.FDEDF.JL.x
x.MKHE...EHKM.x
x.LJFD._.DFJL.x
x.MKHE...EHKM.x
x.LJ.FDEDF.JL.x
 ..MK.HFH.KM..
  ..LJKJKJL..
   ..MLMLM..
    .......
     xxxxx
ENDMAP

### Wu Jian overflow altars ###################################################

NAME:   nzn_wu_jian_council_hall
TAGS:   temple_overflow_1 temple_overflow_wu_jian no_monster_gen no_item_gen
TAGS:   transparent decor uniq_altar_wu_jian
KFEAT:  _ = altar_wu_jian
: interest_check(_G)
MAP
    x@x
  xxx.xxx
 xxG...Gxx
xx.......xx
xG..._...Gx
xx.......xx
 xxG...Gxx
  xxxGxxx
    xxx
ENDMAP

NAME:    nzn_wu_jian_contemplation
TAGS:    temple_overflow_1 temple_overflow_wu_jian no_monster_gen no_item_gen
TAGS:    no_pool_fixup transparent decor uniq_altar_wu_jian
KMONS:   S = sacred lotus
ITEM:    mundane spear / w:2 mundane quarterstaff / w:2 mundane trident, stone
KFEAT:   S = W
NSUBST:  ' = 3=e / ', " = 4=W / ', t = t / d / -
SUBST:   ` = ', S = SSW
KFEAT:   _ = altar_wu_jian
FTILE:   e' = floor_sand
FTILE:   td- = floor_grass
COLOUR:  e' = yellow
COLOUR:  d- = green
: interest_check(_G)
MAP
 x@x
xx.xxxxxxxxxx
x'`.```'``"Wx
x```.`'``"WWx
x'`.````"WWWx
x`.t`'``"WWSx
x`t_t`'`"WWWx
x``t.'`'`"WWx
x'`'`.``'`"Wx
xxxxxx.xxxxxx
     x@x
ENDMAP

NAME:   pdpol_wu_jian_five_deadly_venoms
TAGS:   no_item_gen no_monster_gen temple_overflow_1 temple_overflow_wu_jian
TAGS:   decor uniq_altar_wu_jian
KFEAT:  _ = altar_wu_jian
KPROP:  F = no_tele_into
MARKER: F = lua:fog_machine { \
            cloud_type="thin mist", size = 1, \
            pow_max = 3, pow_min = 3, delay = 10, \
            start_clouds = 0 }
{{
  local trig_marker = TriggerableFunction:new {
    func="callback.five_deadly_venoms",
    repeated=false,
    data={
      venoms={
        "spectral demonic crawler name:centipede name_species name_replace name_descriptor",
        "spectral black mamba",
        "spectral scorpion",
        "spectral frilled lizard",
        "spectral cane toad"
      }
    }
  }
  trig_marker:add_triggerer(DgnTriggerer:new { type = "player_move" })
  lua_marker("_", trig_marker)
  lua_marker("F", portal_desc { positions = "five_deadly_venoms" })
}}
: interest_check(_G)
MAP
   ccc
   cFc
  ccncc
ccc...ccc
cFn._.nFc
cccn.nccc
 cFc.cFc
 ccc.ccc
   c@c
ENDMAP

# As an enticement to join, the Wu Jian Council has placed weapons beyond lava,
# but you can get to them if you know how to wall jump off of the metal walls.
# You can also get to them in other ways, of course, which is why most of the
# weapons are just plain.
NAME:   nicolae_wu_jian_glorious_leap
TAGS:   temple_overflow_wu_jian temple_overflow_1 no_trap_gen no_descent
TAGS:   uniq_altar_wu_jian
WEIGHT: 5
KITEM:  I = any weapon level:-2
KITEM:  i = any weapon
NSUBST: i = I / i
KFEAT:  _ = altar_wu_jian
KMASK:  >Ii' = no_monster_gen
KMASK:  >Ii' = no_item_gen
KMASK:  >Ii' = opaque
: interest_check(_G)
MAP
xxxxxxxxxxxxxxx
xccccccccvccccx
xcccilll.....cx
xcccivlll....cx
xc>+i''ll._...+
xcccivlll....cx
xcccilll.....cx
xccccccccvccccx
xxxxxxxxxxxxxxx
ENDMAP

# Abstract representations of the moves of Wu Jian's three martial arts.
# The green space is where you start, the red space is where you move to,
# the statue is where the monster is.
NAME:   nicolae_wu_jian_immortal_techniques
TAGS:   temple_overflow_wu_jian temple_overflow_1 decor transparent
TAGS:   uniq_altar_wu_jian
KFEAT:  _ = altar_wu_jian
KFEAT:  DE = .
FTILE:  D = floor_pebble_lightgreen
FTILE:  E = floor_pebble_lightred
COLOUR: D = green
COLOUR: E = red
: interest_check(_G)
MAP
cc+cccccc
c.D.c.EEc
c.E...DGc
c.G.c.EEc
ccnccc.cc
c...c...c
c._..EGDc
c...c...c
ccccccccc
ENDMAP

# The five elements, or five phases, Wood, Fire, Earth, Metal, Water,
# in a cycle of either mutual generation or mutual overcoming.
NAME:    nicolae_wu_jian_wuxing_cycle
TAGS:    temple_overflow_wu_jian temple_overflow_1 transparent \
         no_pool_fixup decor uniq_altar_wu_jian
SHUFFLE: tlcvw/lcvwt/cvwtl/vwtlc/wtlcv/tcwlv/cwlvt/wlvtc/lvtcw/vtwcl
NSUBST:  Q = 4=@ / x
KFEAT:   _ = altar_wu_jian
: interest_check(_G)
MAP
     xxQxx
   xx.....xx
  Q.........Q
 x......ll...x
 x..tt..ll...x
x...tt........x
x.............x
Q......_..cc..Q
x..ww.....cc..x
x..ww.........x
 x.....vv....x
 x.....vv....x
  Q.........Q
   xx.....xx
     xxQxx
ENDMAP

### Xom overflow altars #######################################################

NAME:   tgw_xom
TAGS:   no_item_gen no_monster_gen temple_overflow_1 temple_overflow_xom
TAGS:   uniq_altar_xom no_pool_fixup
DEPTH:  D:5-, Depths
WEIGHT: 5
MONS:   place:D:2
MONS:   orc ; club ego:chaos | dagger ego:chaos | spear ego:chaos
MONS:   gnoll ; club ego:chaos | dagger ego:chaos | spear ego:chaos
MONS:   boggart ; flail ego:chaos | rapier ego:chaos | trident ego:chaos
MONS:   tengu warrior ; flail ego:chaos | rapier ego:chaos | trident ego:chaos
MONS:   occultist ; dire flail ego:chaos | scimitar ego:chaos | partisan ego:chaos
MONS:   rakshasa ; dire flail ego:chaos | scimitar ego:chaos | partisan ego:chaos
ITEM:   gold q:1 no_pickup
KFEAT:  _ = altar_xom
:  if you.depth() == dgn.br_depth(you.branch()) then
KFEAT:  ~ = teleport trap w:20 / harlequin's trap w:3 / dispersal trap
:  else
KFEAT:  ~ = shaft trap / teleport trap / harlequin's trap w:3 / dispersal trap
:  end
NSUBST: " = 1:_ / 1:*% / 8:M / *:?, G = 1:G / 1:bvGGTU~ / 2 = vGl~???? / * = '?
NSUBST: ' = 10 = W:60 w:50 x:20 n:80 v / 8:d / * = xxxxnv
SUBST:  M : .111123M
NSUBST: 1 = 1:0 / 1:1 / 2:? / * = 01., 2 = 1:2 / 2=2. / 2:? / * = 2...
NSUBST: 3 = 1:3 / 2=3. / 1:0 / * = 3..., M = 1:1 / * = 123?
:  if you.in_branch("Depths") then
SUBST:  1 = 0, 2 = 6, 3 = 7
:  elseif you.absdepth() > 12 then
SUBST:  1 = 3, 2 = 4, 3 = 5
:  end
FTILE:  ? = floor_nerves_lightgray / floor_hall
COLOUR: ? = mountain
: vault_granite_statue_setup(_G, "G", "scintillating statue")
MAP
   xxxxxx@xxxxxx
  xxG...'.G..'.xx
 xx..'...G.'..G.xx
xx.'..G...'.G..'.xx
x...G..'...G.'..G.x
xG...'..G...'.G..'x
x"'...G..'...G.'."x
x".G.'.'..G...'.G"x
xx".'...G..'...G"xx
 xx""G"."'."G.""xx
  xx"""""""""""xx
   xxxxxxxxxxxxx
ENDMAP

NAME:    xom_teletrap_fun
TAGS:    temple_overflow_1 temple_overflow_xom uniq_altar_xom
TAGS:    transparent decor
KFEAT:   _ = altar_xom
NSUBST:  T = . / T
KFEAT:   T = teleport trap
: interest_check(_G)
MAP
.....
.TTT.
.T_T.
.TTT.
.....
ENDMAP

NAME:    xom_butterflies
TAGS:    temple_overflow_1 temple_overflow_xom transparent patrolling
MONS:    butterfly, demonic plant
KMONS:   C = brain worm
KFEAT:   _C = altar_xom
COLOUR:  . = random
: if you.absdepth() > 3 and you.absdepth() < 7 then
SUBST:   _ = ____C
: else
SUBST:   t = .
: end
NSUBST:  . = 2:1 / 2 : 2...... / *:.
: interest_check(_G)
MAP
..t
._.
t..
ENDMAP

NAME:    xom_shifter_show
TAGS:    temple_overflow_1 temple_overflow_xom uniq_altar_xom no_descent decor
DEPTH:   D:7-
MONS:    shapeshifter hd:1
KFEAT:   _ = altar_xom
NSUBST:  . = 2:1 / 1:> / * = _...
:  if you.depth() == dgn.br_depth(you.branch()) then
SUBST:   > = <
:  end
SUBST:   x = bmv
KMASK:   .1 = no_trap_gen
COLOUR:  .1 = random
FTILE:   ._<>1 = floor_pebble
MAP
 xxxxxxx
 x.....x
 m.....x
@m.._..x
 m.....x
 x.....x
 xxxxxxx
ENDMAP

NAME:    xom_confusion_cloud
TAGS:    temple_overflow_1 temple_overflow_xom uniq_altar_xom
TAGS:    no_pool_fixup transparent
KFEAT:   _ = altar_xom
MARKER:  _ = lua:fog_machine { cloud_type = "noxious fumes", \
               pow_min = 6, pow_max = 8, delay_min = 35, delay_max = 55, \
               size = 3, walk_dist = 0, spread_rate= 0 }
SUBST:   . = 1.
SHUFFLE: wW / l.
MONS:    random
MAP
  wwwww
 ww...ww
 w.....w
@W.._..w
 w.....w
 ww...ww
  wwwww
ENDMAP

NAME:    xom_redecorated
TAGS:    temple_overflow_1 temple_overflow_xom uniq_altar_xom
TAGS:    decor no_pool_fixup
KMONS:   C = brain worm
KFEAT:   _C = altar_xom
KFEAT:   ^ = teleport trap
: if you.depth() == dgn.br_depth(you.branch()) then
KFEAT:   ~ = teleport trap / alarm trap / dispersal trap
: else
KFEAT:   ~ = shaft trap / teleport trap / alarm trap / dispersal trap
: end
SUBST:   c = ccxxxv
: if you.absdepth() > 3 and you.absdepth() < 7 then
SUBST: _ = ____C
: end
NSUBST:  " = 2:^ / 1:G__ / 5:m /  * = ltbm~......
NSUBST:  T = 2:^ / *:., ^ = 2:^ / *:.
: vault_granite_statue_setup(_G, "G", "scintillating statue")
: interest_check(_G)
MAP
      @
   cccTccc
  cc"".""cc
 cc.""".""cc
 c.".."."".c
@T."."_".".T@
 c.""."..".c
 cc"".""".cc
  cc"".""cc
   cccTccc
      @
ENDMAP

NAME:   led_xom_imps
TAGS:   temple_overflow_1 temple_overflow_xom uniq_altar_xom
MONS:   crimson imp ; stone, crimson imp ; dagger ego:chaos
KPROP:  1 = no_tele_into
NSUBST: 1 = 1:2 / *:1
KFEAT:  _ = altar_xom
KFEAT:  ^ = teleport trap / dispersal trap
: interest_check(_G)
MAP
xxxx+xxxx
x1^...^1x
xxx._.xxx
x1^...^1x
xxxx+xxxx
ENDMAP

NAME:   nicolae_xom_altar_mimics
TAGS:   temple_overflow_1 temple_overflow_xom uniq_altar_xom decor transparent
WEIGHT: 1
NSUBST: _ = 1:_ / 2:XXX_ / *:X
KFEAT:  _ = altar_xom
KFEAT:  X = altar_xom mimic
: interest_check(_G)
MAP
  .......
  ._..._.
 .........
 .........
...........
._..._..._.
...........
 .........
 .........
  ._..._.
  .......
ENDMAP

NAME:    brannock_xom_greatest_gift
TAGS:    temple_overflow_1 temple_overflow_xom uniq_altar_xom transparent
WEIGHT:  2
KFEAT:   _ = altar_xom
MARKER:  _ = lua:portal_desc {gift="altar"}
{{
    dgn.persist.xom_gg_granted = false

    local los_marker = TriggerableFunction:new {
      func="callback.xom_greatest_gift",
      repeated=true
    }
    los_marker:add_triggerer(DgnTriggerer:new {
      type="player_los"})

    lua_marker('_', los_marker)
}}
: interest_check(_G)
MAP
...
._.
...
ENDMAP

NAME:   doesnt_xom_only_xom
TAGS:   temple_overflow_1 temple_overflow_xom uniq_altar_xom transparent decor
WEIGHT: 2
KFEAT:  _ = altar_xom
KFEAT:  C = C mimic
KFEAT:  g = G mimic
NSUBST: C = 1:_ / *:C
: interest_check(_G)
MAP
xxxxxxxxxxx
x.G.G.g.G.x
xgC..C..Cgx
x.........x
x.........x
xG.......Gx
x.C..C..C.x
xg.......gx
xxxx...xxxx
   x...x
   x...x
   xG.Gx
   xx+xx
ENDMAP

NAME:    regret_index_xom_buried_treasure
TAGS:    transparent temple_overflow_1 temple_overflow_xom
TAGS:    uniq_altar_xom extra decor
ITEM:    stone q:1 no_pickup
KMONS:   ! = pile of debris
KITEM:   ! = plate armour randart plus:-12 pre_id / \
             kite shield randart plus:-12 pre_id / mundane club w:9980
KITEM:   ? = mundane club / gold q:1 w:9970, large rock q:1
KFEAT:   _ = altar_xom
SHUFFLE: ?" / ?" / !!
SUBST:   b : bcc, y : xx., z : xx., Y : xxd, Z : xxd, " = .
MAP
xx@. ..xx
xbx...zbx
.yxy.xxx.
..xxxxz..
 ..xxx..@
..xxYxx.xxxxx
@xxx.xccccccx
xbx...cx"d_cx
xx..Z.cdx?dcx
    ..+ddx"cx@..xx
     .cdddxc...xbx
     .cc+cccx.xxx.
     @.....xxYxx..
        .Z..xxx..
         ..zxxxx..
         .xxx.yxy@
         xcz...xbx
         xx@. ..xx
ENDMAP

NAME:    regret_index_xom_of_box
TAGS:    transparent no_monster_gen temple_overflow_1
TAGS:    temple_overflow_xom uniq_altar_xom
DEPTH:   D:5-12, Orc
MONS:    fire bat, hell hound, scorpion, sky beast, orange demon, raiju
ITEM:    box of beasts mimic
KMONS:   p = demonic plant
KFEAT:   P = demonic_tree
KFEAT:   _ = altar_xom
SHUFFLE: 12, ?!
: if you.in_branch("Orc") or you.depth() >= 12 then
TAGS:    extra
SUBST:   ? = 5, ! = 6
: elseif you.absdepth() >= 9 then
SUBST:   ? = 3, ! = 4
: else
SUBST:   2 = 34, ?! = .
: end
SHUFFLE: xp, pPtU', xGv"
SUBST:   d : d %:490, - : +ccc, '" = .
NSUBST:  % = 1:% / 1:$ / *:.
TILE:    c = dngn_stone_wall_darkgray
: vault_granite_statue_setup(_G, "G", "scintillating statue")
MAP
  ccccccccccc.@.c
  ccc.d1....c.p.c
  c.cdx..dx.c...c
  c.+....!d.-..c
 c..+..._...-..c
 c..+.d?....-.c
c...c.xd..xdc.c
c.p.c....2d.ccc
c.@.ccccccccccc
ENDMAP

### Yredelemnul overflow altars ###############################################

NAME:   yredelemnul_altar_generic
TAGS:   uniq_altar_yredelemnul temple_overflow_1 temple_overflow_yredelemnul
TAGS:   transparent decor
KFEAT:  C = altar_yredelemnul
KMONS:  f = withered plant
: interest_check(_G)
MAP
.....
.f.f.
..C..
.f.f.
.....
ENDMAP

NAME:   lemuel_zombie_altar_yredelemnul
TAGS:   no_pool_fixup uniq_altar_yredelemnul no_monster_gen temple_overflow_1
TAGS:   temple_overflow_yredelemnul transparent  uniq_zombie_altar
KFEAT:  _ = altar_yredelemnul
MONS:   patrolling zombie
NSUBST: A = 2:1 / *:.
MAP
xxxxxxxxxxxxxxxx
xxxxAAAAAAAAxxxx
xxxx........xxxx
@............._x
xxxx........xxxx
xxxxAAAAAAAAxxxx
xxxxxxxxxxxxxxxx
ENDMAP

NAME:   lemuel_mausoleum_altar_yredelemnul
TAGS:   uniq_altar_yredelemnul temple_overflow_1 temple_overflow_yredelemnul
TAGS:   uniq_mausoleum_altar transparent
# see the kiku mausoleum altar for the depth
DEPTH:  D:4-10, Crypt
: if you.in_branch("Crypt") then
MONS:   zombie, guardian mummy, skeletal warrior, ghoul
: else
MONS:   zombie, mummy, wight, weeping skull
: end
NSUBST: ? = 1:_ / *:1
SUBST:  1 = 1:30 2 3 4
KFEAT:  _ = altar_yredelemnul
KMONS:  _ = human zombie
MAP
ccccccccccccccc
c?c?c?c?c?c?ccG
c+c+c+c+c+c+ccc
c............+@
c+c+c+c+c+c+ccc
c?c?c?c?c?c?ccG
ccccccccccccccc
ENDMAP

NAME:   yredelemnul_forgotten_temple_becter
TAGS:   temple_overflow_1 temple_overflow_yredelemnul no_monster_gen no_item_gen
TAGS:   transparent uniq_altar_yredelemnul
: if you.in_branch("Depths") then
KMONS:  _ = spectral juggernaut
SUBST:  1 = ?
: else
MONS:   spectral orc
KMONS:  _ = weeping skull
: end
KFEAT:  _ = altar_yredelemnul
KFEAT:  . = web trap / .
: interest_check(_G)
: decorative_floor(_G, '1?', "broken floral vase")
MAP
xxxxxxxxx
xcccccccx
xc.._..cx
xcc.1.ccx
xc.....cx
xcc...ccx
xxcc+ccxx
 xxx@xxx
ENDMAP

NAME: nicolae_yredelemnul_corpse_copse
TAGS: temple_overflow_yredelemnul temple_overflow_1 no_monster_gen
TAGS: transparent patrolling uniq_altar_yredelemnul
MONS:   zombie, alderking
KFEAT:  _ = altar_yredelemnul
KFEAT:  T = petrified_tree
# Statistically, the probability that none of the edge glyphs will end up as .
# and the level builder won't be able to connect the vault is extremely small.
# ...but not zero. Thus:
NSUBST: D = 1:. / *:E, t = 1:. / * = TTE
SUBST:  E = t:4 T:2 .:3
: nsubst( ". = " .. you.absdepth() .. " = 1 / 1 = 1. / ." )
: if you.in_branch("Depths") then
NSUBST: 1 = 1:2 / *:1
: end
COLOUR: t = brown
TILE:   t = dngn_tree_dead
: set_feature_name("tree", "dead tree")
MAP
   DDDDD
  DE.E.ED
 DE.E.E.ED
DE.ttttt.ED
D.Et...tE.D
DE.t._.t.ED
D.Et...tE.D
DE.ttttt.ED
 DE.E.E.ED
  DE.E.ED
   DDDDD
ENDMAP

NAME:   nicolae_yredelemnul_ghost_church
TAGS:   temple_overflow_yredelemnul temple_overflow_1 transparent
TAGS:   uniq_altar_yredelemnul
TAGS:   no_trap_gen
WEIGHT: 5
KPROP:  dO' = no_tele_into
KMASK:  dO' = no_monster_gen
NSUBST: d = * / $ / %
KFEAT:  _ = altar_yredelemnul
KMONS:  O = player ghost
KMONS:  z = patrolling zombie
: interest_check(_G)
MAP
xxxxxxxxxxx
xxxcccccxxx
xxcc...ccxx
xxcz._.zcxx
xccc...cccx
xc.......cx
xc.n===n.cx
xc.n'O'n.cx
+..ndddn..+
xcccccccccx
xxxxxxxxxxx
ENDMAP

### Zin overflow altars #######################################################

NAME:   zin_angel
TAGS:   no_item_gen no_monster_gen temple_overflow_1 temple_overflow_zin decor
TAGS:   uniq_altar_zin vaults_empty vaults_orient_s
DEPTH:  D:3-, Vaults, !Vaults:$, Depths
WEIGHT: 3 (Vaults), 10
KFEAT:  _ = altar_zin
KPROP:  1 = no_tele_into
COLOUR: G = lightgray
COLOUR: c = white
TILE:   c = wall_church
FTILE: _.G1m+ = floor_limestone
: local h = "ego:holy_wrath"
: mons("angel god:zin dbname:zin_angel ; sacred scourge w:2 | whip w:8 " .. h ..
:                                    " | long sword " .. h .. " | mace " .. h ..
:                                    " | any weapon level:20 " .. h)
: if you.in_branch("Depths") then
TILE:   G = dngn_statue_depths_zot_angel
: else
TILE:   G = dngn_statue_angel
:   if you.in_branch("Vaults") then
CLEAR:  x
SUBST:  @ = .
:   end
: end
: interest_check(_G)
MAP
xxxxxxxxx
xcccccccx
xc1m.._cx
xcmm...cx
xc.....cx
xcG...Gcx
xccc+cccx
    @
ENDMAP

NAME:   zin_treasury
TAGS:   no_item_gen no_monster_gen temple_overflow_1 temple_overflow_zin
TAGS:   uniq_altar_zin no_descent
DEPTH:  D:3-, Vaults, !Vaults:$
WEIGHT: 3 (Vaults), 10
KFEAT:  _ = altar_zin
KFEAT:  m = iron_grate
KPROP:  $ = no_tele_into
COLOUR: c = white
TILE:   c = wall_church
FTILE:  _.m+$ = floor_limestone
: interest_check(_G)
: if you.in_branch("Vaults") then
CLEAR:  x
SUBST:  @ = .
: end
MAP
  xxxxxxx
  xcccccx
 xxc$$$cxx
xxcc$$$ccxx
xccmm$mmccx
xcc.mmm.ccx
xcc.._..ccx
xxc.....cxx
 xccc+cccx
     @
ENDMAP

NAME:   zin_purify
TAGS:   no_item_gen no_monster_gen temple_overflow_1 temple_overflow_zin
TAGS:   transparent uniq_altar_zin vaults_empty
DEPTH:  D:3-, Vaults, !Vaults:$
WEIGHT: 3 (Vaults), 10
KFEAT:  _ = altar_zin
KFEAT:  v = general shop name:Zin type:Purification suffix:Station count:1 \
            greed:30 ; potion of curing
COLOUR: c' = white
TILE:   c = wall_church
FTILE:  Td'_ = floor_limestone
: interest_check(_G)
MAP
 .....
..ccc..
.ccTcc.
..c_c..
 .....
...'...
..'v'..
 ..'..
  ...
ENDMAP

NAME:   zin_scriptorium
TAGS:   no_item_gen no_monster_gen temple_overflow_1 temple_overflow_zin
TAGS:   uniq_altar_zin no_descent vaults_empty
DEPTH:  D:3-, Vaults, !Vaults:$
WEIGHT: 1 (Vaults), 10
ITEM:   any scroll
KFEAT:  _ = altar_zin
KFEAT:  m = iron_grate
KPROP:  ? = no_tele_into
COLOUR: c = white
TILE:   c = wall_church
FTILE:  _.m+d = floor_limestone
NSUBST: ? = 2:d / *:.
: interest_check(_G)
MAP
  xxxxxxx
  xcccccx
 xxc???cxx
 xcc???ccx
xxcccmcccxx
xcc.....ccx
xcc.._..ccx
xxc.....cxx
 xccc+cccx
     @
ENDMAP

NAME:   zin_academy
TAGS:   no_item_gen no_monster_gen temple_overflow_1 temple_overflow_zin
TAGS:   transparent uniq_altar_zin vaults_empty
TAGS:   vaults_orient_w vaults_orient_s vaults_orient_e
DEPTH:  D:3-, Vaults, !Vaults:$, Depths
WEIGHT: 3 (Vaults), 10
KFEAT:  _ = altar_zin
KFEAT:  G = metal_statue
COLOUR: c = white
COLOUR: ' = white
TILE:   c = wall_church
COLOUR: G = silver
TILE:   G = dngn_silver_statue
FTILE:  _'G = floor_limestone
SUBST:  ' = .
: vault_metal_statue_setup(_G, "G", "silver statue")
: interest_check(_G)
MAP
  ccccccc
cccG.t.Gccc
c.t.'_'.t.c
....'''....
...........
...'''''...
 .........
   .....
ENDMAP

NAME:   zin_statuary
TAGS:   no_item_gen no_monster_gen temple_overflow_1 temple_overflow_zin
TAGS:   transparent uniq_altar_zin vaults_empty
DEPTH:  D:3-, Vaults, !Vaults:$
WEIGHT: 3 (Vaults), 10
KFEAT:  _ = altar_zin
COLOUR: c = white
TILE:   c = wall_church
TILE:   G = dngn_statue_triangle
FTILE:  _'+ = floor_limestone
: vault_metal_statue_setup(_G, "S", "silver statue")
: interest_check(_G)
MAP
 .......
..ccccc..
.cc'_'cc.
..cc+cc..
...'''...
.S.....S.
 ..G.G..
  .....
ENDMAP

### The Shining One overflow altars ###########################################

# TSO's small temple (1KB)
# Idea stolen from protected_by_tso_3.
NAME:     tso_altar
TAGS:     no_item_gen no_rotate decor transparent
TAGS:     temple_overflow_1 temple_overflow_the_shining_one
TAGS:     uniq_altar_the_shining_one
COLOUR:   _ = yellow
FTILE:    _A = floor_limestone
SUBST:    _ = .
COLOUR:   c = white
TILE:     c = wall_church
KFEAT:    A = altar_the_shining_one
: interest_check(_G)
MAP
  xxxxx
xxxcccxxx
xcccAcccx
xc.___.cx
xct._.tcx
xc.._..cx
xct...tcx
xccc+cccx
ENDMAP

NAME:    tso_metal_star
TAGS:    no_monster_gen no_trap_gen no_pool_fixup no_item_gen decor
TAGS:    temple_overflow_1 temple_overflow_the_shining_one transparent
TAGS:    uniq_altar_the_shining_one vaults_empty
DEPTH:   D:3-, Vaults, !Vaults:$, Depths
WEIGHT:  3 (Vaults), 10
KFEAT:   _ = altar_the_shining_one
SUBST:   ! : vmmTG..
: if you.in_branch("Vaults") then
CLEAR:   @
: end
: interest_check(_G)
MAP
          @
          .
         ...
         .v.
        ..v..
       ..vvv..
      ..vv.vv..
     ..vv...vv..
    ..vm..!..mv..
  ...vv..!.!..vv...
@..vvv..!._.!..vvv..@
  ...vv..!.!..vv...
    ..vm..!..+v..
     ..vv...vv..
      ..vv.vv..
       ..vvv..
        ..v..
         .v.
         ...
          .
          @
ENDMAP

NAME:   tso_oasis_becter
TAGS:   temple_overflow_1 temple_overflow_the_shining_one transparent
TAGS:   no_item_gen no_monster_gen uniq_altar_the_shining_one
KMONS:  f = plant
SUBST:  ` = ff.
COLOUR: . = yellow
FTILE:  `.Tf = floor_sand
FTILE:  _ = floor_limestone
COLOUR: c = white
TILE:   c = wall_church
KFEAT:  _ = altar_the_shining_one
: interest_check(_G)
MAP
  ....
 ..``....
 .`ww`...
 ..``..c..
......+cc..
..T..cc_cc.
 .....ccc..
   ....c..
     ....
ENDMAP

NAME: nicolae_tso_swordbearing_angel
TAGS: temple_overflow_the_shining_one uniq_altar_the_shining_one
TAGS: temple_overflow_1 decor transparent
COLOUR: . = yellow
COLOUR: c = white
FTILE: @._+ = floor_limestone
TILE: c = wall_church
KFEAT: _ = altar_the_shining_one
: interest_check(_G)
MAP
     xxxxx
    xxcccxx
    xcc.ccx
xxxxxc._.cxxxxx
xcccccc.ccccccx
xc...........cx
xcc....v....ccx
xxcc..vvv..ccxx
 xxcc..v..ccxx
  xxcc.v.ccxx
   xxc.v.cxx
    xc.v.cx
    xc.v.cx
    xc...cx
    xcc+ccx
ENDMAP


NAME:   nicolae_tso_carved_into_rock
TAGS:   temple_overflow_the_shining_one uniq_altar_the_shining_one
TAGS:   temple_overflow_1 transparent decor
KFEAT:  _ = altar_the_shining_one
SUBST:  X = xxx.
COLOUR: ' = yellow
COLOUR: c = white
TILE:   c = wall_church
FTILE:  G'_ = floor_limestone
: interest_check(_G)
: vault_metal_statue_setup(_G, "G", "golden statue")
MAP
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
xxxxxxxxxxxxxXXXXxxxxxxxxxxxxx
xxxxxxxXXXXXX....XXXXXXxxxxxxx
xxxxXXX................XXXxxxx
xxXX......................XXxx
xX......XxX........XxX......Xx
X.....XXxxxxcG'''GcxxxXX.....X
.....Xxxxxxxccc'cccxxxxxX.....
@...Xxxxxxxxxc'''cxxxxxxxX...@
..Xxxxxxxxxxxc'_'cxxxxxxxxXX..
XXxxxxxxxxxxxc'''cxxxxxxxxxxXX
xxxxxxxxxxxxxcccccxxxxxxxxxxxx
xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
ENDMAP

NAME: nicolae_tso_besieged_by_evil
TAGS: temple_overflow_the_shining_one uniq_altar_the_shining_one
TAGS: temple_overflow_1 patrolling transparent no_monster_gen
# imp ranges
DEPTH: D:3-8
SUBST: c = ccc' s:2 z:2, + = ++'
NSUBST: ' = 2:s / 2:z / 2:sz'' / *:'
COLOUR: 'sz = yellow / none w:5
COLOUR: c = white
TILE: c = wall_church
FTILE: +'_sz = floor_sandstone / none w:5
KMONS: s = orc skeleton / kobold skeleton / goblin skeleton / hobgoblin zombie
KMONS: z = orc zombie / kobold zombie / goblin zombie / hobgoblin zombie
: if you.absdepth() <= 4 then
KMONS: _ = crimson imp / white imp w:5
: else
KMONS: _ = crimson imp / white imp / shadow imp
: end
KFEAT: _ = altar_the_shining_one
MAP
.............
.............
..cccc.cccc..
..cccc+cccc..
..cc'''''cc..
..cc'''''cc..
...+''_''+...
..cc'''''cc..
..cc'''''cc..
..cccc+cccc..
..cccc.cccc..
.............
.............
ENDMAP

### Multiple god overflow altars ###############################################

# These ones are multiple overflows to specific gods;
# they get tags temple_overflow_N and temple_overflow_<god>.

NAME:    good_gods_temple_1
TAGS:    temple_overflow_3 temple_overflow_elyvilon transparent
TAGS:    temple_overflow_zin temple_overflow_the_shining_one
TAGS:    no_monster_gen no_trap_gen decor
MONS:    plant
KFEAT:   D = altar_elyvilon
KFEAT:   E = altar_zin
KFEAT:   F = altar_the_shining_one
SHUFFLE: DEF
SUBST:   1 : GTV1
SUBST:   X : GTt
SUBST:   ? : t@
MAP
  ttttttt
 tt.....tt
tt...E...tt
tt.D...F.tt
tt...1...tt
 tt.....tt
  tt...tt
   ?X@X?
ENDMAP

NAME:    good_gods_mini_temple
TAGS:    temple_overflow_3 temple_overflow_elyvilon
TAGS:    temple_overflow_zin temple_overflow_the_shining_one
TAGS:    no_monster_gen no_trap_gen no_pool_fixup
TAGS:    no_item_gen decor transparent
MONS:    plant
KFEAT:   D = altar_elyvilon
KFEAT:   E = altar_zin
KFEAT:   F = altar_the_shining_one
: if crawl.coinflip() then
SHUFFLE: x" / t1 / wT / IJ
: else
SUBST:   " : ..x
: end
SUBST:   HI : x
SUBST:   x : xcvb
SUBST:   ' : .
SHUFFLE: EG/'E
SUBST:   J : G
SHUFFLE: DEF
MAP
 xxxxx
xxxGxxx
xD.E.Fx
xx+++xx
 ""@""
ENDMAP

NAME:    dreamdust_divine_triumvirate
TAGS:    temple_overflow_3 temple_overflow_elyvilon
TAGS:    temple_overflow_zin temple_overflow_the_shining_one
TAGS:    no_monster_gen no_item_gen transparent
KFEAT:   D = altar_zin
KFEAT:   E = altar_elyvilon
KFEAT:   F = altar_the_shining_one
NSUBST:  ? = 1:D / 1:E / 1:F
TILE:    G = dngn_statue_triangle
KFEAT:   a = granite_statue
TILE:    a = dngn_statue_angel
: if crawl.one_chance_in(2) then
# Silver theme
KFEAT:   c = v
TILE:    c = dngn_metal_wall_white
COLOUR:  c- = white
FTILE:   -aDEFG = floor_w_marble
: else
# Gold theme
TILE:    c = wall_church
COLOUR:  c- = yellow
FTILE:   -aDEFG = floor_limestone
: end
MAP
.....................
.cccccccca-acccccccc.
..ccccccca-accccccc..
 ..cca---------acc..
  ..cc---?-?---cc..
   ..cc---G---cc..
    ..cc--?--cc..
     ..cc---cc..
      ..ccacc..
       ..ccc..
        ..c..
         ...
ENDMAP

NAME:   grunt_temple_overflow_champion_of_chaos
TAGS:   temple_overflow_2 temple_overflow_makhleb temple_overflow_xom
TAGS:   no_monster_gen transparent
MONS:   crimson imp ; dagger ego:chaos pre_id
KFEAT:  A = altar_makhleb
KFEAT:  B = altar_xom
: vault_granite_statue_setup(_G, "G", "scintillating statue")
MAP
xxxxx
xAGBx
x.1.x
x...x
xx+xx
ENDMAP

NAME:  grunt_temple_overflow_growth_and_decay
TAGS:  temple_overflow_2 temple_overflow_fedhas temple_overflow_kikubaaqudgha
TAGS:  transparent
KFEAT: A = altar_fedhas
KFEAT: B = altar_kikubaaqudgha
MONS:  plant / nothing
MONS:  withered plant / nothing
MAP
xxxxx
x111xx@@
x1A111..xxx
x11.....22xxxx
xxxx11.....22x
   xxx..222B2x
      @@xx222x
         xxxxx
ENDMAP

NAME:   grunt_temple_overflow_holy_war
TAGS:   temple_overflow_2 temple_overflow_the_shining_one
TAGS:   temple_overflow_yredelemnul transparent
MONS:   angel, profane servitor
FTILE:  A+_Kn1 = floor_limestone
FTILE:  B-;LN2 = floor_crypt
TILE:   c = wall_church
TILE:   C = wall_catacombs
KFEAT:  A = altar_the_shining_one
KFEAT:  B = altar_yredelemnul
KFEAT:  C = rock_wall
KFEAT:  KL = floor
KFEAT:  - = closed_door
KFEAT:  N = clear_stone_wall
KPROP:  12 = no_tele_into
KMASK:  12 = opaque
COLOUR: c = white
COLOUR: C = magenta
MARKER: K = lua:fog_machine {cloud_type = "blessed fire", \
                             pow_min = 10, pow_max = 10, delay = 10, \
                             size = 1, walk_dist = 0, spread_rate = 0, \
                             excl_rad = 0 }
MARKER: L = lua:fog_machine {cloud_type = "foul pestilence", \
                             pow_min = 10, pow_max = 10, delay = 10, \
                             size = 1, walk_dist = 0, spread_rate = 0, \
                             excl_rad = 0 }
MAP
xxxxxxxxxxxx@xxxxxxxxxxxx
xcccccccccc...CCCCCCCCCCx
xcnnK_K_K_c...C;L;L;LNNCx
xc1n_A____+...-;;;;B;N2Cx
xcnnK_K_K_c...C;L;L;LNNCx
xcccccccccc...CCCCCCCCCCx
xxxxxxxxxxxx@xxxxxxxxxxxx
ENDMAP

NAME:  grunt_temple_overflow_lords_of_destruction
TAGS:  temple_overflow_2 temple_overflow_makhleb temple_overflow_vehumet
TAGS:  transparent
KFEAT: A = altar_makhleb
KFEAT: B = altar_vehumet
MONS:  crimson imp ; wand of flame charges:1
MAP
 xxxxx
xxA.Bxx
x..1..x
xx...xx
 xx.xx
  x+x
ENDMAP

NAME:  grunt_temple_overflow_order_and_chaos_1
TAGS:  temple_overflow_2 temple_overflow_xom temple_overflow_zin transparent
KPROP: _1 = no_tele_into
KMASK: _1 = opaque
KMASK: _1 = no_trap_gen
KFEAT: A = altar_xom
KFEAT: B = altar_zin
FTILE: n_1 = floor_limestone
MONS:  angel god:zin dbname:zin_angel perm_ench:confusion generate_awake / \
       angel god:zin dbname:zin_angel perm_ench:mute generate_awake w:1 / \
       angel god:zin dbname:zin_angel perm_ench:mad generate_awake w:1 / \
       angel god:zin dbname:zin_angel perm_ench:dumb generate_awake w:1
MAP
 .......
....A....
..nnnnn..
..n___n..
@.n_1_n.@
..n___n..
..nnnnn..
....B....
 .......
ENDMAP

NAME:    grunt_temple_overflow_order_and_chaos_2
TAGS:    temple_overflow_2 temple_overflow_makhleb temple_overflow_zin
TAGS:    transparent
MONS:    executioner / balrug / green death / cacodemon / blizzard demon
MONS:    angel god:zin dbname:zin_angel
KFEAT:   A = altar_makhleb
KFEAT:   B = altar_zin
KFEAT:   L-_ = floor
KFEAT:   C = stone_wall
KFEAT:   N = clear_stone_wall
SUBST:   ; = -_, - = --_, X = C-
SHUFFLE: 12nN / 12nN / Gg''
KPROP:   -1 = bloody / nothing w:5
KPROP:   12gG = no_tele_into
KMASK:   12gG = opaque
COLOUR:  C = white
FTILE:   _BN2 = floor_limestone
TILE:    C = wall_church
: vault_granite_statue_setup(_G, "G", "scintillating statue")
: vault_metal_statue_setup(_G, "g", "silver statue")
MAP
    x.@.x
  xxx...xxx
xxxXXX+CCCxxx
xccc--;__CCCx
xc1nA-;_BN2Cx
xccc--;__CCCx
xxxXXX+CCCxxx
  xxx...xxx
    x.@.x
ENDMAP

NAME:   dolorous_temple_overflow_order_and_chaos_3
TAGS:   temple_overflow_2 temple_overflow_nemelex_xobeh temple_overflow_zin
TAGS:   no_item_gen no_monster_gen no_trap_gen transparent decor
KPROP:  12 = no_tele_into
MONS:   generate_awake goblin god:nemelex_xobeh name:sharper n_suf n_des n_noc
MONS:   generate_awake angel god:zin dbname:zin_angel
KFEAT:  A = altar_nemelex_xobeh
KFEAT:  B = altar_zin
KFEAT:  _ = floor
TILE:   b = dngn_crystal_lightmagenta
FTILE:  _ = floor_limestone
COLOUR: b = lightmagenta
COLOUR: _ = brown
KMASK:  12 = opaque
: set_feature_name("crystal_wall", "wall of pink crystal")
: interest_check(_G)
MAP
 ....bbbb+vvvv....
..bbbb..._...vvvv..
.bb....U._.T....vv.
.bmm....._.....mmv.
.b1m..A.._..B..m2v.
.bmm....._.....mmv.
.bb....U._.T....vv.
..bbbb..._...vvvv..
 ....bbbb+vvvv....
ENDMAP

NAME:    grunt_temple_overflow_magic_moments
TAGS:    temple_overflow_3 temple_overflow_kikubaaqudgha
TAGS:    temple_overflow_sif_muna temple_overflow_vehumet
TAGS:    no_item_gen transparent
KFEAT:   A = altar_kikubaaqudgha
KFEAT:   B = altar_sif_muna
KFEAT:   C = altar_vehumet
ITEM:    randbook owner:Kikubaaqudgha disc:necromancy spells:soul_splinter \
         numspells:1
# You already get a direct damage spell from other god altars.
ITEM:    randbook owner:Sif_Muna disc:hexes numspells:1 slevels:1 / \
         randbook owner:Sif_Muna disc:summoning numspells:1 slevels:1 / \
         randbook owner:Sif_Muna disc:translocation numspells:1 slevels:1
ITEM:    randbook owner:Vehumet disc:conjuration spells:magic_dart numspells:1
SHUFFLE: AdB"C` / A'BeC` / A'B"Cf
MAP
     xxxxx
    xx.B.xx
  xxxG.".Gxxx
 xxGxx...xxGxx
 x...xx.xx...x
 xAd.......`Cx
 x...x.U.x...x
 xxGxx...xxGxx
  xxx  @  xxx
ENDMAP

# This doesn't place multiple gods, but it can place one of two distinct
# gods.
# Shouldn't get uniq_altar tags because it will eat both trog and makhleb
# while only placing one of the two.
NAME:  lightli_temple_of_fire
TAGS:  temple_overflow_1 temple_overflow_trog temple_overflow_makhleb
KPROP: Y = no_tele_into
KMASK: Y = no_monster_gen
{{
  local params = dgn.map_parameters()
  if params ~= nil then
    local tag = unpack(params)
    if tag ~= nil then
      if string.find(tag, "trog") ~= nil then
        kfeat('_ = altar_trog')
      elseif string.find(tag, "makhleb") ~= nil then
        kfeat('_ = altar_makhleb')
      else
        kfeat('_ = altar_trog / altar_makhleb')
      end
    else
      kfeat('_ = altar_trog / altar_makhleb')
    end
  else
    kfeat('_ = altar_trog / altar_makhleb')
  end
}}
MAP
llcccccc
lccYcYccc
lclllllcc
lcl...lcc
lcl...lYc
@+.._.lcc
lcl...lYc
lcl...lcc
lclllllcc
lccYcYccc
llcccccc
ENDMAP

NAME:    grunt_temple_overflow_opulence
TAGS:    temple_overflow_2 temple_overflow_gozag temple_overflow_nemelex_xobeh
TAGS:    transparent
SHUFFLE: GU, _O
KFEAT:   _ = altar_gozag
KFEAT:   O = altar_nemelex_xobeh
FTILE:   ._GOU+ = floor_limestone
TILE:    x = wall_sandstone
COLOUR:  x = yellow
: vault_metal_statue_setup(_G, "G", "golden statue")
MAP
  xxxxxxx
 xx.....xx
xx...U...xx
x.........x
x.G._.O.G.x
x.........x
xx...U...xx
 xx.....xx
  xxx+xxx
ENDMAP

NAME:   grunt_temple_overflow_gold_and_silver
TAGS:   temple_overflow_2 temple_overflow_gozag temple_overflow_zin
TAGS:   transparent vaults_empty vaults_orient_s no_wall_fixup
DEPTH:  D:3-, Vaults, !Vaults:$
WEIGHT: 3 (Vaults), 10
KITEM:  $ = gold q:1 / gold q:2
KFEAT:  _ = altar_gozag
KFEAT:  O = altar_zin
: if crawl.one_chance_in(4) then
SUBST:  v = x
TILE:   x = wall_orc
FTILE:  +._OG$ = floor_w_marble
:   vault_metal_statue_setup(_G, "G", "silver statue")
: else
COLOUR: v = white
TILE:   v = dngn_metal_wall_white
FTILE:  +._OG$ = floor_limestone
:   vault_metal_statue_setup(_G, "G", "golden statue")
:   set_feature_name("metal_wall", "silver wall")
: end
: if you.in_branch("Vaults") then
SUBST: + = .
: end
MAP
vvvvvvvvv
v..$$$..v
v._.G.O.v
v...$...v
vv.....vv
 vvv+vvv
ENDMAP

NAME:   grunt_temple_overflow_forces_of_nature
TAGS:   temple_overflow_2 temple_overflow_fedhas temple_overflow_qazlal
TAGS:   transparent
MONS:   fungus / plant / bush
KMONS:  D = pile of debris
SUBST:  2 = 1.
KFEAT:  _ = altar_fedhas
KFEAT:  O = altar_qazlal
KPROP:  12Ll = no_tele_into
SUBST:  L = ll^., l = cll., c : cD
: if you.depth() ~= dgn.br_depth(you.branch()) then
KFEAT:  ^ = shaft trap
: end
MAP
 222.@.LLL
21112.LlllL
21_.....OlL
21112.LlllL
 222.@.LLL
ENDMAP

NAME:   kennysheep_ying_yang
TAGS:   temple_overflow_2 temple_overflow_elyvilon temple_overflow_yredelemnul
TAGS:   no_monster_gen no_trap_gen no_pool_fixup patrolling transparent
KFEAT:  A = altar_elyvilon
KFEAT:  B = altar_yredelemnul
KFEAT:  D = tree
KFEAT:  '"wW = floor
TILE:   D = dngn_tree_dead
FTILE:  .t1ATW = floor_grass
COLOUR: tW = white
FTILE:  'D2BVw = floor_crypt
COLOUR: Dw = black
MAP
       """""""
     """""ccc"""
  """""""''Dccc"""
  "ccccccD''DDccc"
 ""ctttttcD'''DDc""
 "cct....tcD'''Dcc"
 "ct.www.TtD''''Dc""
""ct.wwwA.tD''''Dcc"
"cct.www.TtD'''''Dc"
"ct......tcD'''''Dc"
"ct.....tccD'''''Dc"
"ct.....tcD''''''Dc"
"ct.....tDV'WWW'DDc"
"cct....tD'BWWW'Dcc"
""ct....tDV'WWW'Dc""
 "cct...tcD''''Dcc"
 ""ctt...tcDDDDDc""
  "ccctt..tcccccc"
  """ccct.."""""""
    """ccc"""""
      """""""
ENDMAP

NAME:    palyth_temple_overflow_mages
TAGS:    temple_overflow_3 temple_overflow_sif_muna
TAGS:    temple_overflow_kikubaaqudgha temple_overflow_vehumet
TAGS:    no_item_gen no_monster_gen patrolling transparent
# 3/5 chance for one altar to have a low-level randbook and extra orc wizards.
KMONS:   xyzXYZ~ = orc wizard
KFEAT:   xX = altar_sif_muna
KFEAT:   yY = altar_kikubaaqudgha
KFEAT:   zZ = altar_vehumet
: local coinflip = util.random_from({"summoning", "forgecraft"})
: kitem("X = randbook owner:Sif_Muna disc:" .. coinflip .. " numspells:1 slevels:1")
KITEM:   Y = randbook owner:Kikubaaqudgha disc:necromancy numspells:1 slevels:1
KITEM:   Z = randbook owner:Vehumet disc:conjuration numspells:1 slevels:1
SHUFFLE: x'y"z` / x'y"z` / X~y"z` / x'Y~z` / x'y"Z~
SUBST:   '"` = .
NSUBST:  ~ = 1:~ / 2:. / * = 1.
MAP
ccccccccccccc
c'x'c"y"c`z`c
c'''c"""c```c
cc+ccc+ccc+cc
c...........c
c....T.T....c
cc....T....cc
 cc..T.T..cc
  cc.....cc
   ccc@ccc
ENDMAP

# Xom seems to not think much of Hepliaklqana's ancestral focus,
# and mocks the species roots of incoming pilgrims.
# This will probably go over most players' heads, but it's neat anyway -- PF
NAME:    regret_index_temple_of_mockery
TAGS:    temple_overflow_2 temple_overflow_xom temple_overflow_hepliaklqana
# we place the monster on demand via a marker rather than in the builder because
# the dependency on the player species otherwise can affect seed stability
{{
    local los_marker = TriggerableFunction:new {
      func="callback.do_species_mock",
      repeated=true,
      props = {mock_location=1}
    }
    los_marker:add_triggerer(DgnTriggerer:new {
      type="player_los"})

    lua_marker('D', los_marker)
}}
KMONS:   1 = spectral ugly thing
KFEAT:   A = altar_xom
KFEAT:   B = altar_hepliaklqana
SHUFFLE: AB
SUBST:   G = G...
KPROP:   1D' = no_tele_into
KMASK:   1D' = no_item_gen
KMASK:   1D' = no_trap_gen
KMASK:   ' = no_monster_gen
MARKER:  1 = lua:fog_machine { cloud_type = "thin mist", \
             pow_min = 20, pow_max = 50, delay = 1, size = 1, \
             walk_dist = 1, start_clouds = 1, spread_rate = 10}
MAP
cccccc
ccb'bccccc
cbDn1bc.+.
c'nnnnc.c.
cb1nA...cc
ccbn.G.bc
cccc..Bcc
 c...bcc
 c+cccc
 c..c
ENDMAP

NAME:   gammafunk_temple_of_torment
WEIGHT: 2
TAGS:   no_monster_gen no_trap_gen temple_overflow_2 no_descent
TAGS:   temple_overflow_kikubaaqudgha temple_overflow_yredelemnul
: if you.depth() <= 4 then
MONS: zombie / skeleton
MONS: mummy / shadow imp / wight / mummy / phantom
KMONS: 3 = menkaure, wight
SUBST: 2 = 2---
: elseif you.depth() <= 7 then
MONS: zombie / skeleton / mummy / shadow imp / wight / mummy / phantom
MONS: burial acolyte / wraith / vampire
KMONS: 3 = menkaure, burial acolyte / wraith / vampire
SUBST: 2 = 12--
: else
MONS: mummy / wight / zombie / skeleton / phantom
MONS: wraith / vampire / shadowghast / w:5 death knight / w:5 skeletal warrior
MONS: flayed ghost / death knight
NSUBST: 2 = 2 / 2-
: end
SUBST:  1 = 11-
NSUBST: R = R / -
KFEAT:  D = altar_kikubaaqudgha
KFEAT:  E = altar_yredelemnul
MARKER: P = lua:transp_loc("temple_of_torment_entry")
MARKER: Q = lua:transp_dest_loc("temple_of_torment_entry")
MARKER: R = lua:transp_loc("temple_of_torment_exit")
MARKER: S = lua:transp_dest_loc("temple_of_torment_exit")
TILE:   c = wall_tomb
FTILE:  -QRVDE|*$123Gcn = floor_tomb
COLOUR: -QR|*$123 = brown
: vault_granite_statue_setup(_G, "G", "sarcophagus")
MAP
 ...............
 .nnnnnnnnnnnnn.
 .nR----1----Rn.
 .n-2-------2*n.
 .n--ccc-ccc-$n.
 .n--cGc-cGc-Dn.
..n----------|n..
@Pn1----Q---3YnS@
..n----------*n..
 .n--cGc-cGc-En.
 .n--ccc-ccc-$n.
 .n-2-------2|n.
 .nR----1----Rn.
 .nnnnnnnnnnnnn.
 ...............
ENDMAP

#Hep and Dith chose the same way to attract worshippers
NAME:   riverfiend_overflow_shadow_ancestor
TAGS:   temple_overflow_2
TAGS:   temple_overflow_hepliaklqana temple_overflow_dithmenos
KPROP:  12- = no_tele_into
KMASK:  12- = no_item_gen
KMASK:  12- = no_monster_gen
MONS:   ancestor, shadowghast
KFEAT:  A = altar_hepliaklqana
KFEAT:  B = altar_dithmenos
KFEAT:  DE = stone_wall
MARKER: 1 = lua:fog_machine { cloud_type = "thin mist", pow_min = 100, pow_max = 100, \
                            delay = 100, size = 1, start_clouds = 1 , spread_rate = 50 }
MARKER: 2 = lua:fog_machine { cloud_type = "black smoke", pow_min = 100, pow_max = 100, \
                            delay = 100, size = 1, start_clouds = 1 , spread_rate = 50 }
TILE:   D = wall_stone_smooth
TILE:   E = wall_stone_dark
MAP
   ccccc
 DDD...cEE
DD-n....nEE
D-1n....n-EE
D--nA..Bn2-E
DD-n....n--E
 DDD....n-EE
   cc@@cEEE
ENDMAP

NAME:   pdpol_temple_overflow_zin_treasury_gozag_greed
TAGS:   temple_overflow_2 temple_overflow_zin temple_overflow_gozag
TAGS:   no_item_gen no_monster_gen
KFEAT:  _ = altar_zin
KFEAT:  O = altar_gozag
KITEM:  O = wand of digging charges:1 no_pickup
KFEAT:  m = iron_grate
KPROP:  $ = no_tele_into
KITEM:  $ = gold q:1 / gold q:2
RTILE:  x = wall_sandstone
COLOUR: x = yellow
COLOUR: c = white
TILE:   c = wall_church
FTILE:  _.m+c$ = floor_limestone
: interest_check(_G)
MAP
  ccccccxxxxx
 cc..mm$x...xx
@+.._m$$x.O..+@
 cc..mm$x...xx
  ccccccxxxxx
ENDMAP

NAME:    nzn_overflow_gifts_of_might_and_magic
TAGS:    temple_overflow_2 temple_overflow_trog temple_overflow_sif_muna
TAGS:    no_item_gen no_monster_gen patrolling transparent
SHUFFLE: D1-/E2'
COLOUR:  1- = red
COLOUR:  2' = blue
KFEAT:   D = altar_trog
KFEAT:   E = altar_sif_muna
: local egos = {["antimagic"] = 1, ["heavy"] = 2, ["flaming"] = 2}
: if you.absdepth() <= 3 then
{{
local enchant = 2 + (crawl.one_chance_in(3) and 1 or 0)
local weapons = {["spear"] = 1, ["hand axe"] = 1, ["mace"] = 1,
                 ["falchion"] = 1}
kitem("1 = " .. dgn.random_item_def(weapons, nil, "ego:none plus:" .. enchant))
}}
KMONS:   1 = gnoll ; animal skin / w:2 Terence
KMONS:   2 = white imp / w:2 Jessica
KITEM:   2 = randbook owner:Sif_Muna numspells:1 slevels:1
: elseif you.absdepth() <= 7 then
:     if crawl.one_chance_in(5) then
KMONS:   1 = duvessa
KMONS:   2 = dowan
:     else
KMONS:   1 = orc warrior
KMONS:   2 = orc wizard
:     end
{{
local weapons = {["trident"] = 1, ["war axe"] = 1, ["flail"] = 1,
                 ["long sword"] = 1}
kitem("1 = " .. dgn.random_item_def(weapons, egos, "plus:0"))
}}
KITEM:   2 = randbook owner:Sif_Muna numspells:2 slevels:2
: else
KMONS:   1 = troll
KMONS:   2 = ynoxinul
{{
local weapons = {["partisan"] = 1, ["war axe"] = 1, ["morningstar"] = 1,
                 ["scimitar"] = 1}
kitem("1 = " .. dgn.random_item_def(weapons, egos, "plus:0"))
}}
KITEM:   2 = randbook owner:Sif_Muna numspells:3 slevels:4
: end
MAP
     xx@@@x
    xx...xx
   xx...xxxxx
  xx...xx-D-x
 xx...xxx-1-x
xx...xAx...xx
x'2'xxx...xx
x'E'xx...xx
xxxxx...xx
  xx...xx
  x@@@xx
ENDMAP

NAME:   hellmonk_overflow_destroyed_library
TAGS:   temple_overflow_2 temple_overflow_trog temple_overflow_sif_muna
TAGS:   no_item_gen no_monster_gen transparent
KFEAT:  E = altar_trog
KFEAT:  F = altar_sif_muna
KFEAT:  J = closed_clear_door
KFEAT:  H = iron_grate
ITEM:   any book
NSUBST: D = 1:c / *=c......
SUBST:  -:Hmm., J:JJ., l:Lll
MARKER:  L = lua:fog_machine { cloud_type = "flame", delay = 10, \
                  pow_min = 100, pow_max = 100, size = 1, walk_dist = 0, \
                  excl_rad = 0 }
TILE:   c = wall_studio
MAP
      @
    xx+xx
    x...x
   xx...xx
  xxD...Dxx
 xxD.....Dxx
 xD.......Dx
 xD..DDD..Dx
xxD..DlD..Dxx
xD....E....Dx
xx.DD...DD.xx
xx----J----xx
xx.ccc.ccc.xx
xc....F....cx
xxc..cdc..cxx
 xc..ccc..cx
 xc.......cx
 xxc.....cxx
  xxc...cxx
   xx...xx
    x...x
    xx+xx
      @
ENDMAP

NAME:    dolorous_overflow_abandoned_chaos_spawn_temple
TAGS:    temple_overflow_3 temple_overflow_xom
TAGS:    temple_overflow_makhleb temple_overflow_nemelex_xobeh
TAGS:    no_item_gen no_monster_gen no_trap_gen transparent
SHUFFLE: DEF
KFEAT:   D = altar_xom
KFEAT:   E = altar_makhleb
KFEAT:   F = altar_nemelex_xobeh
NSUBST:  G = 2:g / *:G
NSUBST:  H = 1:+ / *:b
NSUBST:  . = 1:i / *:.
KPROP:   1 = no_tele_into
MONS:    generate_awake chaos spawn
KMONS:   g = pile of debris
KITEM:   i = any damaged weapon ego:chaos pre_id
COLOUR:  b = lightred
TILE:    b = dngn_crystal_lightred
KMASK:   1 = opaque
: vault_granite_statue_setup(_G, "G", "scintillating statue")
: set_feature_name("crystal_wall", "wall of orange crystal")
MAP
   bbHbb
 bbbb.bbbb
bbb.....bbb
H....G....H
b.........b
b..D...E..b
b...mmm...b
H.G.m1m.G.H
b...mmm...b
b....F....b
b.........b
H....G....H
bbb.....bbb
 bbbb.bbbb
   bbHbb
ENDMAP

### Variable overflow altars ##################################################

# To make an overflow temple for N altars, give it the tag
# "temple_overflow_generic_N".

# The boring standard.
# B places the altar to a guaranteed god.
NAME:   overflow_temple_1_default
TAGS:   temple_overflow_generic_1 allow_dup transparent
MAP
B
ENDMAP

# General overflow vault, can be used for all gods.
NAME:     general_overflow_altar
WEIGHT:   10
TAGS:     no_monster_gen no_pool_fixup temple_overflow_generic_1 no_descent
SHUFFLE:  xXY / xXY / xXY / abc
SHUFFLE:  XY
SUBST:    X=+, Y=x, a=w, b=w, c=w
SHUFFLE:  ABCD
SUBST:    A=>, C='GTU, D='
SHUFFLE:  wll
KMASK:    . = !opaque
MAP
........
.xXYYxx.
.xwwwwx.
.xwABwx.
.xwCDwx.
.xwwwwx.
.xxxxxx.
........
ENDMAP

NAME:    old_standard_altar
TAGS:    transparent allow_dup decor temple_overflow_generic_1
SHUFFLE: cvxxxx
MAP
...........
.xxxx.xxxx.
.xx.....xx.
.x.......x.
.x.......x.
.....B.....
.x.......x.
.x.......x.
.xx.....xx.
.xxxx.xxxx.
...........
ENDMAP

NAME:    lemuel_round_altar
TAGS:    allow_dup transparent decor temple_overflow_generic_1
SUBST:   X:x@
SHUFFLE: cvxx
MAP
   xxXxx
  xx...xx
 xx.....xx
 x.......x
 X...B...@
 x.......x
 xx.....xx
  xx...xx
   xxXxx
ENDMAP

NAME:  lemuel_crystal_altar
TAGS:  transparent allow_dup decor temple_overflow_generic_1
MAP
b@b
@B@
b@b
ENDMAP

NAME:    lemuel_doored_altar
TAGS:    transparent decor temple_overflow_generic_1
SHUFFLE: XY
SUBST:   X = .
SUBST:   Y = +
MAP
.........
.xxxmxxx.
.xxxmxxx.
.xxxmxxx.
.X.YBY.X.
.xxxYxxx.
.xxx.xxx.
.xxxXxxx.
.........
ENDMAP

NAME:   lemuel_coloured_pillars_altar
TAGS:   no_rotate decor temple_overflow_generic_1 transparent
COLOUR: c = blue / yellow / red / cyan
MAP
xxxxxxxxxxxxxxxxxxxx
...................x
c...c...c...c...c..x
@.................Bx
c...c...c...c...c..x
...................x
xxxxxxxxxxxxxxxxxxxx
ENDMAP

NAME: nicolae_overflow_crystal_walls
TAGS: temple_overflow_generic_1 transparent
SHUFFLE: ACDE, FGHI
SUBST: A : b, C : b., D : b., E : b., F : b, G : b., H : b., I : b.
MAP
AAAAA@FFFFF
ACCCC.GGGGF
ACDDD.HHHGF
ACDEE.IIHGF
ACDE...IHGF
@....B....@
FGHI...EDCA
FGHII.EEDCA
FGHHH.DDDCA
FGGGG.CCCCA
FFFFF@AAAAA
ENDMAP

NAME:    marbit_many_paths
TAGS:    temple_overflow_generic_1 transparent
SHUFFLE: pqr / bqr / pbr / pqb / bbr / pbb / bqb
SUBST:   pqr = .
NSUBST:  . = 1:0 / *:.
FTILE:   .B0 = FLOOR_PEBBLE_GREEN
MAP
 xxxxxxxxx
xx..qxq..xx
xpqrpqrpqrxx
@qrpqrpqrpBx
xrpqrpqrpqxx
xx..pxp..xx
 xxxxxxxxx
ENDMAP

NAME:  lemuel_tele_altar
TAGS:  temple_overflow_generic_1 transparent decor no_descent
SUBST: D = ^ x
KFEAT: ^ = teleport trap
KMASK: 'B = opaque
MAP
...........
.xxxx^xxxx.
.x'''''''x.
.x'''''''x.
.x'''''''x.
.D'''B'''D.
.x'''''''x.
.x'''''''x.
.x'''''''x.
.xxxxDxxxx.
...........
ENDMAP

NAME:  pf_just_have_faith
WEIGHT: 1
TAGS: no_monster_gen temple_overflow_generic_1
KMASK: $ = no_trap_gen
KFEAT: m = lava mimic
# We use a statue mimic to stop autoexplore before the player reaches the lava.
KFEAT: G = granite_statue mimic
# The gold pulls an unspoiled player next to the mimics.
KITEM: $ = gold q:3 no_pickup
MAP
xxxxx
xl.lx
x.B.x
x.$.x
xlmlx
xl$lx
xlmlx
x.$.x
x.G.x
..@..
ENDMAP

NAME:   amcnicky_altar_gilded
TAGS:   transparent no_monster_gen temple_overflow_generic_1
SUBST: p = . $:5
SUBST: q = . $:2
MAP
.........
.mmmmmmm.
.mqqqqqm.
.mqpppqm.
.+qpBpqm.
.mqpppqm.
.mqqqqqm.
.mmmmmmm.
.........
ENDMAP

NAME:   mainiacjoe_overflow_brackets
TAGS:   temple_overflow_generic_1 transparent
SUBST:  c : ccnvt
NSUBST: w = 1:. / *:w
SUBST:  w : wl
KMASK:  lw = no_monster_gen
KMASK:  w = no_pool_fixup
MAP
...........
.wwwwwwwww.
.w.......w.
.w.ccccc.w.
.w.c.....w.
.w.c.B.c.w.
.w.....c.w.
.w.ccccc.w.
.w.......w.
.wwwwwwwww.
...........
ENDMAP

NAME:  mainiacjoe_overflow_boulevard
TAGS:  temple_overflow_generic_1 transparent
SUBST: P : cnvbtwl123
SUBST: Q : cnvbtwl123
MONS:  plant, bush, fungus
KMASK: wl = no_monster_gen
KMASK: w = no_pool_fixup
MAP
.............................
@.PPPP..QQQQ..B..QQQQ..PPPP.@
.............................
ENDMAP

NAME:  mainiacjoe_overflow_six_doors_small
TAGS:  temple_overflow_generic_1 transparent
SUBST: c : cvt
SUBST: P : cnvbtwl
KMASK: wl = no_monster_gen
KMASK: w = no_pool_fixup
MAP
cccc+cccc
+.......+
c.P...P.c
c.P.B.P.c
c.P...P.c
+.......+
cccc+cccc
ENDMAP

NAME:  mainiacjoe_overflow_tiny_flanked
TAGS:  temple_overflow_generic_1 transparent
SUBST: P : cnvbtwl123
MONS:  plant, bush, fungus
KMASK: wl = no_monster_gen
KMASK: w = no_pool_fixup
MAP
.......
.P.B.P.
.......
ENDMAP

NAME:   mainiacjoe_overflow_cross_hatched
TAGS:   temple_overflow_generic_1 transparent
SUBST:  p : cnvbtwl123
MONS:   plant, bush, fungus
KMASK:  wl = no_monster_gen
KMASK:  w = no_pool_fixup
MAP
...........
.p.ppppp.p.
.p.......p.
.p.p...p.p.
.p.p.B.p.p.
.p.p...p.p.
.p.......p.
.p.ppppp.p.
...........
ENDMAP

NAME:  mainiacjoe_overflow_chevrons
TAGS:  temple_overflow_generic_1
SUBST: c : cvbn
SUBST: p : cnvbtwl123
SUBST: q : cnvbtwl123G
MONS:  plant, bush, fungus
KMASK: wl = no_monster_gen
KMASK: w = no_pool_fixup
MAP
...........
...........
..ppppppp..
..ppppppp..
..pp.......
..pp.......
..pp..qqqq.
..pp..q....
..pp..q.B..
......q....
...........
ENDMAP

NAME:  mainiacjoe_overflow_24_doors
TAGS:  temple_overflow_generic_1 transparent
SUBST: c : xcvb
MAP
ccc+cc+cc+ccc
c.....c.....c
c.....c.....c
+cc+cc+cc+cc+
c..c.....c..c
c..c+ccc+c..c
c..c.....c..c
+..+..B..+..+
c..c.....c..c
c..c+ccc+c..c
c..c.....c..c
+cc+cc+cc+cc+
c.....c.....c
c.....c.....c
ccc+cc+cc+ccc
ENDMAP

NAME:   mainiacjoe_overflow_surrounded_room
TAGS:   temple_overflow_generic_1 transparent
SUBST:  c : cvb
MAP
    .......
.....ccccc.....
.ccccc...ccccc.
.+.....B.....+.
.ccccc...ccccc.
.....ccccc.....
    .......
ENDMAP

NAME:  mainiacjoe_overflow_alcove_1
TAGS:  temple_overflow_generic_1 transparent
SUBST: c : xcvbt
MAP
ccccccc
c.....c
c..B..c
cc@@@cc
ENDMAP

NAME:  mainiacjoe_overflow_alcove_2
TAGS:  temple_overflow_generic_1 transparent
SUBST: c : xcvb
SUBST: G : GTUV
MAP
ccccccc
c.....c
c..B..c
c.....c
cGc.cGc
ccc@ccc
ENDMAP

NAME:  mainiacjoe_overflow_alcove_4
TAGS:  temple_overflow_generic_1 transparent
SUBST: c : xcnvb
SUBST: p : cnvbt123wl
MONS:  plant, bush, fungus
KMASK: wl = no_monster_gen
KMASK: w = no_pool_fixup
MAP
ccccccccc
c.......c
c.p.B.p.c
c.p...p.c
c.ppppp.c
c.......c
ccc+++ccc
ENDMAP

NAME:    mainiacjoe_overflow_concentric_impassable
TAGS:    temple_overflow_generic_1 transparent
NSUBST:  l = 1:. / *:l
NSUBST:  w = 1:. / *:w
KMASK:   wl = no_monster_gen
KMASK:   w = no_pool_fixup
SHUFFLE: wl
MAP
...........
.lllllllll.
.l.......l.
.l.wwwww.l.
.l.w...w.l.
.l.w.B.w.l.
.l.w...w.l.
.l.wwwww.l.
.l.......l.
.lllllllll.
...........
ENDMAP

NAME:  mainiacjoe_overflow_catwalk
TAGS:  temple_overflow_generic_1
TAGS:  transparent
SUBST: l : lw
KMASK: wl = no_monster_gen
KMASK: w = no_pool_fixup
MAP
..........
..lllllll.
.llllll...
.llB....G.
.llllll...
..lllllll.
..........
ENDMAP

NAME:   mainiacjoe_overflow_paths
TAGS:   temple_overflow_generic_1 transparent
SUBST:  c : xcbvt
SUBST:  w : lw
KMASK:  wl = no_monster_gen
KMASK:  w = no_pool_fixup
MAP
@ccccccccc@
c..wwwww..c
c.w.....w.c
c.w.www.w.c
c.ww...ww.c
c.ww.B.ww.c
c.ww...ww.c
c.w.www.w.c
c.w.....w.c
c..wwwww..c
@ccccccccc@
ENDMAP

NAME:   mainiacjoe_overflow_small_starburst
TAGS:   temple_overflow_generic_1 transparent
SUBST:  c : cvbtwl
KMASK:  w = no_pool_fixup
KMASK:  wl = no_monster_gen
MAP
  .........
 ...cc.cc...
..c..c.c..c..
..cc.....cc..
......B......
..cc.....cc..
..c..c.c..c..
 ...cc.cc...
  .........
ENDMAP

# This overflow altar can only place on D:3, the bottom edge of where the early-
# game ecumenical altars place. It's supposed to count as both an overflow and
# an ecumenical altar vault, and this seemed the easiest way to implement that.
# The player can choose the ecumenical altar, or risk going downstairs and then
# coming back up for the known god.
NAME:    nicolae_overflow_ecumenical_swirl
TAGS:    temple_overflow_generic_1 transparent no_descent
DEPTH:   D:3
KFEAT:   _ = altar_ecumenical
KFEAT:   ~! = T
KFEAT:   HJ = G
KMASK:   'B}])H~ = opaque
KMASK:   'B}])H~ = no_monster_gen
KMASK:   'B}])H~ = no_item_gen
SHUFFLE: !GH/JT~
SUBST:   } = }])
FTILE:   '`_}])+~cnBGHT = floor_limestone
COLOUR:  '` = yellow
MAP
...............
.....cc+cc.....
..!.cc```cc.!..
...cc`````cc...
..cc````ccccc..
.cc````ncH'Hcc.
.c`````n'''''c.
.c``_``n''B''c.
.c`````n'''''c.
.ccG`Gcn''''cc.
..ccccc''''cc..
...cc'''''cc...
..!.cc'}'cc.!..
.....ccccc.....
...............
ENDMAP

# Technically, you can also prove your dedication by burning a teleport scroll
# instead of dropping down a level, which I guess is also acceptable.
NAME:   nicolae_overflow_prove_your_dedication
TAGS:   temple_overflow_generic_1 transparent no_descent
DEPTH:  !D:$, !Depths:$
KFEAT:  F : G w:20 / T / U
KMASK:  `E>FB = opaque
KMASK:  `E>FB = no_monster_gen
KMASK:  `E>FB = no_item_gen
KPROP:  `E>FB = no_tele_into
SUBST:  G : GGTU
MARKER: D = lua:transp_loc("nico_of_prove")
MARKER: E = lua:transp_dest_loc("nico_of_prove")
MAP
...........
.GcccncccG.
..cF```Fc..
.DnE`>`Bn.@
..cF```Fc..
.GcccncccG.
...........
ENDMAP

NAME:   amethyst_overflow_temple_binary
TAGS:   temple_overflow_generic_2 transparent
SUBST:  p : .:15 c:10 g:3 n:2
SUBST:  G : G:20 T:10 U:1 .:1
SUBST:  g : t:10 T:10 .:5 w:5 U:1 l:1
SUBST:  c : c:20 x:5 v:1 b:1
SUBST:  + : +:10 .:10 A:5
KMASK:  TUw = no_monster_gen
MAP
  ccc     ccc
 ccGcccccccGcc
cc...ccgcc...cc
cB.p..+.+..p.Bc
cc...cc.cc...cc
 ccGccg.gccGcc
  ccccc+ccccc
       @
ENDMAP

NAME:   gammafunk_temple_overflow_statue
TAGS:   temple_overflow_generic_2 transparent
SUBST:  g : t:10 T:10 .:5 w:5 l:5 U:1
KMASK:  wlTU = no_monster_gen
MAP
  ccc
cccGccc
c.B.B.c
cc...cc
ccg.gcc
 cc+cc
   @
ENDMAP

NAME:   gammafunk_temple_overflow_pools
TAGS:   temple_overflow_generic_2 transparent
SUBST:  G : G:20 T:10 U:1 .:1
KMASK:  TU = no_monster_gen
MAP
 ccccc ccccc
cc.B.ccc.B.cc
c.....G.....c
c..T.....T..c
cc.........cc
 ccc.....ccc
   ccc+ccc
      @
ENDMAP

NAME:    gammafunk_temple_overflow_elements
TAGS:    temple_overflow_generic_2 transparent
SHUFFLE: lw
KMASK:   lw = no_monster_gen
MAP
 ccccccc
ccB...Bcc
cclc+cwcc
 ccc@ccc
ENDMAP

NAME:    gammafunk_temple_overflow_wave
TAGS:    temple_overflow_generic_2 transparent
SUBST:   p = G:20 c:20 1 w:5 l:5
MONS:    plant / bush
KMASK:   Twl = no_monster_gen
MAP
   ccccc
 cccpcc
ccTB.+@
ccTB.+@
 cccpcc
   ccccc
ENDMAP

NAME:    jmf_multi_god_temple
TAGS:    transparent temple_overflow_generic_2
SHUFFLE: abc
SUBST:   a:+, b:x, c:x
MAP
............
.axxxxxxxxa.
.x........x.
.bT......Tb.
.x..B..B..x.
.cT......Tc.
.xxxxmmxxxx.
.xxx$$$$xxx.
.xx0....0xx.
..xx....xx..
...xG..Gx...
............
ENDMAP

NAME:  jmf_multi_god_temple2
TAGS:  transparent temple_overflow_generic_2
MAP
............
..vvvvvvvv..
.vv......vv.
.v..x..x..v.
.v.Bx..xB.v.
.v..x..x..v.
.vT0x..x0Tv.
.vvvx++xvvv.
...Gx..xG...
...+....+...
...GxxxxG...
............
ENDMAP

NAME:   mainiacjoe_overflow_catch_the_wave
TAGS:   temple_overflow_generic_2 transparent
NSUBST: p = 1:@ / *:.
NSUBST: q = 1:@ / *:.
SUBST:  b : cvbtwl123
MONS:   plant, bush, fungus
MAP
              .......
            ...bbbbb...
    ... .....bbb...bbb...
.....B...bbbbb......bbbb.
.bbb...bbb......bbb....b.
..bbbbbb......bbbbbb.....
....bbb...bbbbbb...bbbb..
.b......bbbbbb...B...bbb.
.bbb...bbb..... ... .....
...bbbbb...
  .......
ENDMAP

NAME:  mainiacjoe_overflow_two_lobes
TAGS:  temple_overflow_generic_2 transparent
SUBST: l : lwn
SUBST: b : bvt
KMASK: w = no_pool_fixup
KMASK: wl = no_monster_gen
MAP
  cccccc        cccccc
 cc....ccc    ccc....cc
 c.......cc  cc.......c
cc.bbb....c  c....bbb.cc
c....bbb..cccc..bbb....c
c......bb..ll..bb......c
c...B...b..ll..b...B...c
c......bb..ll..bb......c
c....bbb..+cc+..bbb....c
cc.bbb....c@@c....bbb.cc
 c.......cc  cc.......c
 cc....ccc    ccc....cc
  cccccc        cccccc
ENDMAP

NAME:  mainiacjoe_overflow_catwalk_spiral
TAGS:  temple_overflow_generic_2 transparent
SUBST: w : wl
KMASK: w = no_pool_fixup
KMASK: wl = no_monster_gen
MAP
...............
.wwwww.wwwwwww.
.w.....w.....w.
.w.wwwww.www.w.
.w.w...w.wBw.w.
.w.w.w.w.w.w.w.
.w.wBw.w...w.w.
.w.www.wwwww.w.
.w.....w.....w.
.wwwwwww.wwwww.
...............
ENDMAP

NAME:  mainiacjoe_overflow_big_doors
TAGS:  temple_overflow_generic_2 transparent
SUBST: c : cvb
SUBST: p : nvbtwl123G
MONS:  plant, bush, fungus
KMASK: wl = no_monster_gen
KMASK: w = no_pool_fixup
MAP
cccccc+++cccccc
c...+.....+...c
c.B.+.ppp.+.B.c
c...+.....+...c
cccccc+++cccccc
ENDMAP

NAME:  mainiacjoe_overflow_swirl
TAGS:  temple_overflow_generic_2 transparent
SUBST: c : cvb
MAP
       ccccc
       c...c
       c.B.c
 +cccccc...c
 c...c.ccc.c
 c.c.c....cc
 c.c...cc.c
 c.cc...c.c
cc....c.c.c
c.ccc.c...c
c...cccccc+
c.B.c
c...c
ccccc
ENDMAP

NAME:  mainiacjoe_overflow_divided_tiny
TAGS:  temple_overflow_generic_2 transparent
SUBST: c : xcvb
SUBST: l : wl
KMASK: wl = no_monster_gen
KMASK: w = no_pool_fixup
MAP
+cccccccc
c...l...c
c.B.l.B.c
c...l...c
cccccccc+
ENDMAP

NAME:  mainiacjoe_overflow_large_starburst
TAGS:  temple_overflow_generic_2 transparent
SUBST: b : cnvbtwl
KMASK: wl = no_monster_gen
KMASK: w = no_pool_fixup
MAP
.............
.b.bbb.bbb.b.
.b...b.b...b.
.bbb.b.b.bbb.
...b.b.b.b...
.B.........B.
...b.b.b.b...
.bbb.b.b.bbb.
.b...b.b...b.
.b.bbb.bbb.b.
.............
ENDMAP

NAME:  nicolae_overflow_squiral
TAGS:  temple_overflow_generic_2 no_pool_fixup transparent
MAP
........wwwwwwww
.wwwwwww.......w
.w......cccccc.w
.w.ccccc.....c.w
.w.c....wwww.c.w
.w.c.www...w.c.w
.w.c.wB.cc.w.c.w
.w.c.w...c.w.c.w
c.w.c.w...c.w.c.
c.w.c.ww.Bc.w.c.
c.w.c...ccc.w.c.
c.w.cccc....w.c.
c.w.....wwwww.c.
c.wwwwww......c.
c.......ccccccc.
cccccccc........
ENDMAP

NAME:    nicolae_overflow_two_pavilions
TAGS:    temple_overflow_generic_2 no_pool_fixup transparent
SHUFFLE: DEFH
SUBST:   DE : wl, FH : wl
KPROP:   l = no_cloud_gen
MAP
DDDDDDD@FFFFFFF
DcccccD.FcccccF
DcEEEcD.FcHHHcF
DcEB.......BHcF
DcEEEcD.FcHHHcF
DcccccD.FcccccF
DDDDDDD@FFFFFFF
ENDMAP

NAME: minmay_overflow_temple_star_quad
TAGS: temple_overflow_generic_3 transparent
: decorative_floor(_G, 'V', "floral vase")
MAP
           c
           c
          ccc
          cBc
         cc.cc
         c...c
        cc...cc
        c.....c
      ccc.....ccc
    ccc....G....ccc
  ccc.....Vc......ccc
cccB.....GcccG.....Bccc
  ccc......cV.....ccc
    ccc....G....ccc
      ccc.....ccc
        c.....c
        cc...cc
         c...c
         cc.cc
          c.c
          c+c
           @
ENDMAP

NAME:   gammafunk_temple_overflow_forgotten
TAGS:   temple_overflow_generic_3 transparent
SUBST:  p = x:50 . 1, T = V:30 T, + = +:20 .
NSUBST: _ = 3:1 / *:_
MONS:   plant / bush
KMASK:  T = no_monster_gen
TILE:   x = wall_brick_brown_vines
FTILE:  _+T12B = floor_pebble_yellow
MAP
 ppppppp
pxB_B_Bxp
p_______p
p___T___p
px_____xp
 xxx+xxx
    @
ENDMAP

NAME:   grunt_temple_overflow_diamond
TAGS:   temple_overflow_generic_3 transparent
SUBST:  T = T G V:1 U:1 t:1
MAP
      c
     ccc
    ccBcc
   cc...cc
  cccc+cccc
 cc.c...c.cc
ccB.+.T.+.Bcc
 cc.c...c.cc
  cccc+cccc
   cc...cc
    cc.cc
     c.c
      @
ENDMAP

NAME:   gammafunk_temple_overflow_claw
TAGS:   temple_overflow_generic_3 transparent
SUBST:  l : lw
KMASK:  lw = no_monster_gen
MAP
  ...........
 ..cc..c..cc..
..cc..ccc..cc..
.ccc..ccc..ccc.
.ccc.ccccc.ccc.
.ccccccGcccccc.
.ccGB..B..BGcc.
..ccl.....lcc..
..ccll...llcc..
 ..ccll.llcc..
  ..ccl.lcc..
   ..cc+cc..
    ...@...
ENDMAP

NAME:   grunt_temple_overflow_cloverleaf
TAGS:   temple_overflow_generic_4 transparent
SUBST:  T : T U:1 V:1
MAP
 ccccc.@.ccccc
cc...cc.cc...cc
c.G.G.c.c.G.G.c
c..B..c.c..B..c
c.G...c.c...G.c
cc...+c.c+...cc
.ccccc...ccccc.
@......T......@
.ccccc...ccccc.
cc...+c.c+...cc
c.G...c.c...G.c
c..B..c.c..B..c
c.G.G.c.c.G.G.c
cc...cc.cc...cc
 ccccc.@.ccccc
ENDMAP

NAME: nicolae_overflow_quartered_altars
TAGS: temple_overflow_generic_4 transparent
SHUFFLE: fgh/ijk, pq/rs
SUBST: pqi = ., rk = c, s = +, z : cm, j : GTt
CLEAR: fgh
MAP
  ffghgff
 @.ccccc.@
f.qp.c.pq.f
fcp..z..pcf
gc..BcB..cg
hcczccczcch
gc..BcB..cg
fcp..z..pcf
f.qp.c.pq.f
 @.ccccc.@
  ffghgff
ENDMAP

NAME:   mainiacjoe_overflow_alcove_3
TAGS:   temple_overflow_generic_4 transparent
MONS:   plant, bush, fungus
KMONS:  4 = sacred lotus
KFEAT:  4 = w
SUBST:  c : xccv
SUBST:  p : cnvbt1234wl
NSUBST: 4 = 1:4 / * = W
KMASK:  wl = no_monster_gen
KMASK:  w = no_pool_fixup
MAP
ccccccc
cB.c.Bc
c.....c
cc.p.cc
c..p..c
cB...Bc
ccc@ccc
ENDMAP

NAME:   nicolae_overflow_macrodata_refinement
TAGS:   temple_overflow_generic_4 transparent
COLOUR: n = white
COLOUR: . = green
TILE:   n = dngn_transparent_stone_white
FTILE:  .Bcn = floor_pebble_green
MAP
.........
....bn...
..B.bnB..
.nnnbn...
.bbbnbbb.
...nbnnn.
..Bnb.B..
...nb....
.........
ENDMAP

NAME:   minmay_overflow_temple_star_hex
TAGS:   temple_overflow_generic_5 transparent
KMASK:  T = no_monster_gen
MAP
          ccc
         ccBcc
        cc...cc
       cc.....cc
cccccccc...G...cccccccc
cB...................Bc
ccc......G...G......ccc
  ccc.............ccc
    ccc....T....ccc
  ccc.............ccc
ccc......G...G......ccc
cB...................Bc
cccccccc...G...cccccccc
       cc.....cc
        cc...cc
         cc.cc
          c+c
          ...
          .@.
ENDMAP

NAME:   minmay_overflow_temple_hex
TAGS:   temple_overflow_generic_6 transparent
: decorative_floor(_G, 'V', "floral vase")
MAP
   cccccccccc
   cB......Bc
  cc........cc
  cV..c..c..Vc
 cc..........cc
 c...c....c...c
cc............cc
cB..c......c..Bc
cc............cc
 c...c....c...c
 cc..........cc
  cV..c..c..Vc
  cc........cc
   cB......Bc
   cccc++cccc
      ....
      ....
      .@@.
ENDMAP

NAME:  grunt_temple_overflow_octagram
TAGS:  temple_overflow_generic_7 transparent
SUBST: T : T G t V:1
: decorative_floor(_G, 'p', "garden patch")
MAP
          c
         ccc
        ccBcc
   cccccc...cccccc
   cB..ccc+ccc..Bc
   c..cc.....cc..c
   c.c+.......+c.c
   ccc....T....ccc
  ccc...p...T...ccc
 cc.c...........c.cc
ccB.+..T..T..T..+.Bcc
 cc.c...........c.cc
  ccc...T...p...ccc
   ccc....T....ccc
   c.c+.......+c.c
   c..cc.....cc..c
   cB..ccc+ccc..Bc
   cccccc...cccccc
        cc.cc
         c.c
          @
ENDMAP

NAME:    grunt_temple_overflow_open
TAGS:    temple_overflow_generic_8 temple_overflow_generic_7
TAGS:    temple_overflow_generic_6 temple_overflow_generic_5
TAGS:    temple_overflow_generic_4 temple_overflow_generic_3
TAGS:    temple_overflow_generic_2
TAGS:    transparent
SHUFFLE: defghijk / efghijkd
{{
  local altarcount = 1
  if is_validating() then
    altarcount = 8
  else
    altarcount = get_overflow_altar_count(_G)
  end
  if altarcount == "1" then
    subst("d = B")
    subst("efghijk = .")
  elseif altarcount == "2" then
    subst("dh = B")
    subst("efgijk = .")
  elseif altarcount == "3" then
    subst("dgi = B")
    subst("efhjk = .")
  elseif altarcount == "4" then
    subst("dfhj = B")
    subst("egik = .")
  elseif altarcount == "5" then
    subst("dfgij = B")
    subst("ehk = .")
  elseif altarcount == "6" then
    subst("defhij = B")
    subst("gk = .")
  elseif altarcount == "7" then
    subst("defghij = B")
    subst("k = .")
  else
    subst("defghijk = B")
  end
}}
SUBST: G = G T V:1 U:1 t:1
MAP
   ...
 ...d...
 .k...e.
.........
.j..G..f.
.........
 .i...g.
 ...h...
   ...
ENDMAP

# Formerly minivault_3; resurrected after being removed way back in late 2009.
NAME:  minitemple
TAGS:  temple_overflow_generic_14 temple_overflow_generic_13
TAGS:  temple_overflow_generic_12 temple_overflow_generic_11
TAGS:  temple_overflow_generic_10 temple_overflow_generic_9
TAGS:  temple_overflow_generic_8 temple_overflow_generic_7
TAGS:  temple_overflow_generic_6 temple_overflow_generic_5
TAGS:  temple_overflow_generic_4 temple_overflow_generic_3
TAGS:  temple_overflow_generic_2
TAGS:  transparent
# The original vault had allow_dup; I think that's overkill.
{{
  local altarcount = get_overflow_altar_count(_G)
  if is_validating() or altarcount == nil then
    altarcount = 14
  end
  nsubst("B : " .. altarcount .. ":B / *:x")
}}
SUBST: x = .:50 c:50 G T t:1 V:1 U:1
MAP
cccccccccccc
cBcBcBcBcBcc
G.c.c.c.c.Bc
@.........Bc
@.........Bc
G.c.c.c.c.Bc
cBcBcBcBcBcc
cccccccccccc
ENDMAP

NAME: nicolae_overflow_hidden_temple
TAGS: temple_overflow_generic_5 temple_overflow_generic_4 temple_overflow_generic_3 \
      temple_overflow_generic_2 temple_overflow_generic_1 no_monster_gen no_descent
{{
  local altarcount = 1
  if is_validating() then
    altarcount = 5
  else
    altarcount = get_overflow_altar_count(_G)
  end
  if altarcount == "1" then
    subst("c = B")
    subst("abde = G")
  elseif altarcount == "2" then
    subst("bd = B")
    subst("ace = G")
  elseif altarcount == "3" then
    shuffle("ae/bd")
    subst("cbd = B")
    subst("ae = G")
  elseif altarcount == "4" then
    subst("abde = B")
    subst("c = G")
  else
    subst("abcde = B")
  end
}}
SUBST: } = })]
MAP
 xxxxxxxxxxxxx
 xxxxaxxxbxxxx
 xxG...G...Gxx
 mm.........mm
@m}.........cm@
 mm.........mm
 xxG...G...Gxx
 xxxxexxxdxxxx
 xxxxxxxxxxxxx
ENDMAP

NAME:    nicolae_overflows_in_rows
TAGS:    temple_overflow_generic_15 temple_overflow_generic_14 \
         temple_overflow_generic_13 temple_overflow_generic_12 \
         temple_overflow_generic_11 temple_overflow_generic_10 \
         temple_overflow_generic_9 transparent allow_dup
# I don't think temple_overflow_generic_15 is ever actually used, but I figured
# I might as well include it in the layout just in case it's used in the future.
{{
  local altarcount = 1
  if is_validating() then
    altarcount = 15
  else
    altarcount = tonumber(get_overflow_altar_count(_G))
  end
  if not altarcount then
    altarcount = 9
  end
  -- altar arrangements by row. rows of 3 have G or T at the ends.
  -- 9: 3/3/3. 10: 3/4/3. 11: 4/3/4. 12: 4/4/4. 13: 4/5/4. 14: 5/4/5. 15: 5/5/5.
  if altarcount >= 13 then
    subst("T=F")
  end
  if altarcount % 2 == 0 then
    subst("T=.")
    subst("F=Z")
    subst("H=F")
    subst("Z=H")
  end
  if altarcount >= 11 then
    subst("G=D")
  end
  if altarcount >= 11 and altarcount <= 13 then
    subst("D=Z")
    subst("E=D")
    subst("Z=E")
  end
}}
SUBST:   DF : B
SHUFFLE: GT
MAP
ccccccccccccc
c...........c
c.GEDEDEDEG.c
.............
..THFHFHFHT..
.............
c.GEDEDEDEG.c
c...........c
ccccccccccccc
ENDMAP

NAME:    nicolae_overflow_hallway_of_the_gods
TAGS:    temple_overflow_generic_11 temple_overflow_generic_10 \
         temple_overflow_generic_9 temple_overflow_generic_8 \
         temple_overflow_generic_7 temple_overflow_generic_6 \
         temple_overflow_generic_5 transparent allow_dup
{{
  local altarcount = 1
  if is_validating() then
    altarcount = 11
  else
    altarcount = tonumber(get_overflow_altar_count(_G))
  end
  if altarcount == 5 then
    subst("DFJ : B")
  elseif altarcount == 6 then
    subst("EHK : B")
  elseif altarcount == 7 then
    shuffle("EFHJK")
    subst("DEFH : B")
  elseif altarcount == 8 then
    shuffle("EFHJK")
    subst("EFHJ : B")
  elseif altarcount == 9 then
    shuffle("FK")
    subst("DEFHJ : B")
  elseif altarcount == 10 then
    subst("EFHJK : B")
  else
    subst("DEFHJK : B")
  end
}}
SUBST:   D : GGTTUt, E : GGTTUt, F : GGTTUt, H : GGTTUt, J : GGTTUt, K : GGTTUt
MAP
ccccccccccc
ccc.....ccc
cc...H...cc
c..J...F..c
c....c....c
c.K.ccc.E.c
c...cc....c
c@@@c..D..c@@@c
    c....cc...c
    c.E.ccc.K.c
    c....c....c
    c..F...J..c
    cc...H...cc
    ccc.....ccc
    ccccccccccc
ENDMAP

NAME:   chequers_temple_overflow_statue_of_worship
TAGS:   temple_overflow_generic_2 temple_overflow_generic_3
TAGS:   temple_overflow_generic_4 transparent
{{
  local altarcount = get_overflow_altar_count(_G)
  if altarcount == nil then
    altarcount = "2"
  end
  if altarcount == "2" then
    subst("C = .")
  else
    subst("C = B")
  end
  nsubst("B = " .. altarcount .. ":B / *:.")
}}
MAP
.....
..C..
.BGB.
..C..
.....
ENDMAP

NAME:  chequers_temple_overflow_minitemple
TAGS:  temple_overflow_generic_5 temple_overflow_generic_4
TAGS:  temple_overflow_generic_3
TAGS:  transparent
{{
  local altarcount = get_overflow_altar_count(_G)
  if is_validating() or altarcount == nil then
    altarcount = 5
  end
  nsubst("O = " .. altarcount .. ":B / *:l")
}}
KFEAT: l = altar_ecumenical
MAP
        @
       c+c
   ccccc.ccccc
  cc.........cc
ccc..ccccccc..ccc
cO..cccO.Occc..Oc
ccc..cc...cc..ccc
  cc.........cc
   cccc...cccc
      ccOcc
       ccc
ENDMAP

NAME: gammafunk_temple_overflow_arena
TAGS: temple_overflow_generic_3 temple_overflow_generic_2
TAGS: temple_overflow_generic_1 no_monster_gen no_trap_gen no_tele_into no_descent
WEIGHT: 1
{{
  local altarcount = 3
  if not is_validating() then
    altarcount = tonumber(get_overflow_altar_count(_G))
  end
  if altarcount == 1 then
    subst("h = a")
  elseif altarcount == 2 then
    subst("B = a")
  end
}}
SUBST: a = |*%$ .:80, 0 = 09., h = B, i : x., j : x., x : bcvx
NSUBST: R = R / .
MARKER: P = lua:transp_loc("temple_overflow_arena_entry")
MARKER: Q = lua:transp_dest_loc("temple_overflow_arena_entry")
MARKER: R = lua:transp_loc("temple_overflow_arena_exit")
MARKER: S = lua:transp_dest_loc("temple_overflow_arena_exit")
MAP
  ...........
 ..nnnnnnnnn..
 .nn0..R...nn.
 .nG.ji0ij.Gn.
 .n..ij.ji%$n.
..n......8*hn..
@Pn..Q....$BnS@
..n......9*hn..
 .n..ij.ji%$n.
 .nG.ji0ij.Gn.
 .nn0..R...nn.
 ..nnnnnnnnn..
  ...........
ENDMAP
